// Generated code for Python source for module 'numpy.add_newdocs'
// created by Nuitka version 0.5.5.3

// This code is in part copyright 2014 Kay Hayen.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

#include "nuitka/prelude.hpp"

#include "__helpers.hpp"

// The _module_numpy$add_newdocs is a Python object pointer of module type.

// Note: For full compatability with CPython, every module variable access
// needs to go through it except for cases where the module cannot possibly
// have changed in the mean time.

PyObject *module_numpy$add_newdocs;
PyDictObject *moduledict_numpy$add_newdocs;

// The module constants used
extern PyObject *const_int_0;
extern PyObject *const_str_plain_T;
extern PyObject *const_tuple_empty;
extern PyObject *const_str_plain_at;
extern PyObject *const_str_plain_nd;
extern PyObject *const_str_plain_all;
extern PyObject *const_str_plain_any;
extern PyObject *const_str_plain_dot;
extern PyObject *const_str_plain_max;
extern PyObject *const_str_plain_min;
static PyObject *const_str_plain_nin;
extern PyObject *const_str_plain_num;
extern PyObject *const_str_plain_ptp;
extern PyObject *const_str_plain_put;
extern PyObject *const_str_plain_std;
extern PyObject *const_str_plain_str;
extern PyObject *const_str_plain_sum;
extern PyObject *const_str_plain_var;
extern PyObject *const_str_plain_base;
extern PyObject *const_str_plain_char;
extern PyObject *const_str_plain_clip;
extern PyObject *const_str_plain_conj;
extern PyObject *const_str_plain_copy;
extern PyObject *const_str_plain_data;
extern PyObject *const_str_plain_dump;
extern PyObject *const_str_plain_fill;
extern PyObject *const_str_plain_flat;
extern PyObject *const_str_plain_imag;
extern PyObject *const_str_plain_int8;
extern PyObject *const_str_plain_item;
extern PyObject *const_str_plain_kind;
extern PyObject *const_str_plain_mean;
extern PyObject *const_str_plain_name;
extern PyObject *const_str_plain_ndim;
extern PyObject *const_str_plain_nout;
extern PyObject *const_str_plain_prod;
extern PyObject *const_str_plain_real;
extern PyObject *const_str_plain_size;
extern PyObject *const_str_plain_sort;
extern PyObject *const_str_plain_take;
extern PyObject *const_str_plain_type;
extern PyObject *const_str_plain_vdot;
extern PyObject *const_str_plain_view;
extern PyObject *const_str_plain_array;
extern PyObject *const_str_plain_bool_;
extern PyObject *const_str_plain_descr;
extern PyObject *const_str_plain_dtype;
extern PyObject *const_str_plain_dumps;
extern PyObject *const_str_plain_empty;
extern PyObject *const_str_plain_flags;
extern PyObject *const_str_plain_index;
extern PyObject *const_str_plain_inner;
extern PyObject *const_str_plain_int16;
extern PyObject *const_str_plain_int32;
extern PyObject *const_str_plain_int64;
static PyObject *const_str_plain_iters;
extern PyObject *const_str_plain_mgrid;
extern PyObject *const_str_plain_names;
extern PyObject *const_str_plain_nargs;
extern PyObject *const_str_plain_ogrid;
extern PyObject *const_str_plain_outer;
extern PyObject *const_str_plain_ravel;
extern PyObject *const_str_plain_reset;
extern PyObject *const_str_plain_round;
extern PyObject *const_str_plain_shape;
extern PyObject *const_str_plain_trace;
extern PyObject *const_str_plain_types;
extern PyObject *const_str_plain_ufunc;
extern PyObject *const_str_plain_where;
extern PyObject *const_str_plain_zeros;
extern PyObject *const_str_plain_arange;
extern PyObject *const_str_plain_argmax;
extern PyObject *const_str_plain_argmin;
extern PyObject *const_str_plain_astype;
extern PyObject *const_str_plain_choose;
extern PyObject *const_str_plain_coords;
extern PyObject *const_str_plain_copyto;
extern PyObject *const_str_plain_ctypes;
extern PyObject *const_str_plain_cumsum;
extern PyObject *const_str_plain_einsum;
extern PyObject *const_str_plain_fields;
extern PyObject *const_str_plain_nbytes;
extern PyObject *const_str_plain_nditer;
extern PyObject *const_str_plain_ntypes;
extern PyObject *const_str_plain_reduce;
extern PyObject *const_str_plain_repeat;
extern PyObject *const_str_plain_resize;
extern PyObject *const_str_plain_scalar;
extern PyObject *const_str_plain_tofile;
extern PyObject *const_str_plain_tolist;
extern PyObject *const_str_plain___doc__;
extern PyObject *const_str_plain_argsort;
extern PyObject *const_str_plain_cumprod;
extern PyObject *const_str_plain_flatten;
extern PyObject *const_str_plain_float32;
extern PyObject *const_str_plain_float64;
static PyObject *const_str_plain_float96;
extern PyObject *const_str_plain_generic;
static PyObject *const_str_plain_itemset;
extern PyObject *const_str_plain_lexsort;
extern PyObject *const_str_plain_ndarray;
extern PyObject *const_str_plain_nonzero;
static PyObject *const_str_plain_numiter;
extern PyObject *const_str_plain_object_;
extern PyObject *const_str_plain_putmask;
extern PyObject *const_str_plain_reshape;
extern PyObject *const_str_plain_squeeze;
extern PyObject *const_str_plain_strides;
extern PyObject *const_str_plain___copy__;
extern PyObject *const_str_plain___file__;
extern PyObject *const_str_plain_alterdot;
extern PyObject *const_str_plain_bincount;
extern PyObject *const_str_plain_byteswap;
extern PyObject *const_str_plain_can_cast;
extern PyObject *const_str_plain_compress;
extern PyObject *const_str_plain_diagonal;
extern PyObject *const_str_plain_digitize;
extern PyObject *const_str_plain_division;
extern PyObject *const_str_plain_flatiter;
extern PyObject *const_str_plain_float128;
extern PyObject *const_str_plain_fromfile;
extern PyObject *const_str_plain_fromiter;
extern PyObject *const_str_plain_getfield;
static PyObject *const_str_plain_holidays;
extern PyObject *const_str_plain_identity;
static PyObject *const_str_plain_isnative;
extern PyObject *const_str_plain_itemsize;
static PyObject *const_str_plain_iternext;
extern PyObject *const_str_plain_packbits;
extern PyObject *const_str_plain_reduceat;
extern PyObject *const_str_plain_setfield;
static PyObject *const_str_plain_setflags;
extern PyObject *const_str_plain_subdtype;
extern PyObject *const_str_plain_swapaxes;
extern PyObject *const_str_plain_tostring;
static PyObject *const_str_plain_weekmask;
extern PyObject *const_str_plain___array__;
extern PyObject *const_str_plain_alignment;
extern PyObject *const_str_plain_broadcast;
extern PyObject *const_str_plain_byteorder;
extern PyObject *const_str_plain_complex64;
extern PyObject *const_str_plain_conjugate;
extern PyObject *const_str_plain_correlate;
extern PyObject *const_str_plain_getbuffer;
extern PyObject *const_str_plain_geterrobj;
extern PyObject *const_str_plain_hasobject;
extern PyObject *const_str_plain_is_busday;
extern PyObject *const_str_plain_isbuiltin;
extern PyObject *const_str_plain_newbuffer;
extern PyObject *const_str_plain_partition;
static PyObject *const_str_plain_setasflat;
extern PyObject *const_str_plain_seterrobj;
extern PyObject *const_str_plain_transpose;
extern PyObject *const_str_plain___future__;
extern PyObject *const_str_plain___reduce__;
extern PyObject *const_str_plain_accumulate;
extern PyObject *const_str_plain_add_newdoc;
extern PyObject *const_str_plain_complex128;
static PyObject *const_str_plain_complex256;
extern PyObject *const_str_plain_empty_like;
extern PyObject *const_str_plain_frombuffer;
extern PyObject *const_str_plain_frompyfunc;
extern PyObject *const_str_plain_fromstring;
extern PyObject *const_str_plain_restoredot;
extern PyObject *const_str_plain_unpackbits;
extern PyObject *const_str_plain_add_newdocs;
extern PyObject *const_str_plain_concatenate;
extern PyObject *const_str_plain_debug_print;
static PyObject *const_str_plain_remove_axis;
extern PyObject *const_str_plain_result_type;
extern PyObject *const_str_plain___deepcopy__;
extern PyObject *const_str_plain___setstate__;
extern PyObject *const_str_plain__reconstruct;
extern PyObject *const_str_plain_argpartition;
extern PyObject *const_str_plain_busday_count;
extern PyObject *const_str_plain_newbyteorder;
extern PyObject *const_str_plain_searchsorted;
extern PyObject *const_str_plain_set_typeDict;
extern PyObject *const_str_plain_add_docstring;
extern PyObject *const_str_plain_busday_offset;
extern PyObject *const_str_plain_count_nonzero;
extern PyObject *const_str_plain_promote_types;
extern PyObject *const_str_plain_unravel_index;
extern PyObject *const_str_plain___array_wrap__;
extern PyObject *const_str_plain__as_parameter_;
extern PyObject *const_str_plain_busdaycalendar;
extern PyObject *const_str_plain_print_function;
extern PyObject *const_str_plain_absolute_import;
static PyObject *const_str_plain_isalignedstruct;
extern PyObject *const_str_plain_min_scalar_type;
extern PyObject *const_str_plain_set_numeric_ops;
static PyObject *const_str_plain___array_struct__;
extern PyObject *const_str_plain_add_newdoc_ufunc;
extern PyObject *const_str_plain_may_share_memory;
extern PyObject *const_str_plain___array_prepare__;
extern PyObject *const_str_plain_ravel_multi_index;
extern PyObject *const_str_plain___array_finalize__;
extern PyObject *const_str_plain___array_priority__;
static PyObject *const_str_plain_remove_multi_index;
extern PyObject *const_str_plain___array_interface__;
extern PyObject *const_str_plain_set_string_function;
static PyObject *const_str_plain_enable_external_loop;
extern PyObject *const_str_plain_fastCopyAndTranspose;
static PyObject *const_str_plain__get_ndarray_c_version;
extern PyObject *const_tuple_str_plain_add_newdoc_tuple;
static PyObject *const_str_digest_00eba1502b949d5653483564f27f3f96;
static PyObject *const_str_digest_032113a56a021b3243c78050144fee20;
static PyObject *const_str_digest_038b9038684c5d9736626ade6e2d1f31;
static PyObject *const_str_digest_03962cc39f7fba9cd080946ce0c182f0;
static PyObject *const_str_digest_04a1dda0c164f139c95c15dfc22a4e4d;
static PyObject *const_str_digest_04a63ce2adea6951a5956eb1c53649d5;
static PyObject *const_str_digest_053b1a0242b1e27383092b4d2b989313;
static PyObject *const_str_digest_056fc6c2344abd6fe26ba8cfa87f8e77;
static PyObject *const_str_digest_072e5aadce0bf02ee2cb35cd0fc670c4;
extern PyObject *const_str_digest_074649e893b759031a43f33476401a94;
static PyObject *const_str_digest_0941a09e3390e79f03c2e20c34373c5b;
static PyObject *const_str_digest_09deaec6284ace81e18f5b81c1d04757;
static PyObject *const_str_digest_0a317321980a6180a9b2209254306540;
extern PyObject *const_str_digest_0b4e4303427381d5eb687ef96e3ca993;
static PyObject *const_str_digest_0b50ef073e797b4c43fede7667cbaa1c;
static PyObject *const_str_digest_0cc324197c555695bfccccd4585dfe52;
static PyObject *const_str_digest_0d50f7494894aed495bbc9bdc1b4ccf2;
static PyObject *const_str_digest_0e3f7702fbe755c1ac0db880733e7c07;
static PyObject *const_str_digest_0eb3b27e4bb7003460338d0c842d1ed8;
static PyObject *const_str_digest_1009b807d2ad590c5f98b355d7636ae6;
static PyObject *const_str_digest_10bc0d349640598dea8075bf67122d1d;
static PyObject *const_str_digest_12766056ee9deee7660c3159ca371934;
static PyObject *const_str_digest_1358868064bc6d53fbaf09ac4fd0b872;
static PyObject *const_str_digest_13ca39598ca9f1ae4b2e857009e8282b;
static PyObject *const_str_digest_148404d51380574a1b630ac8d7cbe301;
static PyObject *const_str_digest_15b66b0bb0afc1a75ac6894f7cefce65;
static PyObject *const_str_digest_16013dbb217eddb123665b01ad7a8d79;
static PyObject *const_str_digest_16acfe703ccd15bf469ec7595d4c5739;
static PyObject *const_str_digest_174aede2ff82a76082bfc6cd626d8156;
static PyObject *const_str_digest_1756920e8a2b0c037cbe33c1cbc9f75a;
static PyObject *const_str_digest_1960d5f7247bcaa73d51da9efda29f56;
static PyObject *const_str_digest_1ae4e5b882c811d3784bf075000d7550;
static PyObject *const_str_digest_1e62395f363f49260eeee67805d09a55;
extern PyObject *const_str_digest_2029c2f6a2f548f5a6896adc20b13a55;
static PyObject *const_str_digest_21cd5fd8304d3efe703434847bbfa964;
static PyObject *const_str_digest_21eb62f0291eb21e8911d0db65d46e85;
static PyObject *const_str_digest_222ab61b6e6a2f3e5ff34d320ddd0a6e;
static PyObject *const_str_digest_22c0f69ba1a343a957c94ecc234fdd0a;
static PyObject *const_str_digest_2305035f183ef54bb204548ed9c07925;
extern PyObject *const_str_digest_230a091930a82c5ae47e29610ee98ceb;
static PyObject *const_str_digest_25b754911e77261e2817076c6c7c48f1;
static PyObject *const_str_digest_26ac2e319d74e74a4ce6cef5c1cae7b2;
static PyObject *const_str_digest_27ac952713c2394bf6b17bc992308adf;
static PyObject *const_str_digest_280ee915fc32eab9d8106bcbf1b846d5;
static PyObject *const_str_digest_28328668e8f633a203b673af046c456a;
static PyObject *const_str_digest_2a28d76389ab1431ee23e067f8b4aac7;
static PyObject *const_str_digest_2a41709f9c5c965c12ea74ceef1985a1;
static PyObject *const_str_digest_2afbadb75de43f9037a54e5c2f7c8833;
static PyObject *const_str_digest_2e49599853dc5491e12d185acfaaf459;
static PyObject *const_str_digest_302df085aec850216c342352da229924;
static PyObject *const_str_digest_30a1386a754a57d1f1b9a207e693591e;
static PyObject *const_str_digest_384b2dde7dfc8eccbf066d2489386087;
static PyObject *const_str_digest_38c5a5e18767c92587f0497db1b9f80b;
static PyObject *const_str_digest_39436fba54dc24ff5a8fbdec205b59be;
static PyObject *const_str_digest_3a6134ee353f2f256c42b0711db150ed;
extern PyObject *const_str_digest_3c09aded1adab7d161d8a975ac63ddd7;
static PyObject *const_str_digest_3c2254a8d1af3ea25a37272f8ee02b0b;
static PyObject *const_str_digest_3e63f79ab164ad9907e128864d285dda;
extern PyObject *const_str_digest_3e8d4c5fbc78426f466387c576765620;
static PyObject *const_str_digest_3f1b6dbe9b59666a5845b6d0c968a482;
static PyObject *const_str_digest_3f324069b9d79f118f44e8e0fdf2dace;
static PyObject *const_str_digest_3f5ab0a42237088eddcbcf53bb8f3883;
static PyObject *const_str_digest_3fa93b9471d9ce641ffcf1ba35c70798;
static PyObject *const_str_digest_3ff91e10ed6b8e9118c69266f1910be7;
static PyObject *const_str_digest_3ffe729aca8ed61858103632f03b8327;
static PyObject *const_str_digest_41b8fefbbcf4577213453a4554ffddd6;
static PyObject *const_str_digest_4333eb4a7818d9368cdaa352c664914c;
static PyObject *const_str_digest_447bdf769013ab944eb22405744322a2;
static PyObject *const_str_digest_4579fa181dd1cc3b6f76f41f2bd833f6;
static PyObject *const_str_digest_489ee9da5d529ca5e5b750f73ad8bda9;
static PyObject *const_str_digest_496d44e5c8dbe92f38f6f17f9e7a899d;
static PyObject *const_str_digest_4d8cae4c0d041f65f89b227ac03f8280;
static PyObject *const_str_digest_4eb77c193dcdc852a7c6893b20a10c22;
static PyObject *const_str_digest_513f350303035935fe372cc4f9a101c4;
static PyObject *const_str_digest_51a8f570a85cc2ea3488ddde2e3f5ebe;
static PyObject *const_str_digest_52bdd9679eca9bc963d17c7787b089be;
static PyObject *const_str_digest_52c173c637598b9eb53066cca03354ea;
static PyObject *const_str_digest_5349908683210b8909491b9cb0279275;
static PyObject *const_str_digest_54d77fb640b0406b8d76b2d411690e13;
static PyObject *const_str_digest_5564b30c1246ebc5164fceafda0b7325;
static PyObject *const_str_digest_561da89354d5361aa3cc17a386772234;
static PyObject *const_str_digest_5628e59825cf8b8953c034873f9773a7;
static PyObject *const_str_digest_5641c2091693eec8b66185632f9a3a9c;
static PyObject *const_str_digest_56b04403baebcb754eced9b5174d8280;
static PyObject *const_str_digest_575d3190632c5adf39628d67d2c41f9a;
static PyObject *const_str_digest_58e5aa5f8666ace979455a78b20d902c;
static PyObject *const_str_digest_5be529d26b6b4237e233e6ea62f494b3;
static PyObject *const_str_digest_5da9c283d952b79495c7e69aa954c73e;
static PyObject *const_str_digest_5e7d71a72bc819df62fdca5299e43c57;
static PyObject *const_str_digest_5f4f358829eed338df184bb9b494a31b;
static PyObject *const_str_digest_60942448ddcf05011fad74add0dc08f8;
static PyObject *const_str_digest_60b6f39c3d7b9597503a0074af3401de;
static PyObject *const_str_digest_6353f620f45fab96b9d6fb7d58a9e3c5;
static PyObject *const_str_digest_64d2e1d2b4d99b0d49c0164f541f2d61;
static PyObject *const_str_digest_6563312a9f8aa92f97088217529edc1a;
static PyObject *const_str_digest_65fc83e171a455f8ed85ba6caf5e88ed;
static PyObject *const_str_digest_66699105ec4850e3deb401c1fd1fd9f2;
static PyObject *const_str_digest_66c47a41c00c8676f72281e05cf3152b;
static PyObject *const_str_digest_676bb7141f31909e874e2fbf3545a613;
static PyObject *const_str_digest_68f2fc9da58f977496cfbecb3e9a1b63;
static PyObject *const_str_digest_6aa966c731204846d6f53e6b0ac82512;
static PyObject *const_str_digest_6aefdbab2e6ba956a6ca3c39fde030aa;
static PyObject *const_str_digest_6cf2179a1ded73b0efccdf872728d471;
static PyObject *const_str_digest_6dcb3dbacc0122f758976ec2ed5f4221;
static PyObject *const_str_digest_6f0370611700873052f15b37ad7c0a45;
static PyObject *const_str_digest_6fcd4d910f0c580920aaa138cefadefd;
static PyObject *const_str_digest_6ff87e09d50bfdcf9ed4cfe4707379fa;
static PyObject *const_str_digest_6ffea2eee88cbbfcf093e63b6681e831;
static PyObject *const_str_digest_70bbd803d59ddc9e3f151db78f028d12;
static PyObject *const_str_digest_74c41d1c81787ff366291849705c2caa;
static PyObject *const_str_digest_753af7faeb58085b57b319f9027a44e5;
static PyObject *const_str_digest_7587e2e4b031d5ccae4fd3191aeac1e4;
static PyObject *const_str_digest_75f91e4806135a7f354a253fd2da5c0b;
static PyObject *const_str_digest_762d3e50dc2c60e27cd22917fdb24ebd;
static PyObject *const_str_digest_767d5f99968bf1712f4b5a056186620e;
static PyObject *const_str_digest_7752b2c6f769d0d08dd92b517169931f;
static PyObject *const_str_digest_79677de40ae1974e6aa497ad9e2a299e;
static PyObject *const_str_digest_79b28d30a8997775a032bc15c59c242b;
static PyObject *const_str_digest_7a4022f5e3b8123daadb557fb7f8e278;
static PyObject *const_str_digest_7a53c412a4f5bc6111891afa807de573;
static PyObject *const_str_digest_7a9ba8669298d5ca5213eb204a236d09;
static PyObject *const_str_digest_7be870dd472ca2f98acdd1fabce88448;
static PyObject *const_str_digest_7cb851f3389929e39052101b8301f35c;
static PyObject *const_str_digest_7d2935431c7c8acad4b68ee54b36a61d;
static PyObject *const_str_digest_7f2d5ced66d836de145954e94d0bd586;
static PyObject *const_str_digest_7fd23d2d2400f6f6d09f172079cbb036;
static PyObject *const_str_digest_7ffefb54b7a4e71f7cacec4f618fa6fc;
static PyObject *const_str_digest_802638ce2efcfe5a86a1f2219a2e135b;
static PyObject *const_str_digest_81b5327da5fa6df51e8e4972fb6b4f58;
static PyObject *const_str_digest_832db00f21f665213aa7e8299041c62a;
static PyObject *const_str_digest_8371f64b8e8709a121fbab20a13e32e9;
static PyObject *const_str_digest_8460032e40562640c646c3b20dbe3a73;
static PyObject *const_str_digest_85246e0763e932149c83d2621fd8fc21;
static PyObject *const_str_digest_864d61a22804259054fb31c2964192e2;
extern PyObject *const_str_digest_8a3551674d9174096d8a003980610b3f;
static PyObject *const_str_digest_8d721815f4eb04337d38f2ca9d263651;
static PyObject *const_str_digest_8d832150e3217000ba89f19a07841fc6;
static PyObject *const_str_digest_8e32e469a8406b80f94754172513b9e5;
static PyObject *const_str_digest_8e9a116570a45560ebdeab72e35471a0;
static PyObject *const_str_digest_9235df84b588a7353ca73a67fe0e4a26;
static PyObject *const_str_digest_929a391db266f9cd3537824479a31e3e;
static PyObject *const_str_digest_93c72dcebe6d41657beac2e44fdb0414;
static PyObject *const_str_digest_93fda3fda7049c22f560d845f87433a4;
static PyObject *const_str_digest_948b5f99f1d298030299d1834128007a;
extern PyObject *const_str_digest_94c347c24ae368650c11346640f548a5;
static PyObject *const_str_digest_969f7329219497cd8ce1bcb0055cb881;
static PyObject *const_str_digest_983e45d9f14c8e4b92b207877e7cabb0;
static PyObject *const_str_digest_9983fdaa872f329124db802cd0c11658;
static PyObject *const_str_digest_9c5d9eae7f1e7974a46aad372cb19734;
static PyObject *const_str_digest_9c9f532ab171e0e4b428b1760be7322f;
static PyObject *const_str_digest_9d59a226b699b53e9e97d1b771b48317;
static PyObject *const_str_digest_a0b4a4a868593833e2030bdf346e86aa;
static PyObject *const_str_digest_a145fc995e585b2e5e26cf5d6d829c80;
static PyObject *const_str_digest_a15b0add10ff5ae2a61d9307630f8b7e;
static PyObject *const_str_digest_a1a3b0d920890d9a63c1896731aa1276;
static PyObject *const_str_digest_a5f0412be9e85347c4bbbb2ba65445ea;
static PyObject *const_str_digest_a665131804d3967bfe84f7b958242999;
static PyObject *const_str_digest_a8e2653fab1179f045de2f1c2d7d30e6;
static PyObject *const_str_digest_a90ba49f05b78c124145313b875607ee;
static PyObject *const_str_digest_a9ad3bd4ba5235281b9fbc96ca5e1329;
static PyObject *const_str_digest_a9c888e44ccfc82082f225adb19e3124;
static PyObject *const_str_digest_aa3e4f331e8b2d95be21b6bd5c9a9f25;
static PyObject *const_str_digest_ab970cf78418b9567ba385cb0836592a;
static PyObject *const_str_digest_abd92491c261be635aa93bc5347a083f;
static PyObject *const_str_digest_abe98f0e3e5e5ae90ac41b76175fc882;
static PyObject *const_str_digest_ad21058020aedd36243f381aa2ebb04b;
static PyObject *const_str_digest_ad70a04a95b5dd018e58e62432ca77af;
static PyObject *const_str_digest_add3f95be50ff8fcc903f547fea3b4ae;
static PyObject *const_str_digest_af34f96c203a074881f0e974c302bede;
static PyObject *const_str_digest_b006d7d1149fe4c530c3dd4538d629bf;
static PyObject *const_str_digest_b2e66add4d69332160dd1390dc13e41e;
static PyObject *const_str_digest_b306dbdfabc0ea8018ff83d3e5ba34ff;
static PyObject *const_str_digest_b6e2f5ed2387cfe5ffe8d54914d1cfee;
static PyObject *const_str_digest_b70e688cc97e9142ef1d16f748707342;
static PyObject *const_str_digest_bad155f8b85e50ebaaa73a3222b45155;
static PyObject *const_str_digest_bb8f8720d97c46c75a107dbb00861dab;
static PyObject *const_str_digest_bc86fc97acb460deaf1229391ef96c1d;
static PyObject *const_str_digest_bcc7e857acf9f2f01a9d6e72bc0c7dfb;
static PyObject *const_str_digest_bcce9f54f26811fcc34996d01797beaf;
static PyObject *const_str_digest_be315a577a97f868f74e975a1dd63e5b;
static PyObject *const_str_digest_bef493cbe2fc34b7cc20f10db1ef6bfb;
static PyObject *const_str_digest_c216acd7dfa75e16121e9c0376c68f63;
static PyObject *const_str_digest_c30fa5963b17836f9c8cb949c256d353;
static PyObject *const_str_digest_c31abcb0819c2698fafa97c9213085fc;
static PyObject *const_str_digest_c40ced7cb49d5f69e8525b1f776d8097;
static PyObject *const_str_digest_c5115b33dc9079608a103d245b7d9839;
static PyObject *const_str_digest_c6dfd49e205163d1c875ab72f5847079;
static PyObject *const_str_digest_c8034cf4ded85ce0e20c7db0a95a1d52;
static PyObject *const_str_digest_c85815685c6ffaed1f1d641f434eaf42;
static PyObject *const_str_digest_cde4ff7b1186a8c89a6a393afe18522e;
static PyObject *const_str_digest_cdeb189b082c634c4784e5063911dba4;
static PyObject *const_str_digest_ce872aa323516ac925a55f3a4594c549;
static PyObject *const_str_digest_cf62142a31180d740590961afca77341;
static PyObject *const_str_digest_cf68f0592c285f5a2fae40cf658e6901;
static PyObject *const_str_digest_d05b1ae9eacab8f67e38d253ad1251c5;
static PyObject *const_str_digest_d1d125baa95ab026d07976348d663929;
static PyObject *const_str_digest_d30d9bb1c871fd4379e61476841f2041;
static PyObject *const_str_digest_d33b15733c5725986a27558769e649e0;
static PyObject *const_str_digest_d4024ad4bf4a50479c365159e2774bf8;
static PyObject *const_str_digest_d634d9ef98cc6cf23dad24d028acd3ca;
static PyObject *const_str_digest_d85a5b7627afd13926ad874b3827fbc2;
static PyObject *const_str_digest_d85be47aefa6b1c629e59b12ad260bca;
static PyObject *const_str_digest_d88946802d7b4f26fd04d95aa8403087;
static PyObject *const_str_digest_d895d3418e116cc8c8c56729f54543f3;
static PyObject *const_str_digest_d8ff76fe3d45537c099dcbae392e507d;
static PyObject *const_str_digest_d9ec493054cfebfd45ea68cc8b4c0bb2;
static PyObject *const_str_digest_da973fd4b9c056ed9402635b817c6064;
static PyObject *const_str_digest_daf43572e3bea65b049fa73909930d07;
static PyObject *const_str_digest_db689bbd8da062e86bfefce405ee4ce7;
static PyObject *const_str_digest_dceb90f721201ca66d6b7d26301e9172;
static PyObject *const_str_digest_e0384186fca294eda17df8baacef0311;
static PyObject *const_str_digest_e0402244adbb8b2e3fe1da6213a6b483;
static PyObject *const_str_digest_e17eef2df53e89eb5de67ee5bf8e7c75;
static PyObject *const_str_digest_e19f2389525af8489cf18a377750d301;
static PyObject *const_str_digest_e2d854a6d3fc9c4e91bc812083b35490;
static PyObject *const_str_digest_e2e3c7ebee7e381fe5069da52e4ce783;
static PyObject *const_str_digest_e313429493723aee2818b55eabfdb6db;
static PyObject *const_str_digest_e44d4ad86aca8c01ebc6b64b718673bb;
static PyObject *const_str_digest_e4fddc9a30089d84ab259479921c8bcb;
static PyObject *const_str_digest_e541c5e631957d0b66a1bb371ca17e97;
static PyObject *const_str_digest_e5449d57b253f51a97d23086515996bd;
static PyObject *const_str_digest_e562c0491971b5ddc336f63baf584c0c;
static PyObject *const_str_digest_e697f2865b725f8da746ce82d4697b8f;
static PyObject *const_str_digest_e6c8dc141d94a856c7d1083ae1974233;
static PyObject *const_str_digest_e860e8fbbaa4d19f20e58ceea30ed723;
static PyObject *const_str_digest_e89203910db0343a69ec9c4fe9b16989;
static PyObject *const_str_digest_eb0507f98a108e550bd6c9fa1f4f4965;
static PyObject *const_str_digest_edf9c894b0824e53430d7b02673039e6;
static PyObject *const_str_digest_efad016bbabf57c22e6dc25901e74a3d;
static PyObject *const_str_digest_f0d9e2e66c0583f9830ecd65f7995493;
static PyObject *const_str_digest_f1a4e000bc858aced6149e7d4d501079;
static PyObject *const_str_digest_f28a072ee8eac2e440e3a7a2dee5cf41;
static PyObject *const_str_digest_f5ed9e6a8b560ec8aa02dc14009c335e;
static PyObject *const_str_digest_fccf91dac621388ec7056847b7be2b33;
static PyObject *const_tuple_0020ee3234d1e5ee27d06074badeb028_tuple;
static PyObject *const_tuple_00bc6892d594665177ab89626ab92220_tuple;
static PyObject *const_tuple_0378df891f16fb015d71ec0711df3ae6_tuple;
static PyObject *const_tuple_07310240c40c3d8cdb399bae26808f1a_tuple;
static PyObject *const_tuple_0843079f4e99f26394f31feeb70ba449_tuple;
static PyObject *const_tuple_1217d71b79efac6e10a172e0ff3aa40f_tuple;
static PyObject *const_tuple_13540797fd094a440255b0b6be4d3e38_tuple;
static PyObject *const_tuple_154901ead6ea245e00b989a7dbd03337_tuple;
static PyObject *const_tuple_168cccda5300501c32420c09725198af_tuple;
static PyObject *const_tuple_1aad8a4f68d578f503ebfeb4e89c613e_tuple;
static PyObject *const_tuple_1e533109502c60c8c44af3d0247baf08_tuple;
static PyObject *const_tuple_1eaf514d614ec32acf40a0074e4b756f_tuple;
static PyObject *const_tuple_23f4a897322d8862a4c354029a7b472a_tuple;
static PyObject *const_tuple_25fd744e31a7a60c3b09b43a7632b54d_tuple;
static PyObject *const_tuple_302259f98bdef0cc48b947aafd235e61_tuple;
static PyObject *const_tuple_399d1fb053cdcdb6c7673b9e798b07bd_tuple;
static PyObject *const_tuple_3cb725c54d87981cd864954898a761e9_tuple;
static PyObject *const_tuple_3d4ee0659d84e79bdc9172bb2f91a450_tuple;
static PyObject *const_tuple_3dd619ec6f7ff3a4a6721a36c2165dbc_tuple;
static PyObject *const_tuple_45a0149f7f16e1f303d1ec3737ceb828_tuple;
static PyObject *const_tuple_496a28f2c89423aa766ed3cf97306f74_tuple;
static PyObject *const_tuple_4d9c0911803c954682040c46cf902039_tuple;
static PyObject *const_tuple_51a4913ad23b1d952ea8ae8814a303e8_tuple;
static PyObject *const_tuple_51b4aa93213c9b07ffd7c474881446dc_tuple;
static PyObject *const_tuple_528ae606cdf01db301387e0b4392ef72_tuple;
static PyObject *const_tuple_567b06640fd1510b8820671304af3401_tuple;
static PyObject *const_tuple_5978e1eecfe46aeb2e3eb25a509b00fa_tuple;
static PyObject *const_tuple_59b84ea352c370c791c9fdc96f24f9dd_tuple;
static PyObject *const_tuple_5c0d913bc3c493855b54029141f469cd_tuple;
static PyObject *const_tuple_5db8241ef79e2f712ccec22d1e90f58f_tuple;
static PyObject *const_tuple_642899665856b8540df0ca61f1b8b8fb_tuple;
static PyObject *const_tuple_6a9ff2a03de7ca52b650f925d8386e8d_tuple;
static PyObject *const_tuple_719203561976685e07141a070d4f40f5_tuple;
static PyObject *const_tuple_724ca32bde9d1d6e878e1ef179ab2103_tuple;
static PyObject *const_tuple_7846297b9dde029e6d264d197e7dcd0b_tuple;
static PyObject *const_tuple_78fdc1d4207a13e9f7e942e52fd65ad9_tuple;
static PyObject *const_tuple_7fa5a5b8b4c6a28db5c548becff7a7ba_tuple;
static PyObject *const_tuple_8bedc337ac31ceb0065097ce57e3e191_tuple;
static PyObject *const_tuple_944d87451e49494d7e19c2d2ac071e0c_tuple;
static PyObject *const_tuple_9a39a2a6363d0291f4af67d3c1fdc6fc_tuple;
static PyObject *const_tuple_9a4874ee1b7692822a4f8212bb1c557a_tuple;
static PyObject *const_tuple_9a74aff70f13f68d5e78dbbf1ba0d2ea_tuple;
static PyObject *const_tuple_a0afff5ea6feedfea62d850efb5c4a60_tuple;
static PyObject *const_tuple_a5a48f725a7776592295423e68270431_tuple;
static PyObject *const_tuple_a8b484a63220f1a7781724126178ca4b_tuple;
static PyObject *const_tuple_a99f64eb8e4a62ccea3fdbb5664ef79a_tuple;
static PyObject *const_tuple_acef84770d3b7f571d00a81a7d8b0978_tuple;
static PyObject *const_tuple_b05a2c219d36f39d06266fc0a67f7f7c_tuple;
static PyObject *const_tuple_b2558c6fef98023770cfb98e68694b1e_tuple;
static PyObject *const_tuple_b27408d30f707d8507cc97d68e4fb8d0_tuple;
extern PyObject *const_tuple_b3c114ff65e5229953139969fd8f9f4c_tuple;
static PyObject *const_tuple_b7045e4aec5c67e8a052a2f9c4cedb09_tuple;
static PyObject *const_tuple_b7bc703b86a64c90150f02816f520d68_tuple;
static PyObject *const_tuple_b8d5311a68b2275cd757a1cc2fa8575d_tuple;
static PyObject *const_tuple_be4e55bf7255a611a0641da1451eeb71_tuple;
static PyObject *const_tuple_bff2b61c4aeb46d9085347f6b8423257_tuple;
static PyObject *const_tuple_c286bcaa8a4d2031c78d2e62e90d77e2_tuple;
static PyObject *const_tuple_c4cab0ead787cb1aa2ee7d4898b1f6c0_tuple;
static PyObject *const_tuple_c55f69ef3434ad11c1ed52bd5f122d0d_tuple;
static PyObject *const_tuple_c667c4e27ea8a275e4b66de02bc68798_tuple;
static PyObject *const_tuple_cb38d29900c6e22e84c1fc0f348afa41_tuple;
static PyObject *const_tuple_ce3a9e15732e7544a8395af2565f59f2_tuple;
static PyObject *const_tuple_cf813f423ced7b80485cb65ecbae367e_tuple;
static PyObject *const_tuple_d0d76a9f61713fe33d2b5e6127f4d883_tuple;
static PyObject *const_tuple_d8af2a6436025a999c5cf49a50118acd_tuple;
static PyObject *const_tuple_d9817fd54a0983f66e9e06ccaa537043_tuple;
static PyObject *const_tuple_db138a78b469a6b7f450d8af75416b4f_tuple;
static PyObject *const_tuple_db387da14d2819ec0b64ddfe31cedfaf_tuple;
static PyObject *const_tuple_dc6a73b1d46856324d0f02e54a8468eb_tuple;
static PyObject *const_tuple_de42d875e42b3789f50701c079e8c1e2_tuple;
static PyObject *const_tuple_e204e99bedd1b028c934fa07927ff822_tuple;
static PyObject *const_tuple_e302f866b0f484a902124534cdcd2f67_tuple;
static PyObject *const_tuple_e8ecfa309dc563fce9833cd9862268c6_tuple;
static PyObject *const_tuple_eb81220d52bec09451c05b382c860c9d_tuple;
static PyObject *const_tuple_ebd5b599bd667fd54e428ffb0551ffca_tuple;
static PyObject *const_tuple_ed25212450d06d88b5e6e7526a8b7e9a_tuple;
static PyObject *const_tuple_f25559e72516c169f61fe445ff2e11d0_tuple;
static PyObject *const_tuple_f5e8791ab77b8d5ce316f9c3b2838f29_tuple;
static PyObject *const_tuple_fe7b8bb69364d874fba1994f9283d25e_tuple;
static PyObject *const_tuple_str_plain_T_str_digest_489ee9da5d529ca5e5b750f73ad8bda9_tuple;
static PyObject *const_tuple_str_plain_T_str_digest_65fc83e171a455f8ed85ba6caf5e88ed_tuple;
static PyObject *const_tuple_str_plain_at_str_digest_bcc7e857acf9f2f01a9d6e72bc0c7dfb_tuple;
static PyObject *const_tuple_str_plain_nd_str_digest_a0b4a4a868593833e2030bdf346e86aa_tuple;
static PyObject *const_tuple_str_plain_all_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_all_str_digest_c5115b33dc9079608a103d245b7d9839_tuple;
static PyObject *const_tuple_str_plain_any_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_any_str_digest_b2e66add4d69332160dd1390dc13e41e_tuple;
static PyObject *const_tuple_str_plain_dot_str_digest_7d2935431c7c8acad4b68ee54b36a61d_tuple;
static PyObject *const_tuple_str_plain_max_str_digest_1ae4e5b882c811d3784bf075000d7550_tuple;
static PyObject *const_tuple_str_plain_max_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_min_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_min_str_digest_cdeb189b082c634c4784e5063911dba4_tuple;
static PyObject *const_tuple_str_plain_nin_str_digest_5e7d71a72bc819df62fdca5299e43c57_tuple;
static PyObject *const_tuple_str_plain_num_str_digest_74c41d1c81787ff366291849705c2caa_tuple;
static PyObject *const_tuple_str_plain_ptp_str_digest_5be529d26b6b4237e233e6ea62f494b3_tuple;
static PyObject *const_tuple_str_plain_ptp_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_put_str_digest_222ab61b6e6a2f3e5ff34d320ddd0a6e_tuple;
static PyObject *const_tuple_str_plain_put_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_std_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_std_str_digest_93c72dcebe6d41657beac2e44fdb0414_tuple;
static PyObject *const_tuple_str_plain_str_str_digest_93fda3fda7049c22f560d845f87433a4_tuple;
static PyObject *const_tuple_str_plain_sum_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_sum_str_digest_f1a4e000bc858aced6149e7d4d501079_tuple;
static PyObject *const_tuple_str_plain_var_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_var_str_digest_948b5f99f1d298030299d1834128007a_tuple;
static PyObject *const_tuple_str_plain_base_str_digest_072e5aadce0bf02ee2cb35cd0fc670c4_tuple;
static PyObject *const_tuple_str_plain_base_str_digest_5f4f358829eed338df184bb9b494a31b_tuple;
static PyObject *const_tuple_str_plain_base_str_digest_e313429493723aee2818b55eabfdb6db_tuple;
static PyObject *const_tuple_str_plain_char_str_digest_f5ed9e6a8b560ec8aa02dc14009c335e_tuple;
static PyObject *const_tuple_str_plain_clip_str_digest_21cd5fd8304d3efe703434847bbfa964_tuple;
static PyObject *const_tuple_str_plain_clip_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_conj_str_digest_0cc324197c555695bfccccd4585dfe52_tuple;
static PyObject *const_tuple_str_plain_copy_str_digest_25b754911e77261e2817076c6c7c48f1_tuple;
static PyObject *const_tuple_str_plain_copy_str_digest_6fcd4d910f0c580920aaa138cefadefd_tuple;
static PyObject *const_tuple_str_plain_copy_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_copy_str_digest_c31abcb0819c2698fafa97c9213085fc_tuple;
static PyObject *const_tuple_str_plain_data_str_digest_7cb851f3389929e39052101b8301f35c_tuple;
static PyObject *const_tuple_str_plain_data_str_digest_8e9a116570a45560ebdeab72e35471a0_tuple;
static PyObject *const_tuple_str_plain_dump_str_digest_561da89354d5361aa3cc17a386772234_tuple;
static PyObject *const_tuple_str_plain_dump_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_fill_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_fill_str_digest_832db00f21f665213aa7e8299041c62a_tuple;
static PyObject *const_tuple_str_plain_flat_str_digest_16acfe703ccd15bf469ec7595d4c5739_tuple;
static PyObject *const_tuple_str_plain_flat_str_digest_60942448ddcf05011fad74add0dc08f8_tuple;
static PyObject *const_tuple_str_plain_imag_str_digest_3f5ab0a42237088eddcbcf53bb8f3883_tuple;
static PyObject *const_tuple_str_plain_imag_str_digest_e44d4ad86aca8c01ebc6b64b718673bb_tuple;
static PyObject *const_tuple_str_plain_item_str_digest_52bdd9679eca9bc963d17c7787b089be_tuple;
static PyObject *const_tuple_str_plain_item_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_kind_str_digest_0b50ef073e797b4c43fede7667cbaa1c_tuple;
static PyObject *const_tuple_str_plain_mean_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_mean_str_digest_79677de40ae1974e6aa497ad9e2a299e_tuple;
static PyObject *const_tuple_str_plain_name_str_digest_6ffea2eee88cbbfcf093e63b6681e831_tuple;
static PyObject *const_tuple_str_plain_ndim_str_digest_9983fdaa872f329124db802cd0c11658_tuple;
static PyObject *const_tuple_str_plain_ndim_str_digest_c85815685c6ffaed1f1d641f434eaf42_tuple;
static PyObject *const_tuple_str_plain_nout_str_digest_b306dbdfabc0ea8018ff83d3e5ba34ff_tuple;
static PyObject *const_tuple_str_plain_prod_str_digest_2a28d76389ab1431ee23e067f8b4aac7_tuple;
static PyObject *const_tuple_str_plain_prod_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_real_str_digest_27ac952713c2394bf6b17bc992308adf_tuple;
static PyObject *const_tuple_str_plain_real_str_digest_39436fba54dc24ff5a8fbdec205b59be_tuple;
static PyObject *const_tuple_str_plain_size_str_digest_3a6134ee353f2f256c42b0711db150ed_tuple;
static PyObject *const_tuple_str_plain_size_str_digest_c216acd7dfa75e16121e9c0376c68f63_tuple;
static PyObject *const_tuple_str_plain_size_str_digest_c40ced7cb49d5f69e8525b1f776d8097_tuple;
static PyObject *const_tuple_str_plain_sort_str_digest_09deaec6284ace81e18f5b81c1d04757_tuple;
static PyObject *const_tuple_str_plain_sort_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_take_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_take_str_digest_d30d9bb1c871fd4379e61476841f2041_tuple;
static PyObject *const_tuple_str_plain_type_str_digest_85246e0763e932149c83d2621fd8fc21_tuple;
static PyObject *const_tuple_str_plain_view_str_digest_51a8f570a85cc2ea3488ddde2e3f5ebe_tuple;
static PyObject *const_tuple_str_plain_view_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_descr_str_digest_6cf2179a1ded73b0efccdf872728d471_tuple;
static PyObject *const_tuple_str_plain_dtype_str_digest_04a1dda0c164f139c95c15dfc22a4e4d_tuple;
static PyObject *const_tuple_str_plain_dtype_str_digest_762d3e50dc2c60e27cd22917fdb24ebd_tuple;
static PyObject *const_tuple_str_plain_dumps_str_digest_0d50f7494894aed495bbc9bdc1b4ccf2_tuple;
static PyObject *const_tuple_str_plain_dumps_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_flags_str_digest_22c0f69ba1a343a957c94ecc234fdd0a_tuple;
static PyObject *const_tuple_str_plain_flags_str_digest_5628e59825cf8b8953c034873f9773a7_tuple;
static PyObject *const_tuple_str_plain_flags_str_digest_929a391db266f9cd3537824479a31e3e_tuple;
static PyObject *const_tuple_str_plain_index_str_digest_1358868064bc6d53fbaf09ac4fd0b872_tuple;
static PyObject *const_tuple_str_plain_index_str_digest_ad70a04a95b5dd018e58e62432ca77af_tuple;
static PyObject *const_tuple_str_plain_iters_str_digest_5564b30c1246ebc5164fceafda0b7325_tuple;
static PyObject *const_tuple_str_plain_names_str_digest_3ff91e10ed6b8e9118c69266f1910be7_tuple;
static PyObject *const_tuple_str_plain_nargs_str_digest_cf62142a31180d740590961afca77341_tuple;
static PyObject *const_tuple_str_plain_outer_str_digest_e541c5e631957d0b66a1bb371ca17e97_tuple;
static PyObject *const_tuple_str_plain_ravel_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_ravel_str_digest_da973fd4b9c056ed9402635b817c6064_tuple;
static PyObject *const_tuple_str_plain_reset_str_digest_676bb7141f31909e874e2fbf3545a613_tuple;
static PyObject *const_tuple_str_plain_reset_str_digest_8d832150e3217000ba89f19a07841fc6_tuple;
static PyObject *const_tuple_str_plain_round_str_digest_00eba1502b949d5653483564f27f3f96_tuple;
static PyObject *const_tuple_str_plain_round_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_shape_str_digest_7a4022f5e3b8123daadb557fb7f8e278_tuple;
static PyObject *const_tuple_str_plain_shape_str_digest_d33b15733c5725986a27558769e649e0_tuple;
static PyObject *const_tuple_str_plain_shape_str_digest_d88946802d7b4f26fd04d95aa8403087_tuple;
static PyObject *const_tuple_str_plain_shape_str_digest_e5449d57b253f51a97d23086515996bd_tuple;
static PyObject *const_tuple_str_plain_trace_str_digest_75f91e4806135a7f354a253fd2da5c0b_tuple;
static PyObject *const_tuple_str_plain_trace_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_types_str_digest_0a317321980a6180a9b2209254306540_tuple;
static PyObject *const_tuple_str_plain_argmax_str_digest_26ac2e319d74e74a4ce6cef5c1cae7b2_tuple;
static PyObject *const_tuple_str_plain_argmax_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_argmin_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_argmin_str_digest_e6c8dc141d94a856c7d1083ae1974233_tuple;
static PyObject *const_tuple_str_plain_astype_str_digest_66c47a41c00c8676f72281e05cf3152b_tuple;
static PyObject *const_tuple_str_plain_astype_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_choose_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_choose_str_digest_f0d9e2e66c0583f9830ecd65f7995493_tuple;
static PyObject *const_tuple_str_plain_coords_str_digest_174aede2ff82a76082bfc6cd626d8156_tuple;
static PyObject *const_tuple_str_plain_ctypes_str_digest_13ca39598ca9f1ae4b2e857009e8282b_tuple;
static PyObject *const_tuple_str_plain_cumsum_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_cumsum_str_digest_daf43572e3bea65b049fa73909930d07_tuple;
static PyObject *const_tuple_str_plain_fields_str_digest_969f7329219497cd8ce1bcb0055cb881_tuple;
static PyObject *const_tuple_str_plain_nbytes_str_digest_0eb3b27e4bb7003460338d0c842d1ed8_tuple;
static PyObject *const_tuple_str_plain_nbytes_str_digest_bb8f8720d97c46c75a107dbb00861dab_tuple;
static PyObject *const_tuple_str_plain_ntypes_str_digest_eb0507f98a108e550bd6c9fa1f4f4965_tuple;
static PyObject *const_tuple_str_plain_reduce_str_digest_52c173c637598b9eb53066cca03354ea_tuple;
static PyObject *const_tuple_str_plain_repeat_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_repeat_str_digest_d895d3418e116cc8c8c56729f54543f3_tuple;
static PyObject *const_tuple_str_plain_resize_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_resize_str_digest_7a53c412a4f5bc6111891afa807de573_tuple;
static PyObject *const_tuple_str_plain_tofile_str_digest_038b9038684c5d9736626ade6e2d1f31_tuple;
static PyObject *const_tuple_str_plain_tofile_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
static PyObject *const_tuple_str_plain_tolist_str_digest_6aa966c731204846d6f53e6b0ac82512_tuple;
static PyObject *const_tuple_str_plain_tolist_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;

static void _initModuleConstants(void)
{
    const_str_plain_nin = UNSTREAM_STRING( &constant_bin[ 4544 ], 3, 1 );
    const_str_plain_iters = UNSTREAM_STRING( &constant_bin[ 452001 ], 5, 1 );
    const_str_plain_float96 = UNSTREAM_STRING( &constant_bin[ 452006 ], 7, 1 );
    const_str_plain_itemset = UNSTREAM_STRING( &constant_bin[ 452013 ], 7, 1 );
    const_str_plain_numiter = UNSTREAM_STRING( &constant_bin[ 452020 ], 7, 1 );
    const_str_plain_holidays = UNSTREAM_STRING( &constant_bin[ 452027 ], 8, 1 );
    const_str_plain_isnative = UNSTREAM_STRING( &constant_bin[ 452035 ], 8, 1 );
    const_str_plain_iternext = UNSTREAM_STRING( &constant_bin[ 452043 ], 8, 1 );
    const_str_plain_setflags = UNSTREAM_STRING( &constant_bin[ 452051 ], 8, 1 );
    const_str_plain_weekmask = UNSTREAM_STRING( &constant_bin[ 452059 ], 8, 1 );
    const_str_plain_setasflat = UNSTREAM_STRING( &constant_bin[ 452067 ], 9, 1 );
    const_str_plain_complex256 = UNSTREAM_STRING( &constant_bin[ 452076 ], 10, 1 );
    const_str_plain_remove_axis = UNSTREAM_STRING( &constant_bin[ 452086 ], 11, 1 );
    const_str_plain_isalignedstruct = UNSTREAM_STRING( &constant_bin[ 452097 ], 15, 1 );
    const_str_plain___array_struct__ = UNSTREAM_STRING( &constant_bin[ 452112 ], 16, 1 );
    const_str_plain_remove_multi_index = UNSTREAM_STRING( &constant_bin[ 452128 ], 18, 1 );
    const_str_plain_enable_external_loop = UNSTREAM_STRING( &constant_bin[ 452146 ], 20, 1 );
    const_str_plain__get_ndarray_c_version = UNSTREAM_STRING( &constant_bin[ 452166 ], 22, 1 );
    const_str_digest_00eba1502b949d5653483564f27f3f96 = UNSTREAM_STRING( &constant_bin[ 452188 ], 234, 0 );
    const_str_digest_032113a56a021b3243c78050144fee20 = UNSTREAM_STRING( &constant_bin[ 452422 ], 1262, 0 );
    const_str_digest_038b9038684c5d9736626ade6e2d1f31 = UNSTREAM_STRING( &constant_bin[ 453684 ], 1164, 0 );
    const_str_digest_03962cc39f7fba9cd080946ce0c182f0 = UNSTREAM_STRING( &constant_bin[ 454848 ], 394, 0 );
    const_str_digest_04a1dda0c164f139c95c15dfc22a4e4d = UNSTREAM_STRING( &constant_bin[ 455242 ], 338, 0 );
    const_str_digest_04a63ce2adea6951a5956eb1c53649d5 = UNSTREAM_STRING( &constant_bin[ 455580 ], 244, 0 );
    const_str_digest_053b1a0242b1e27383092b4d2b989313 = UNSTREAM_STRING( &constant_bin[ 455824 ], 964, 0 );
    const_str_digest_056fc6c2344abd6fe26ba8cfa87f8e77 = UNSTREAM_STRING( &constant_bin[ 456788 ], 24, 0 );
    const_str_digest_072e5aadce0bf02ee2cb35cd0fc670c4 = UNSTREAM_STRING( &constant_bin[ 456812 ], 314, 0 );
    const_str_digest_0941a09e3390e79f03c2e20c34373c5b = UNSTREAM_STRING( &constant_bin[ 457126 ], 1421, 0 );
    const_str_digest_09deaec6284ace81e18f5b81c1d04757 = UNSTREAM_STRING( &constant_bin[ 458547 ], 1359, 0 );
    const_str_digest_0a317321980a6180a9b2209254306540 = UNSTREAM_STRING( &constant_bin[ 459906 ], 1116, 0 );
    const_str_digest_0b50ef073e797b4c43fede7667cbaa1c = UNSTREAM_STRING( &constant_bin[ 461022 ], 85, 0 );
    const_str_digest_0cc324197c555695bfccccd4585dfe52 = UNSTREAM_STRING( &constant_bin[ 461107 ], 181, 0 );
    const_str_digest_0d50f7494894aed495bbc9bdc1b4ccf2 = UNSTREAM_STRING( &constant_bin[ 461288 ], 184, 0 );
    const_str_digest_0e3f7702fbe755c1ac0db880733e7c07 = UNSTREAM_STRING( &constant_bin[ 461472 ], 39, 0 );
    const_str_digest_0eb3b27e4bb7003460338d0c842d1ed8 = UNSTREAM_STRING( &constant_bin[ 461511 ], 34, 0 );
    const_str_digest_1009b807d2ad590c5f98b355d7636ae6 = UNSTREAM_STRING( &constant_bin[ 461545 ], 1677, 0 );
    const_str_digest_10bc0d349640598dea8075bf67122d1d = UNSTREAM_STRING( &constant_bin[ 463222 ], 3160, 0 );
    const_str_digest_12766056ee9deee7660c3159ca371934 = UNSTREAM_STRING( &constant_bin[ 466382 ], 35, 0 );
    const_str_digest_1358868064bc6d53fbaf09ac4fd0b872 = UNSTREAM_STRING( &constant_bin[ 466417 ], 201, 0 );
    const_str_digest_13ca39598ca9f1ae4b2e857009e8282b = UNSTREAM_STRING( &constant_bin[ 466618 ], 4289, 0 );
    const_str_digest_148404d51380574a1b630ac8d7cbe301 = UNSTREAM_STRING( &constant_bin[ 470907 ], 286, 0 );
    const_str_digest_15b66b0bb0afc1a75ac6894f7cefce65 = UNSTREAM_STRING( &constant_bin[ 471193 ], 97, 0 );
    const_str_digest_16013dbb217eddb123665b01ad7a8d79 = UNSTREAM_STRING( &constant_bin[ 471290 ], 55, 0 );
    const_str_digest_16acfe703ccd15bf469ec7595d4c5739 = UNSTREAM_STRING( &constant_bin[ 471345 ], 748, 0 );
    const_str_digest_174aede2ff82a76082bfc6cd626d8156 = UNSTREAM_STRING( &constant_bin[ 472093 ], 225, 0 );
    const_str_digest_1756920e8a2b0c037cbe33c1cbc9f75a = UNSTREAM_STRING( &constant_bin[ 472318 ], 817, 0 );
    const_str_digest_1960d5f7247bcaa73d51da9efda29f56 = UNSTREAM_STRING( &constant_bin[ 473135 ], 986, 0 );
    const_str_digest_1ae4e5b882c811d3784bf075000d7550 = UNSTREAM_STRING( &constant_bin[ 474121 ], 196, 0 );
    const_str_digest_1e62395f363f49260eeee67805d09a55 = UNSTREAM_STRING( &constant_bin[ 474317 ], 2513, 0 );
    const_str_digest_21cd5fd8304d3efe703434847bbfa964 = UNSTREAM_STRING( &constant_bin[ 476830 ], 225, 0 );
    const_str_digest_21eb62f0291eb21e8911d0db65d46e85 = UNSTREAM_STRING( &constant_bin[ 477055 ], 95, 0 );
    const_str_digest_222ab61b6e6a2f3e5ff34d320ddd0a6e = UNSTREAM_STRING( &constant_bin[ 477150 ], 219, 0 );
    const_str_digest_22c0f69ba1a343a957c94ecc234fdd0a = UNSTREAM_STRING( &constant_bin[ 477369 ], 2990, 0 );
    const_str_digest_2305035f183ef54bb204548ed9c07925 = UNSTREAM_STRING( &constant_bin[ 480359 ], 357, 0 );
    const_str_digest_25b754911e77261e2817076c6c7c48f1 = UNSTREAM_STRING( &constant_bin[ 480716 ], 254, 0 );
    const_str_digest_26ac2e319d74e74a4ce6cef5c1cae7b2 = UNSTREAM_STRING( &constant_bin[ 480970 ], 223, 0 );
    const_str_digest_27ac952713c2394bf6b17bc992308adf = UNSTREAM_STRING( &constant_bin[ 481193 ], 258, 0 );
    const_str_digest_280ee915fc32eab9d8106bcbf1b846d5 = UNSTREAM_STRING( &constant_bin[ 481451 ], 2337, 0 );
    const_str_digest_28328668e8f633a203b673af046c456a = UNSTREAM_STRING( &constant_bin[ 483788 ], 2507, 0 );
    const_str_digest_2a28d76389ab1431ee23e067f8b4aac7 = UNSTREAM_STRING( &constant_bin[ 486295 ], 231, 0 );
    const_str_digest_2a41709f9c5c965c12ea74ceef1985a1 = UNSTREAM_STRING( &constant_bin[ 486526 ], 806, 0 );
    const_str_digest_2afbadb75de43f9037a54e5c2f7c8833 = UNSTREAM_STRING( &constant_bin[ 487332 ], 117, 0 );
    const_str_digest_2e49599853dc5491e12d185acfaaf459 = UNSTREAM_STRING( &constant_bin[ 487449 ], 2215, 0 );
    const_str_digest_302df085aec850216c342352da229924 = UNSTREAM_STRING( &constant_bin[ 489664 ], 2384, 0 );
    const_str_digest_30a1386a754a57d1f1b9a207e693591e = UNSTREAM_STRING( &constant_bin[ 492048 ], 2249, 0 );
    const_str_digest_384b2dde7dfc8eccbf066d2489386087 = UNSTREAM_STRING( &constant_bin[ 494297 ], 83, 0 );
    const_str_digest_38c5a5e18767c92587f0497db1b9f80b = UNSTREAM_STRING( &constant_bin[ 494380 ], 28, 0 );
    const_str_digest_39436fba54dc24ff5a8fbdec205b59be = UNSTREAM_STRING( &constant_bin[ 494408 ], 28, 0 );
    const_str_digest_3a6134ee353f2f256c42b0711db150ed = UNSTREAM_STRING( &constant_bin[ 494436 ], 38, 0 );
    const_str_digest_3c2254a8d1af3ea25a37272f8ee02b0b = UNSTREAM_STRING( &constant_bin[ 494474 ], 361, 0 );
    const_str_digest_3e63f79ab164ad9907e128864d285dda = UNSTREAM_STRING( &constant_bin[ 494835 ], 4328, 0 );
    const_str_digest_3f1b6dbe9b59666a5845b6d0c968a482 = UNSTREAM_STRING( &constant_bin[ 499163 ], 224, 0 );
    const_str_digest_3f324069b9d79f118f44e8e0fdf2dace = UNSTREAM_STRING( &constant_bin[ 499387 ], 2394, 0 );
    const_str_digest_3f5ab0a42237088eddcbcf53bb8f3883 = UNSTREAM_STRING( &constant_bin[ 501781 ], 199, 0 );
    const_str_digest_3fa93b9471d9ce641ffcf1ba35c70798 = UNSTREAM_STRING( &constant_bin[ 501980 ], 841, 0 );
    const_str_digest_3ff91e10ed6b8e9118c69266f1910be7 = UNSTREAM_STRING( &constant_bin[ 502821 ], 375, 0 );
    const_str_digest_3ffe729aca8ed61858103632f03b8327 = UNSTREAM_STRING( &constant_bin[ 503196 ], 83, 0 );
    const_str_digest_41b8fefbbcf4577213453a4554ffddd6 = UNSTREAM_STRING( &constant_bin[ 503279 ], 6632, 0 );
    const_str_digest_4333eb4a7818d9368cdaa352c664914c = UNSTREAM_STRING( &constant_bin[ 509911 ], 1544, 0 );
    const_str_digest_447bdf769013ab944eb22405744322a2 = UNSTREAM_STRING( &constant_bin[ 511455 ], 1985, 0 );
    const_str_digest_4579fa181dd1cc3b6f76f41f2bd833f6 = UNSTREAM_STRING( &constant_bin[ 513440 ], 435, 0 );
    const_str_digest_489ee9da5d529ca5e5b750f73ad8bda9 = UNSTREAM_STRING( &constant_bin[ 513875 ], 392, 0 );
    const_str_digest_496d44e5c8dbe92f38f6f17f9e7a899d = UNSTREAM_STRING( &constant_bin[ 514267 ], 114, 0 );
    const_str_digest_4d8cae4c0d041f65f89b227ac03f8280 = UNSTREAM_STRING( &constant_bin[ 514381 ], 312, 0 );
    const_str_digest_4eb77c193dcdc852a7c6893b20a10c22 = UNSTREAM_STRING( &constant_bin[ 514693 ], 85, 0 );
    const_str_digest_513f350303035935fe372cc4f9a101c4 = UNSTREAM_STRING( &constant_bin[ 514778 ], 113, 0 );
    const_str_digest_51a8f570a85cc2ea3488ddde2e3f5ebe = UNSTREAM_STRING( &constant_bin[ 514891 ], 3317, 0 );
    const_str_digest_52bdd9679eca9bc963d17c7787b089be = UNSTREAM_STRING( &constant_bin[ 518208 ], 1673, 0 );
    const_str_digest_52c173c637598b9eb53066cca03354ea = UNSTREAM_STRING( &constant_bin[ 519881 ], 2861, 0 );
    const_str_digest_5349908683210b8909491b9cb0279275 = UNSTREAM_STRING( &constant_bin[ 522742 ], 499, 0 );
    const_str_digest_54d77fb640b0406b8d76b2d411690e13 = UNSTREAM_STRING( &constant_bin[ 523241 ], 1378, 0 );
    const_str_digest_5564b30c1246ebc5164fceafda0b7325 = UNSTREAM_STRING( &constant_bin[ 524619 ], 395, 0 );
    const_str_digest_561da89354d5361aa3cc17a386772234 = UNSTREAM_STRING( &constant_bin[ 525014 ], 221, 0 );
    const_str_digest_5628e59825cf8b8953c034873f9773a7 = UNSTREAM_STRING( &constant_bin[ 525235 ], 27, 0 );
    const_str_digest_5641c2091693eec8b66185632f9a3a9c = UNSTREAM_STRING( &constant_bin[ 525262 ], 1443, 0 );
    const_str_digest_56b04403baebcb754eced9b5174d8280 = UNSTREAM_STRING( &constant_bin[ 526705 ], 63, 0 );
    const_str_digest_575d3190632c5adf39628d67d2c41f9a = UNSTREAM_STRING( &constant_bin[ 526768 ], 1204, 0 );
    const_str_digest_58e5aa5f8666ace979455a78b20d902c = UNSTREAM_STRING( &constant_bin[ 527972 ], 289, 0 );
    const_str_digest_5be529d26b6b4237e233e6ea62f494b3 = UNSTREAM_STRING( &constant_bin[ 528261 ], 214, 0 );
    const_str_digest_5da9c283d952b79495c7e69aa954c73e = UNSTREAM_STRING( &constant_bin[ 528475 ], 202, 0 );
    const_str_digest_5e7d71a72bc819df62fdca5299e43c57 = UNSTREAM_STRING( &constant_bin[ 528677 ], 247, 0 );
    const_str_digest_5f4f358829eed338df184bb9b494a31b = UNSTREAM_STRING( &constant_bin[ 528924 ], 160, 0 );
    const_str_digest_60942448ddcf05011fad74add0dc08f8 = UNSTREAM_STRING( &constant_bin[ 529084 ], 25, 0 );
    const_str_digest_60b6f39c3d7b9597503a0074af3401de = UNSTREAM_STRING( &constant_bin[ 529109 ], 59, 0 );
    const_str_digest_6353f620f45fab96b9d6fb7d58a9e3c5 = UNSTREAM_STRING( &constant_bin[ 529168 ], 182, 0 );
    const_str_digest_64d2e1d2b4d99b0d49c0164f541f2d61 = UNSTREAM_STRING( &constant_bin[ 529350 ], 236, 0 );
    const_str_digest_6563312a9f8aa92f97088217529edc1a = UNSTREAM_STRING( &constant_bin[ 529586 ], 2055, 0 );
    const_str_digest_65fc83e171a455f8ed85ba6caf5e88ed = UNSTREAM_STRING( &constant_bin[ 531641 ], 319, 0 );
    const_str_digest_66699105ec4850e3deb401c1fd1fd9f2 = UNSTREAM_STRING( &constant_bin[ 531960 ], 261, 0 );
    const_str_digest_66c47a41c00c8676f72281e05cf3152b = UNSTREAM_STRING( &constant_bin[ 532221 ], 2223, 0 );
    const_str_digest_676bb7141f31909e874e2fbf3545a613 = UNSTREAM_STRING( &constant_bin[ 534444 ], 64, 0 );
    const_str_digest_68f2fc9da58f977496cfbecb3e9a1b63 = UNSTREAM_STRING( &constant_bin[ 534508 ], 91, 0 );
    const_str_digest_6aa966c731204846d6f53e6b0ac82512 = UNSTREAM_STRING( &constant_bin[ 534599 ], 633, 0 );
    const_str_digest_6aefdbab2e6ba956a6ca3c39fde030aa = UNSTREAM_STRING( &constant_bin[ 535232 ], 40, 0 );
    const_str_digest_6cf2179a1ded73b0efccdf872728d471 = UNSTREAM_STRING( &constant_bin[ 535272 ], 167, 0 );
    const_str_digest_6dcb3dbacc0122f758976ec2ed5f4221 = UNSTREAM_STRING( &constant_bin[ 535439 ], 2313, 0 );
    const_str_digest_6f0370611700873052f15b37ad7c0a45 = UNSTREAM_STRING( &constant_bin[ 537752 ], 2768, 0 );
    const_str_digest_6fcd4d910f0c580920aaa138cefadefd = UNSTREAM_STRING( &constant_bin[ 540520 ], 284, 0 );
    const_str_digest_6ff87e09d50bfdcf9ed4cfe4707379fa = UNSTREAM_STRING( &constant_bin[ 540804 ], 1823, 0 );
    const_str_digest_6ffea2eee88cbbfcf093e63b6681e831 = UNSTREAM_STRING( &constant_bin[ 542627 ], 116, 0 );
    const_str_digest_70bbd803d59ddc9e3f151db78f028d12 = UNSTREAM_STRING( &constant_bin[ 542743 ], 965, 0 );
    const_str_digest_74c41d1c81787ff366291849705c2caa = UNSTREAM_STRING( &constant_bin[ 543708 ], 132, 0 );
    const_str_digest_753af7faeb58085b57b319f9027a44e5 = UNSTREAM_STRING( &constant_bin[ 543840 ], 198, 0 );
    const_str_digest_7587e2e4b031d5ccae4fd3191aeac1e4 = UNSTREAM_STRING( &constant_bin[ 544038 ], 1100, 0 );
    const_str_digest_75f91e4806135a7f354a253fd2da5c0b = UNSTREAM_STRING( &constant_bin[ 545138 ], 235, 0 );
    const_str_digest_762d3e50dc2c60e27cd22917fdb24ebd = UNSTREAM_STRING( &constant_bin[ 545373 ], 26, 0 );
    const_str_digest_767d5f99968bf1712f4b5a056186620e = UNSTREAM_STRING( &constant_bin[ 545399 ], 319, 0 );
    const_str_digest_7752b2c6f769d0d08dd92b517169931f = UNSTREAM_STRING( &constant_bin[ 545718 ], 89, 0 );
    const_str_digest_79677de40ae1974e6aa497ad9e2a299e = UNSTREAM_STRING( &constant_bin[ 545807 ], 230, 0 );
    const_str_digest_79b28d30a8997775a032bc15c59c242b = UNSTREAM_STRING( &constant_bin[ 546037 ], 961, 0 );
    const_str_digest_7a4022f5e3b8123daadb557fb7f8e278 = UNSTREAM_STRING( &constant_bin[ 546998 ], 26, 0 );
    const_str_digest_7a53c412a4f5bc6111891afa807de573 = UNSTREAM_STRING( &constant_bin[ 547024 ], 2193, 0 );
    const_str_digest_7a9ba8669298d5ca5213eb204a236d09 = UNSTREAM_STRING( &constant_bin[ 549217 ], 229, 0 );
    const_str_digest_7be870dd472ca2f98acdd1fabce88448 = UNSTREAM_STRING( &constant_bin[ 549446 ], 63, 0 );
    const_str_digest_7cb851f3389929e39052101b8301f35c = UNSTREAM_STRING( &constant_bin[ 549509 ], 25, 0 );
    const_str_digest_7d2935431c7c8acad4b68ee54b36a61d = UNSTREAM_STRING( &constant_bin[ 549534 ], 443, 0 );
    const_str_digest_7f2d5ced66d836de145954e94d0bd586 = UNSTREAM_STRING( &constant_bin[ 549977 ], 511, 0 );
    const_str_digest_7fd23d2d2400f6f6d09f172079cbb036 = UNSTREAM_STRING( &constant_bin[ 550488 ], 219, 0 );
    const_str_digest_7ffefb54b7a4e71f7cacec4f618fa6fc = UNSTREAM_STRING( &constant_bin[ 550707 ], 1417, 0 );
    const_str_digest_802638ce2efcfe5a86a1f2219a2e135b = UNSTREAM_STRING( &constant_bin[ 552124 ], 1095, 0 );
    const_str_digest_81b5327da5fa6df51e8e4972fb6b4f58 = UNSTREAM_STRING( &constant_bin[ 553219 ], 2558, 0 );
    const_str_digest_832db00f21f665213aa7e8299041c62a = UNSTREAM_STRING( &constant_bin[ 555777 ], 348, 0 );
    const_str_digest_8371f64b8e8709a121fbab20a13e32e9 = UNSTREAM_STRING( &constant_bin[ 556125 ], 957, 0 );
    const_str_digest_8460032e40562640c646c3b20dbe3a73 = UNSTREAM_STRING( &constant_bin[ 557082 ], 1435, 0 );
    const_str_digest_85246e0763e932149c83d2621fd8fc21 = UNSTREAM_STRING( &constant_bin[ 558517 ], 63, 0 );
    const_str_digest_864d61a22804259054fb31c2964192e2 = UNSTREAM_STRING( &constant_bin[ 558580 ], 30, 0 );
    const_str_digest_8d721815f4eb04337d38f2ca9d263651 = UNSTREAM_STRING( &constant_bin[ 558610 ], 323, 0 );
    const_str_digest_8d832150e3217000ba89f19a07841fc6 = UNSTREAM_STRING( &constant_bin[ 558933 ], 418, 0 );
    const_str_digest_8e32e469a8406b80f94754172513b9e5 = UNSTREAM_STRING( &constant_bin[ 559351 ], 211, 0 );
    const_str_digest_8e9a116570a45560ebdeab72e35471a0 = UNSTREAM_STRING( &constant_bin[ 559562 ], 63, 0 );
    const_str_digest_9235df84b588a7353ca73a67fe0e4a26 = UNSTREAM_STRING( &constant_bin[ 559625 ], 1965, 0 );
    const_str_digest_929a391db266f9cd3537824479a31e3e = UNSTREAM_STRING( &constant_bin[ 561590 ], 376, 0 );
    const_str_digest_93c72dcebe6d41657beac2e44fdb0414 = UNSTREAM_STRING( &constant_bin[ 561966 ], 246, 0 );
    const_str_digest_93fda3fda7049c22f560d845f87433a4 = UNSTREAM_STRING( &constant_bin[ 562212 ], 55, 0 );
    const_str_digest_948b5f99f1d298030299d1834128007a = UNSTREAM_STRING( &constant_bin[ 562267 ], 237, 0 );
    const_str_digest_969f7329219497cd8ce1bcb0055cb881 = UNSTREAM_STRING( &constant_bin[ 562504 ], 855, 0 );
    const_str_digest_983e45d9f14c8e4b92b207877e7cabb0 = UNSTREAM_STRING( &constant_bin[ 334857 ], 5, 0 );
    const_str_digest_9983fdaa872f329124db802cd0c11658 = UNSTREAM_STRING( &constant_bin[ 563359 ], 31, 0 );
    const_str_digest_9c5d9eae7f1e7974a46aad372cb19734 = UNSTREAM_STRING( &constant_bin[ 563390 ], 10303, 0 );
    const_str_digest_9c9f532ab171e0e4b428b1760be7322f = UNSTREAM_STRING( &constant_bin[ 573693 ], 15, 0 );
    const_str_digest_9d59a226b699b53e9e97d1b771b48317 = UNSTREAM_STRING( &constant_bin[ 573708 ], 609, 0 );
    const_str_digest_a0b4a4a868593833e2030bdf346e86aa = UNSTREAM_STRING( &constant_bin[ 574317 ], 201, 0 );
    const_str_digest_a145fc995e585b2e5e26cf5d6d829c80 = UNSTREAM_STRING( &constant_bin[ 574518 ], 214, 0 );
    const_str_digest_a15b0add10ff5ae2a61d9307630f8b7e = UNSTREAM_STRING( &constant_bin[ 574732 ], 689, 0 );
    const_str_digest_a1a3b0d920890d9a63c1896731aa1276 = UNSTREAM_STRING( &constant_bin[ 575421 ], 80, 0 );
    const_str_digest_a5f0412be9e85347c4bbbb2ba65445ea = UNSTREAM_STRING( &constant_bin[ 575501 ], 82, 0 );
    const_str_digest_a665131804d3967bfe84f7b958242999 = UNSTREAM_STRING( &constant_bin[ 575583 ], 404, 0 );
    const_str_digest_a8e2653fab1179f045de2f1c2d7d30e6 = UNSTREAM_STRING( &constant_bin[ 575987 ], 814, 0 );
    const_str_digest_a90ba49f05b78c124145313b875607ee = UNSTREAM_STRING( &constant_bin[ 576801 ], 2132, 0 );
    const_str_digest_a9ad3bd4ba5235281b9fbc96ca5e1329 = UNSTREAM_STRING( &constant_bin[ 578933 ], 39, 0 );
    const_str_digest_a9c888e44ccfc82082f225adb19e3124 = UNSTREAM_STRING( &constant_bin[ 578972 ], 53, 0 );
    const_str_digest_aa3e4f331e8b2d95be21b6bd5c9a9f25 = UNSTREAM_STRING( &constant_bin[ 579025 ], 28, 0 );
    const_str_digest_ab970cf78418b9567ba385cb0836592a = UNSTREAM_STRING( &constant_bin[ 579053 ], 2014, 0 );
    const_str_digest_abd92491c261be635aa93bc5347a083f = UNSTREAM_STRING( &constant_bin[ 581067 ], 1016, 0 );
    const_str_digest_abe98f0e3e5e5ae90ac41b76175fc882 = UNSTREAM_STRING( &constant_bin[ 582083 ], 17, 0 );
    const_str_digest_ad21058020aedd36243f381aa2ebb04b = UNSTREAM_STRING( &constant_bin[ 582100 ], 1109, 0 );
    const_str_digest_ad70a04a95b5dd018e58e62432ca77af = UNSTREAM_STRING( &constant_bin[ 583209 ], 284, 0 );
    const_str_digest_add3f95be50ff8fcc903f547fea3b4ae = UNSTREAM_STRING( &constant_bin[ 583493 ], 2338, 0 );
    const_str_digest_af34f96c203a074881f0e974c302bede = UNSTREAM_STRING( &constant_bin[ 585831 ], 58, 0 );
    const_str_digest_b006d7d1149fe4c530c3dd4538d629bf = UNSTREAM_STRING( &constant_bin[ 585889 ], 1155, 0 );
    const_str_digest_b2e66add4d69332160dd1390dc13e41e = UNSTREAM_STRING( &constant_bin[ 587044 ], 216, 0 );
    const_str_digest_b306dbdfabc0ea8018ff83d3e5ba34ff = UNSTREAM_STRING( &constant_bin[ 587260 ], 357, 0 );
    const_str_digest_b6e2f5ed2387cfe5ffe8d54914d1cfee = UNSTREAM_STRING( &constant_bin[ 587617 ], 1199, 0 );
    const_str_digest_b70e688cc97e9142ef1d16f748707342 = UNSTREAM_STRING( &constant_bin[ 588816 ], 1645, 0 );
    const_str_digest_bad155f8b85e50ebaaa73a3222b45155 = UNSTREAM_STRING( &constant_bin[ 590461 ], 433, 0 );
    const_str_digest_bb8f8720d97c46c75a107dbb00861dab = UNSTREAM_STRING( &constant_bin[ 590894 ], 319, 0 );
    const_str_digest_bc86fc97acb460deaf1229391ef96c1d = UNSTREAM_STRING( &constant_bin[ 591213 ], 861, 0 );
    const_str_digest_bcc7e857acf9f2f01a9d6e72bc0c7dfb = UNSTREAM_STRING( &constant_bin[ 592074 ], 1605, 0 );
    const_str_digest_bcce9f54f26811fcc34996d01797beaf = UNSTREAM_STRING( &constant_bin[ 593679 ], 120, 0 );
    const_str_digest_be315a577a97f868f74e975a1dd63e5b = UNSTREAM_STRING( &constant_bin[ 593799 ], 1067, 0 );
    const_str_digest_bef493cbe2fc34b7cc20f10db1ef6bfb = UNSTREAM_STRING( &constant_bin[ 594866 ], 2042, 0 );
    const_str_digest_c216acd7dfa75e16121e9c0376c68f63 = UNSTREAM_STRING( &constant_bin[ 596908 ], 193, 0 );
    const_str_digest_c30fa5963b17836f9c8cb949c256d353 = UNSTREAM_STRING( &constant_bin[ 597101 ], 1262, 0 );
    const_str_digest_c31abcb0819c2698fafa97c9213085fc = UNSTREAM_STRING( &constant_bin[ 598363 ], 837, 0 );
    const_str_digest_c40ced7cb49d5f69e8525b1f776d8097 = UNSTREAM_STRING( &constant_bin[ 599200 ], 267, 0 );
    const_str_digest_c5115b33dc9079608a103d245b7d9839 = UNSTREAM_STRING( &constant_bin[ 599467 ], 202, 0 );
    const_str_digest_c6dfd49e205163d1c875ab72f5847079 = UNSTREAM_STRING( &constant_bin[ 599669 ], 893, 0 );
    const_str_digest_c8034cf4ded85ce0e20c7db0a95a1d52 = UNSTREAM_STRING( &constant_bin[ 600562 ], 1383, 0 );
    const_str_digest_c85815685c6ffaed1f1d641f434eaf42 = UNSTREAM_STRING( &constant_bin[ 601945 ], 171, 0 );
    const_str_digest_cde4ff7b1186a8c89a6a393afe18522e = UNSTREAM_STRING( &constant_bin[ 602116 ], 1959, 0 );
    const_str_digest_cdeb189b082c634c4784e5063911dba4 = UNSTREAM_STRING( &constant_bin[ 604075 ], 196, 0 );
    const_str_digest_ce872aa323516ac925a55f3a4594c549 = UNSTREAM_STRING( &constant_bin[ 604271 ], 104, 0 );
    const_str_digest_cf62142a31180d740590961afca77341 = UNSTREAM_STRING( &constant_bin[ 604375 ], 425, 0 );
    const_str_digest_cf68f0592c285f5a2fae40cf658e6901 = UNSTREAM_STRING( &constant_bin[ 604800 ], 71, 0 );
    const_str_digest_d05b1ae9eacab8f67e38d253ad1251c5 = UNSTREAM_STRING( &constant_bin[ 604871 ], 1004, 0 );
    const_str_digest_d1d125baa95ab026d07976348d663929 = UNSTREAM_STRING( &constant_bin[ 605875 ], 188, 0 );
    const_str_digest_d30d9bb1c871fd4379e61476841f2041 = UNSTREAM_STRING( &constant_bin[ 606063 ], 251, 0 );
    const_str_digest_d33b15733c5725986a27558769e649e0 = UNSTREAM_STRING( &constant_bin[ 606314 ], 106, 0 );
    const_str_digest_d4024ad4bf4a50479c365159e2774bf8 = UNSTREAM_STRING( &constant_bin[ 606420 ], 57, 0 );
    const_str_digest_d634d9ef98cc6cf23dad24d028acd3ca = UNSTREAM_STRING( &constant_bin[ 606477 ], 53, 0 );
    const_str_digest_d85a5b7627afd13926ad874b3827fbc2 = UNSTREAM_STRING( &constant_bin[ 606530 ], 1280, 0 );
    const_str_digest_d85be47aefa6b1c629e59b12ad260bca = UNSTREAM_STRING( &constant_bin[ 607810 ], 167, 0 );
    const_str_digest_d88946802d7b4f26fd04d95aa8403087 = UNSTREAM_STRING( &constant_bin[ 607977 ], 194, 0 );
    const_str_digest_d895d3418e116cc8c8c56729f54543f3 = UNSTREAM_STRING( &constant_bin[ 608171 ], 192, 0 );
    const_str_digest_d8ff76fe3d45537c099dcbae392e507d = UNSTREAM_STRING( &constant_bin[ 608363 ], 119, 0 );
    const_str_digest_d9ec493054cfebfd45ea68cc8b4c0bb2 = UNSTREAM_STRING( &constant_bin[ 608482 ], 50, 0 );
    const_str_digest_da973fd4b9c056ed9402635b817c6064 = UNSTREAM_STRING( &constant_bin[ 608532 ], 225, 0 );
    const_str_digest_daf43572e3bea65b049fa73909930d07 = UNSTREAM_STRING( &constant_bin[ 608757 ], 240, 0 );
    const_str_digest_db689bbd8da062e86bfefce405ee4ce7 = UNSTREAM_STRING( &constant_bin[ 608997 ], 986, 0 );
    const_str_digest_dceb90f721201ca66d6b7d26301e9172 = UNSTREAM_STRING( &constant_bin[ 609983 ], 2027, 0 );
    const_str_digest_e0384186fca294eda17df8baacef0311 = UNSTREAM_STRING( &constant_bin[ 612010 ], 1738, 0 );
    const_str_digest_e0402244adbb8b2e3fe1da6213a6b483 = UNSTREAM_STRING( &constant_bin[ 613748 ], 244, 0 );
    const_str_digest_e17eef2df53e89eb5de67ee5bf8e7c75 = UNSTREAM_STRING( &constant_bin[ 613992 ], 157, 0 );
    const_str_digest_e19f2389525af8489cf18a377750d301 = UNSTREAM_STRING( &constant_bin[ 614149 ], 233, 0 );
    const_str_digest_e2d854a6d3fc9c4e91bc812083b35490 = UNSTREAM_STRING( &constant_bin[ 614382 ], 225, 0 );
    const_str_digest_e2e3c7ebee7e381fe5069da52e4ce783 = UNSTREAM_STRING( &constant_bin[ 614607 ], 233, 0 );
    const_str_digest_e313429493723aee2818b55eabfdb6db = UNSTREAM_STRING( &constant_bin[ 614840 ], 311, 0 );
    const_str_digest_e44d4ad86aca8c01ebc6b64b718673bb = UNSTREAM_STRING( &constant_bin[ 615151 ], 33, 0 );
    const_str_digest_e4fddc9a30089d84ab259479921c8bcb = UNSTREAM_STRING( &constant_bin[ 615184 ], 358, 0 );
    const_str_digest_e541c5e631957d0b66a1bb371ca17e97 = UNSTREAM_STRING( &constant_bin[ 615542 ], 1363, 0 );
    const_str_digest_e5449d57b253f51a97d23086515996bd = UNSTREAM_STRING( &constant_bin[ 616905 ], 685, 0 );
    const_str_digest_e562c0491971b5ddc336f63baf584c0c = UNSTREAM_STRING( &constant_bin[ 617590 ], 1684, 0 );
    const_str_digest_e697f2865b725f8da746ce82d4697b8f = UNSTREAM_STRING( &constant_bin[ 619274 ], 247, 0 );
    const_str_digest_e6c8dc141d94a856c7d1083ae1974233 = UNSTREAM_STRING( &constant_bin[ 619521 ], 234, 0 );
    const_str_digest_e860e8fbbaa4d19f20e58ceea30ed723 = UNSTREAM_STRING( &constant_bin[ 619755 ], 4137, 0 );
    const_str_digest_e89203910db0343a69ec9c4fe9b16989 = UNSTREAM_STRING( &constant_bin[ 623892 ], 699, 0 );
    const_str_digest_eb0507f98a108e550bd6c9fa1f4f4965 = UNSTREAM_STRING( &constant_bin[ 624591 ], 373, 0 );
    const_str_digest_edf9c894b0824e53430d7b02673039e6 = UNSTREAM_STRING( &constant_bin[ 624964 ], 2487, 0 );
    const_str_digest_efad016bbabf57c22e6dc25901e74a3d = UNSTREAM_STRING( &constant_bin[ 627451 ], 438, 0 );
    const_str_digest_f0d9e2e66c0583f9830ecd65f7995493 = UNSTREAM_STRING( &constant_bin[ 627889 ], 243, 0 );
    const_str_digest_f1a4e000bc858aced6149e7d4d501079 = UNSTREAM_STRING( &constant_bin[ 628132 ], 225, 0 );
    const_str_digest_f28a072ee8eac2e440e3a7a2dee5cf41 = UNSTREAM_STRING( &constant_bin[ 628357 ], 76, 0 );
    const_str_digest_f5ed9e6a8b560ec8aa02dc14009c335e = UNSTREAM_STRING( &constant_bin[ 628433 ], 68, 0 );
    const_str_digest_fccf91dac621388ec7056847b7be2b33 = UNSTREAM_STRING( &constant_bin[ 628501 ], 1557, 0 );
    const_tuple_0020ee3234d1e5ee27d06074badeb028_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_0020ee3234d1e5ee27d06074badeb028_tuple, 0, const_str_plain_isbuiltin ); Py_INCREF( const_str_plain_isbuiltin );
    PyTuple_SET_ITEM( const_tuple_0020ee3234d1e5ee27d06074badeb028_tuple, 1, const_str_digest_1756920e8a2b0c037cbe33c1cbc9f75a ); Py_INCREF( const_str_digest_1756920e8a2b0c037cbe33c1cbc9f75a );
    const_tuple_00bc6892d594665177ab89626ab92220_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_00bc6892d594665177ab89626ab92220_tuple, 0, const_str_plain_remove_axis ); Py_INCREF( const_str_plain_remove_axis );
    PyTuple_SET_ITEM( const_tuple_00bc6892d594665177ab89626ab92220_tuple, 1, const_str_digest_d8ff76fe3d45537c099dcbae392e507d ); Py_INCREF( const_str_digest_d8ff76fe3d45537c099dcbae392e507d );
    const_tuple_0378df891f16fb015d71ec0711df3ae6_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_0378df891f16fb015d71ec0711df3ae6_tuple, 0, const_str_plain_iternext ); Py_INCREF( const_str_plain_iternext );
    PyTuple_SET_ITEM( const_tuple_0378df891f16fb015d71ec0711df3ae6_tuple, 1, const_str_digest_4d8cae4c0d041f65f89b227ac03f8280 ); Py_INCREF( const_str_digest_4d8cae4c0d041f65f89b227ac03f8280 );
    const_tuple_07310240c40c3d8cdb399bae26808f1a_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_07310240c40c3d8cdb399bae26808f1a_tuple, 0, const_str_plain_debug_print ); Py_INCREF( const_str_plain_debug_print );
    PyTuple_SET_ITEM( const_tuple_07310240c40c3d8cdb399bae26808f1a_tuple, 1, const_str_digest_ce872aa323516ac925a55f3a4594c549 ); Py_INCREF( const_str_digest_ce872aa323516ac925a55f3a4594c549 );
    const_tuple_0843079f4e99f26394f31feeb70ba449_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_0843079f4e99f26394f31feeb70ba449_tuple, 0, const_str_plain_identity ); Py_INCREF( const_str_plain_identity );
    PyTuple_SET_ITEM( const_tuple_0843079f4e99f26394f31feeb70ba449_tuple, 1, const_str_digest_8d721815f4eb04337d38f2ca9d263651 ); Py_INCREF( const_str_digest_8d721815f4eb04337d38f2ca9d263651 );
    const_tuple_1217d71b79efac6e10a172e0ff3aa40f_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_1217d71b79efac6e10a172e0ff3aa40f_tuple, 0, const_str_plain_enable_external_loop ); Py_INCREF( const_str_plain_enable_external_loop );
    PyTuple_SET_ITEM( const_tuple_1217d71b79efac6e10a172e0ff3aa40f_tuple, 1, const_str_digest_d1d125baa95ab026d07976348d663929 ); Py_INCREF( const_str_digest_d1d125baa95ab026d07976348d663929 );
    const_tuple_13540797fd094a440255b0b6be4d3e38_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_13540797fd094a440255b0b6be4d3e38_tuple, 0, const_str_plain_swapaxes ); Py_INCREF( const_str_plain_swapaxes );
    PyTuple_SET_ITEM( const_tuple_13540797fd094a440255b0b6be4d3e38_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_154901ead6ea245e00b989a7dbd03337_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_154901ead6ea245e00b989a7dbd03337_tuple, 0, const_str_plain_setasflat ); Py_INCREF( const_str_plain_setasflat );
    PyTuple_SET_ITEM( const_tuple_154901ead6ea245e00b989a7dbd03337_tuple, 1, const_str_digest_e89203910db0343a69ec9c4fe9b16989 ); Py_INCREF( const_str_digest_e89203910db0343a69ec9c4fe9b16989 );
    const_tuple_168cccda5300501c32420c09725198af_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_168cccda5300501c32420c09725198af_tuple, 0, const_str_plain___array_priority__ ); Py_INCREF( const_str_plain___array_priority__ );
    PyTuple_SET_ITEM( const_tuple_168cccda5300501c32420c09725198af_tuple, 1, const_str_digest_9c9f532ab171e0e4b428b1760be7322f ); Py_INCREF( const_str_digest_9c9f532ab171e0e4b428b1760be7322f );
    const_tuple_1aad8a4f68d578f503ebfeb4e89c613e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_1aad8a4f68d578f503ebfeb4e89c613e_tuple, 0, const_str_plain_itemsize ); Py_INCREF( const_str_plain_itemsize );
    PyTuple_SET_ITEM( const_tuple_1aad8a4f68d578f503ebfeb4e89c613e_tuple, 1, const_str_digest_6353f620f45fab96b9d6fb7d58a9e3c5 ); Py_INCREF( const_str_digest_6353f620f45fab96b9d6fb7d58a9e3c5 );
    const_tuple_1e533109502c60c8c44af3d0247baf08_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_1e533109502c60c8c44af3d0247baf08_tuple, 0, const_str_plain___array__ ); Py_INCREF( const_str_plain___array__ );
    PyTuple_SET_ITEM( const_tuple_1e533109502c60c8c44af3d0247baf08_tuple, 1, const_str_digest_04a63ce2adea6951a5956eb1c53649d5 ); Py_INCREF( const_str_digest_04a63ce2adea6951a5956eb1c53649d5 );
    const_tuple_1eaf514d614ec32acf40a0074e4b756f_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_1eaf514d614ec32acf40a0074e4b756f_tuple, 0, const_str_plain_getfield ); Py_INCREF( const_str_plain_getfield );
    PyTuple_SET_ITEM( const_tuple_1eaf514d614ec32acf40a0074e4b756f_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_23f4a897322d8862a4c354029a7b472a_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_23f4a897322d8862a4c354029a7b472a_tuple, 0, const_str_plain_isalignedstruct ); Py_INCREF( const_str_plain_isalignedstruct );
    PyTuple_SET_ITEM( const_tuple_23f4a897322d8862a4c354029a7b472a_tuple, 1, const_str_digest_e19f2389525af8489cf18a377750d301 ); Py_INCREF( const_str_digest_e19f2389525af8489cf18a377750d301 );
    const_tuple_25fd744e31a7a60c3b09b43a7632b54d_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_25fd744e31a7a60c3b09b43a7632b54d_tuple, 0, const_str_plain_strides ); Py_INCREF( const_str_plain_strides );
    PyTuple_SET_ITEM( const_tuple_25fd744e31a7a60c3b09b43a7632b54d_tuple, 1, const_str_digest_0e3f7702fbe755c1ac0db880733e7c07 ); Py_INCREF( const_str_digest_0e3f7702fbe755c1ac0db880733e7c07 );
    const_tuple_302259f98bdef0cc48b947aafd235e61_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_302259f98bdef0cc48b947aafd235e61_tuple, 0, const_str_plain_byteorder ); Py_INCREF( const_str_plain_byteorder );
    PyTuple_SET_ITEM( const_tuple_302259f98bdef0cc48b947aafd235e61_tuple, 1, const_str_digest_1960d5f7247bcaa73d51da9efda29f56 ); Py_INCREF( const_str_digest_1960d5f7247bcaa73d51da9efda29f56 );
    const_tuple_399d1fb053cdcdb6c7673b9e798b07bd_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_399d1fb053cdcdb6c7673b9e798b07bd_tuple, 0, const_str_plain_conjugate ); Py_INCREF( const_str_plain_conjugate );
    PyTuple_SET_ITEM( const_tuple_399d1fb053cdcdb6c7673b9e798b07bd_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_3cb725c54d87981cd864954898a761e9_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_3cb725c54d87981cd864954898a761e9_tuple, 0, const_str_plain_itemsize ); Py_INCREF( const_str_plain_itemsize );
    PyTuple_SET_ITEM( const_tuple_3cb725c54d87981cd864954898a761e9_tuple, 1, const_str_digest_e2d854a6d3fc9c4e91bc812083b35490 ); Py_INCREF( const_str_digest_e2d854a6d3fc9c4e91bc812083b35490 );
    const_tuple_3d4ee0659d84e79bdc9172bb2f91a450_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_3d4ee0659d84e79bdc9172bb2f91a450_tuple, 0, const_str_plain_diagonal ); Py_INCREF( const_str_plain_diagonal );
    PyTuple_SET_ITEM( const_tuple_3d4ee0659d84e79bdc9172bb2f91a450_tuple, 1, const_str_digest_8e32e469a8406b80f94754172513b9e5 ); Py_INCREF( const_str_digest_8e32e469a8406b80f94754172513b9e5 );
    const_tuple_3dd619ec6f7ff3a4a6721a36c2165dbc_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_3dd619ec6f7ff3a4a6721a36c2165dbc_tuple, 0, const_str_plain_nonzero ); Py_INCREF( const_str_plain_nonzero );
    PyTuple_SET_ITEM( const_tuple_3dd619ec6f7ff3a4a6721a36c2165dbc_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_45a0149f7f16e1f303d1ec3737ceb828_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_45a0149f7f16e1f303d1ec3737ceb828_tuple, 0, const_str_plain_remove_multi_index ); Py_INCREF( const_str_plain_remove_multi_index );
    PyTuple_SET_ITEM( const_tuple_45a0149f7f16e1f303d1ec3737ceb828_tuple, 1, const_str_digest_d85be47aefa6b1c629e59b12ad260bca ); Py_INCREF( const_str_digest_d85be47aefa6b1c629e59b12ad260bca );
    const_tuple_496a28f2c89423aa766ed3cf97306f74_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_496a28f2c89423aa766ed3cf97306f74_tuple, 0, const_str_plain___array_prepare__ ); Py_INCREF( const_str_plain___array_prepare__ );
    PyTuple_SET_ITEM( const_tuple_496a28f2c89423aa766ed3cf97306f74_tuple, 1, const_str_digest_f28a072ee8eac2e440e3a7a2dee5cf41 ); Py_INCREF( const_str_digest_f28a072ee8eac2e440e3a7a2dee5cf41 );
    const_tuple_4d9c0911803c954682040c46cf902039_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_4d9c0911803c954682040c46cf902039_tuple, 0, const_str_plain_newbyteorder ); Py_INCREF( const_str_plain_newbyteorder );
    PyTuple_SET_ITEM( const_tuple_4d9c0911803c954682040c46cf902039_tuple, 1, const_str_digest_ad21058020aedd36243f381aa2ebb04b ); Py_INCREF( const_str_digest_ad21058020aedd36243f381aa2ebb04b );
    const_tuple_51a4913ad23b1d952ea8ae8814a303e8_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_51a4913ad23b1d952ea8ae8814a303e8_tuple, 0, const_str_plain_swapaxes ); Py_INCREF( const_str_plain_swapaxes );
    PyTuple_SET_ITEM( const_tuple_51a4913ad23b1d952ea8ae8814a303e8_tuple, 1, const_str_digest_7a9ba8669298d5ca5213eb204a236d09 ); Py_INCREF( const_str_digest_7a9ba8669298d5ca5213eb204a236d09 );
    const_tuple_51b4aa93213c9b07ffd7c474881446dc_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_51b4aa93213c9b07ffd7c474881446dc_tuple, 0, const_str_plain_getfield ); Py_INCREF( const_str_plain_getfield );
    PyTuple_SET_ITEM( const_tuple_51b4aa93213c9b07ffd7c474881446dc_tuple, 1, const_str_digest_b6e2f5ed2387cfe5ffe8d54914d1cfee ); Py_INCREF( const_str_digest_b6e2f5ed2387cfe5ffe8d54914d1cfee );
    const_tuple_528ae606cdf01db301387e0b4392ef72_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_528ae606cdf01db301387e0b4392ef72_tuple, 0, const_str_plain_hasobject ); Py_INCREF( const_str_plain_hasobject );
    PyTuple_SET_ITEM( const_tuple_528ae606cdf01db301387e0b4392ef72_tuple, 1, const_str_digest_4579fa181dd1cc3b6f76f41f2bd833f6 ); Py_INCREF( const_str_digest_4579fa181dd1cc3b6f76f41f2bd833f6 );
    const_tuple_567b06640fd1510b8820671304af3401_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_567b06640fd1510b8820671304af3401_tuple, 0, const_str_plain___array_wrap__ ); Py_INCREF( const_str_plain___array_wrap__ );
    PyTuple_SET_ITEM( const_tuple_567b06640fd1510b8820671304af3401_tuple, 1, const_str_digest_cf68f0592c285f5a2fae40cf658e6901 ); Py_INCREF( const_str_digest_cf68f0592c285f5a2fae40cf658e6901 );
    const_tuple_5978e1eecfe46aeb2e3eb25a509b00fa_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_5978e1eecfe46aeb2e3eb25a509b00fa_tuple, 0, const_str_plain___copy__ ); Py_INCREF( const_str_plain___copy__ );
    PyTuple_SET_ITEM( const_tuple_5978e1eecfe46aeb2e3eb25a509b00fa_tuple, 1, const_str_digest_03962cc39f7fba9cd080946ce0c182f0 ); Py_INCREF( const_str_digest_03962cc39f7fba9cd080946ce0c182f0 );
    const_tuple_59b84ea352c370c791c9fdc96f24f9dd_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_59b84ea352c370c791c9fdc96f24f9dd_tuple, 0, const_str_plain_diagonal ); Py_INCREF( const_str_plain_diagonal );
    PyTuple_SET_ITEM( const_tuple_59b84ea352c370c791c9fdc96f24f9dd_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_5c0d913bc3c493855b54029141f469cd_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_5c0d913bc3c493855b54029141f469cd_tuple, 0, const_str_plain___array_struct__ ); Py_INCREF( const_str_plain___array_struct__ );
    PyTuple_SET_ITEM( const_tuple_5c0d913bc3c493855b54029141f469cd_tuple, 1, const_str_digest_864d61a22804259054fb31c2964192e2 ); Py_INCREF( const_str_digest_864d61a22804259054fb31c2964192e2 );
    const_tuple_5db8241ef79e2f712ccec22d1e90f58f_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_5db8241ef79e2f712ccec22d1e90f58f_tuple, 0, const_str_plain___array__ ); Py_INCREF( const_str_plain___array__ );
    PyTuple_SET_ITEM( const_tuple_5db8241ef79e2f712ccec22d1e90f58f_tuple, 1, const_str_digest_d9ec493054cfebfd45ea68cc8b4c0bb2 ); Py_INCREF( const_str_digest_d9ec493054cfebfd45ea68cc8b4c0bb2 );
    const_tuple_642899665856b8540df0ca61f1b8b8fb_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_642899665856b8540df0ca61f1b8b8fb_tuple, 0, const_str_plain_reshape ); Py_INCREF( const_str_plain_reshape );
    PyTuple_SET_ITEM( const_tuple_642899665856b8540df0ca61f1b8b8fb_tuple, 1, const_str_digest_3f1b6dbe9b59666a5845b6d0c968a482 ); Py_INCREF( const_str_digest_3f1b6dbe9b59666a5845b6d0c968a482 );
    const_tuple_6a9ff2a03de7ca52b650f925d8386e8d_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_6a9ff2a03de7ca52b650f925d8386e8d_tuple, 0, const_str_plain_argsort ); Py_INCREF( const_str_plain_argsort );
    PyTuple_SET_ITEM( const_tuple_6a9ff2a03de7ca52b650f925d8386e8d_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_719203561976685e07141a070d4f40f5_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_719203561976685e07141a070d4f40f5_tuple, 0, const_str_plain_flatten ); Py_INCREF( const_str_plain_flatten );
    PyTuple_SET_ITEM( const_tuple_719203561976685e07141a070d4f40f5_tuple, 1, const_str_digest_a15b0add10ff5ae2a61d9307630f8b7e ); Py_INCREF( const_str_digest_a15b0add10ff5ae2a61d9307630f8b7e );
    const_tuple_724ca32bde9d1d6e878e1ef179ab2103_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_724ca32bde9d1d6e878e1ef179ab2103_tuple, 0, const_str_plain_squeeze ); Py_INCREF( const_str_plain_squeeze );
    PyTuple_SET_ITEM( const_tuple_724ca32bde9d1d6e878e1ef179ab2103_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_7846297b9dde029e6d264d197e7dcd0b_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_7846297b9dde029e6d264d197e7dcd0b_tuple, 0, const_str_plain___deepcopy__ ); Py_INCREF( const_str_plain___deepcopy__ );
    PyTuple_SET_ITEM( const_tuple_7846297b9dde029e6d264d197e7dcd0b_tuple, 1, const_str_digest_21eb62f0291eb21e8911d0db65d46e85 ); Py_INCREF( const_str_digest_21eb62f0291eb21e8911d0db65d46e85 );
    const_tuple_78fdc1d4207a13e9f7e942e52fd65ad9_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_78fdc1d4207a13e9f7e942e52fd65ad9_tuple, 0, const_str_plain_holidays ); Py_INCREF( const_str_plain_holidays );
    PyTuple_SET_ITEM( const_tuple_78fdc1d4207a13e9f7e942e52fd65ad9_tuple, 1, const_str_digest_56b04403baebcb754eced9b5174d8280 ); Py_INCREF( const_str_digest_56b04403baebcb754eced9b5174d8280 );
    const_tuple_7fa5a5b8b4c6a28db5c548becff7a7ba_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_7fa5a5b8b4c6a28db5c548becff7a7ba_tuple, 0, const_str_plain_squeeze ); Py_INCREF( const_str_plain_squeeze );
    PyTuple_SET_ITEM( const_tuple_7fa5a5b8b4c6a28db5c548becff7a7ba_tuple, 1, const_str_digest_a145fc995e585b2e5e26cf5d6d829c80 ); Py_INCREF( const_str_digest_a145fc995e585b2e5e26cf5d6d829c80 );
    const_tuple_8bedc337ac31ceb0065097ce57e3e191_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_8bedc337ac31ceb0065097ce57e3e191_tuple, 0, const_str_plain_transpose ); Py_INCREF( const_str_plain_transpose );
    PyTuple_SET_ITEM( const_tuple_8bedc337ac31ceb0065097ce57e3e191_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_944d87451e49494d7e19c2d2ac071e0c_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_944d87451e49494d7e19c2d2ac071e0c_tuple, 0, const_str_plain_compress ); Py_INCREF( const_str_plain_compress );
    PyTuple_SET_ITEM( const_tuple_944d87451e49494d7e19c2d2ac071e0c_tuple, 1, const_str_digest_64d2e1d2b4d99b0d49c0164f541f2d61 ); Py_INCREF( const_str_digest_64d2e1d2b4d99b0d49c0164f541f2d61 );
    const_tuple_9a39a2a6363d0291f4af67d3c1fdc6fc_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_9a39a2a6363d0291f4af67d3c1fdc6fc_tuple, 0, const_str_plain_itemset ); Py_INCREF( const_str_plain_itemset );
    PyTuple_SET_ITEM( const_tuple_9a39a2a6363d0291f4af67d3c1fdc6fc_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_9a4874ee1b7692822a4f8212bb1c557a_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_9a4874ee1b7692822a4f8212bb1c557a_tuple, 0, const_str_plain_nonzero ); Py_INCREF( const_str_plain_nonzero );
    PyTuple_SET_ITEM( const_tuple_9a4874ee1b7692822a4f8212bb1c557a_tuple, 1, const_str_digest_5da9c283d952b79495c7e69aa954c73e ); Py_INCREF( const_str_digest_5da9c283d952b79495c7e69aa954c73e );
    const_tuple_9a74aff70f13f68d5e78dbbf1ba0d2ea_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_9a74aff70f13f68d5e78dbbf1ba0d2ea_tuple, 0, const_str_plain_cumprod ); Py_INCREF( const_str_plain_cumprod );
    PyTuple_SET_ITEM( const_tuple_9a74aff70f13f68d5e78dbbf1ba0d2ea_tuple, 1, const_str_digest_e697f2865b725f8da746ce82d4697b8f ); Py_INCREF( const_str_digest_e697f2865b725f8da746ce82d4697b8f );
    const_tuple_a0afff5ea6feedfea62d850efb5c4a60_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_a0afff5ea6feedfea62d850efb5c4a60_tuple, 0, const_str_plain_argpartition ); Py_INCREF( const_str_plain_argpartition );
    PyTuple_SET_ITEM( const_tuple_a0afff5ea6feedfea62d850efb5c4a60_tuple, 1, const_str_digest_58e5aa5f8666ace979455a78b20d902c ); Py_INCREF( const_str_digest_58e5aa5f8666ace979455a78b20d902c );
    const_tuple_a5a48f725a7776592295423e68270431_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_a5a48f725a7776592295423e68270431_tuple, 0, const_str_plain_weekmask ); Py_INCREF( const_str_plain_weekmask );
    PyTuple_SET_ITEM( const_tuple_a5a48f725a7776592295423e68270431_tuple, 1, const_str_digest_7be870dd472ca2f98acdd1fabce88448 ); Py_INCREF( const_str_digest_7be870dd472ca2f98acdd1fabce88448 );
    const_tuple_a8b484a63220f1a7781724126178ca4b_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_a8b484a63220f1a7781724126178ca4b_tuple, 0, const_str_plain_setflags ); Py_INCREF( const_str_plain_setflags );
    PyTuple_SET_ITEM( const_tuple_a8b484a63220f1a7781724126178ca4b_tuple, 1, const_str_digest_65fc83e171a455f8ed85ba6caf5e88ed ); Py_INCREF( const_str_digest_65fc83e171a455f8ed85ba6caf5e88ed );
    const_tuple_a99f64eb8e4a62ccea3fdbb5664ef79a_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_a99f64eb8e4a62ccea3fdbb5664ef79a_tuple, 0, const_str_plain_strides ); Py_INCREF( const_str_plain_strides );
    PyTuple_SET_ITEM( const_tuple_a99f64eb8e4a62ccea3fdbb5664ef79a_tuple, 1, const_str_digest_e562c0491971b5ddc336f63baf584c0c ); Py_INCREF( const_str_digest_e562c0491971b5ddc336f63baf584c0c );
    const_tuple_acef84770d3b7f571d00a81a7d8b0978_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_acef84770d3b7f571d00a81a7d8b0978_tuple, 0, const_str_plain_transpose ); Py_INCREF( const_str_plain_transpose );
    PyTuple_SET_ITEM( const_tuple_acef84770d3b7f571d00a81a7d8b0978_tuple, 1, const_str_digest_8460032e40562640c646c3b20dbe3a73 ); Py_INCREF( const_str_digest_8460032e40562640c646c3b20dbe3a73 );
    const_tuple_b05a2c219d36f39d06266fc0a67f7f7c_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_b05a2c219d36f39d06266fc0a67f7f7c_tuple, 0, const_str_plain_setfield ); Py_INCREF( const_str_plain_setfield );
    PyTuple_SET_ITEM( const_tuple_b05a2c219d36f39d06266fc0a67f7f7c_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_b2558c6fef98023770cfb98e68694b1e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_b2558c6fef98023770cfb98e68694b1e_tuple, 0, const_str_plain___array_finalize__ ); Py_INCREF( const_str_plain___array_finalize__ );
    PyTuple_SET_ITEM( const_tuple_b2558c6fef98023770cfb98e68694b1e_tuple, 1, const_str_digest_983e45d9f14c8e4b92b207877e7cabb0 ); Py_INCREF( const_str_digest_983e45d9f14c8e4b92b207877e7cabb0 );
    const_tuple_b27408d30f707d8507cc97d68e4fb8d0_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_b27408d30f707d8507cc97d68e4fb8d0_tuple, 0, const_str_plain_newbyteorder ); Py_INCREF( const_str_plain_newbyteorder );
    PyTuple_SET_ITEM( const_tuple_b27408d30f707d8507cc97d68e4fb8d0_tuple, 1, const_str_digest_9235df84b588a7353ca73a67fe0e4a26 ); Py_INCREF( const_str_digest_9235df84b588a7353ca73a67fe0e4a26 );
    const_tuple_b7045e4aec5c67e8a052a2f9c4cedb09_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_b7045e4aec5c67e8a052a2f9c4cedb09_tuple, 0, const_str_plain_byteswap ); Py_INCREF( const_str_plain_byteswap );
    PyTuple_SET_ITEM( const_tuple_b7045e4aec5c67e8a052a2f9c4cedb09_tuple, 1, const_str_digest_65fc83e171a455f8ed85ba6caf5e88ed ); Py_INCREF( const_str_digest_65fc83e171a455f8ed85ba6caf5e88ed );
    const_tuple_b7bc703b86a64c90150f02816f520d68_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_b7bc703b86a64c90150f02816f520d68_tuple, 0, const_str_plain_partition ); Py_INCREF( const_str_plain_partition );
    PyTuple_SET_ITEM( const_tuple_b7bc703b86a64c90150f02816f520d68_tuple, 1, const_str_digest_e0384186fca294eda17df8baacef0311 ); Py_INCREF( const_str_digest_e0384186fca294eda17df8baacef0311 );
    const_tuple_b8d5311a68b2275cd757a1cc2fa8575d_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_b8d5311a68b2275cd757a1cc2fa8575d_tuple, 0, const_str_plain_accumulate ); Py_INCREF( const_str_plain_accumulate );
    PyTuple_SET_ITEM( const_tuple_b8d5311a68b2275cd757a1cc2fa8575d_tuple, 1, const_str_digest_bef493cbe2fc34b7cc20f10db1ef6bfb ); Py_INCREF( const_str_digest_bef493cbe2fc34b7cc20f10db1ef6bfb );
    const_tuple_be4e55bf7255a611a0641da1451eeb71_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_be4e55bf7255a611a0641da1451eeb71_tuple, 0, const_str_plain_reduceat ); Py_INCREF( const_str_plain_reduceat );
    PyTuple_SET_ITEM( const_tuple_be4e55bf7255a611a0641da1451eeb71_tuple, 1, const_str_digest_10bc0d349640598dea8075bf67122d1d ); Py_INCREF( const_str_digest_10bc0d349640598dea8075bf67122d1d );
    const_tuple_bff2b61c4aeb46d9085347f6b8423257_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_bff2b61c4aeb46d9085347f6b8423257_tuple, 0, const_str_plain___setstate__ ); Py_INCREF( const_str_plain___setstate__ );
    PyTuple_SET_ITEM( const_tuple_bff2b61c4aeb46d9085347f6b8423257_tuple, 1, const_str_digest_e4fddc9a30089d84ab259479921c8bcb ); Py_INCREF( const_str_digest_e4fddc9a30089d84ab259479921c8bcb );
    const_tuple_c286bcaa8a4d2031c78d2e62e90d77e2_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_c286bcaa8a4d2031c78d2e62e90d77e2_tuple, 0, const_str_plain_subdtype ); Py_INCREF( const_str_plain_subdtype );
    PyTuple_SET_ITEM( const_tuple_c286bcaa8a4d2031c78d2e62e90d77e2_tuple, 1, const_str_digest_a665131804d3967bfe84f7b958242999 ); Py_INCREF( const_str_digest_a665131804d3967bfe84f7b958242999 );
    const_tuple_c4cab0ead787cb1aa2ee7d4898b1f6c0_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_c4cab0ead787cb1aa2ee7d4898b1f6c0_tuple, 0, const_str_plain_itemset ); Py_INCREF( const_str_plain_itemset );
    PyTuple_SET_ITEM( const_tuple_c4cab0ead787cb1aa2ee7d4898b1f6c0_tuple, 1, const_str_digest_5641c2091693eec8b66185632f9a3a9c ); Py_INCREF( const_str_digest_5641c2091693eec8b66185632f9a3a9c );
    const_tuple_c55f69ef3434ad11c1ed52bd5f122d0d_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_c55f69ef3434ad11c1ed52bd5f122d0d_tuple, 0, const_str_plain_tostring ); Py_INCREF( const_str_plain_tostring );
    PyTuple_SET_ITEM( const_tuple_c55f69ef3434ad11c1ed52bd5f122d0d_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_c667c4e27ea8a275e4b66de02bc68798_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_c667c4e27ea8a275e4b66de02bc68798_tuple, 0, const_str_plain_tostring ); Py_INCREF( const_str_plain_tostring );
    PyTuple_SET_ITEM( const_tuple_c667c4e27ea8a275e4b66de02bc68798_tuple, 1, const_str_digest_d05b1ae9eacab8f67e38d253ad1251c5 ); Py_INCREF( const_str_digest_d05b1ae9eacab8f67e38d253ad1251c5 );
    const_tuple_cb38d29900c6e22e84c1fc0f348afa41_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_cb38d29900c6e22e84c1fc0f348afa41_tuple, 0, const_str_plain__as_parameter_ ); Py_INCREF( const_str_plain__as_parameter_ );
    PyTuple_SET_ITEM( const_tuple_cb38d29900c6e22e84c1fc0f348afa41_tuple, 1, const_str_digest_496d44e5c8dbe92f38f6f17f9e7a899d ); Py_INCREF( const_str_digest_496d44e5c8dbe92f38f6f17f9e7a899d );
    const_tuple_ce3a9e15732e7544a8395af2565f59f2_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_ce3a9e15732e7544a8395af2565f59f2_tuple, 0, const_str_plain_cumprod ); Py_INCREF( const_str_plain_cumprod );
    PyTuple_SET_ITEM( const_tuple_ce3a9e15732e7544a8395af2565f59f2_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_cf813f423ced7b80485cb65ecbae367e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_cf813f423ced7b80485cb65ecbae367e_tuple, 0, const_str_plain___reduce__ ); Py_INCREF( const_str_plain___reduce__ );
    PyTuple_SET_ITEM( const_tuple_cf813f423ced7b80485cb65ecbae367e_tuple, 1, const_str_digest_a9ad3bd4ba5235281b9fbc96ca5e1329 ); Py_INCREF( const_str_digest_a9ad3bd4ba5235281b9fbc96ca5e1329 );
    const_tuple_d0d76a9f61713fe33d2b5e6127f4d883_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_d0d76a9f61713fe33d2b5e6127f4d883_tuple, 0, const_str_plain_alignment ); Py_INCREF( const_str_plain_alignment );
    PyTuple_SET_ITEM( const_tuple_d0d76a9f61713fe33d2b5e6127f4d883_tuple, 1, const_str_digest_e17eef2df53e89eb5de67ee5bf8e7c75 ); Py_INCREF( const_str_digest_e17eef2df53e89eb5de67ee5bf8e7c75 );
    const_tuple_d8af2a6436025a999c5cf49a50118acd_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_d8af2a6436025a999c5cf49a50118acd_tuple, 0, const_str_plain_searchsorted ); Py_INCREF( const_str_plain_searchsorted );
    PyTuple_SET_ITEM( const_tuple_d8af2a6436025a999c5cf49a50118acd_tuple, 1, const_str_digest_66699105ec4850e3deb401c1fd1fd9f2 ); Py_INCREF( const_str_digest_66699105ec4850e3deb401c1fd1fd9f2 );
    const_tuple_d9817fd54a0983f66e9e06ccaa537043_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_d9817fd54a0983f66e9e06ccaa537043_tuple, 0, const_str_plain_isnative ); Py_INCREF( const_str_plain_isnative );
    PyTuple_SET_ITEM( const_tuple_d9817fd54a0983f66e9e06ccaa537043_tuple, 1, const_str_digest_15b66b0bb0afc1a75ac6894f7cefce65 ); Py_INCREF( const_str_digest_15b66b0bb0afc1a75ac6894f7cefce65 );
    const_tuple_db138a78b469a6b7f450d8af75416b4f_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_db138a78b469a6b7f450d8af75416b4f_tuple, 0, const_str_plain___array_interface__ ); Py_INCREF( const_str_plain___array_interface__ );
    PyTuple_SET_ITEM( const_tuple_db138a78b469a6b7f450d8af75416b4f_tuple, 1, const_str_digest_38c5a5e18767c92587f0497db1b9f80b ); Py_INCREF( const_str_digest_38c5a5e18767c92587f0497db1b9f80b );
    const_tuple_db387da14d2819ec0b64ddfe31cedfaf_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_db387da14d2819ec0b64ddfe31cedfaf_tuple, 0, const_str_plain_conjugate ); Py_INCREF( const_str_plain_conjugate );
    PyTuple_SET_ITEM( const_tuple_db387da14d2819ec0b64ddfe31cedfaf_tuple, 1, const_str_digest_753af7faeb58085b57b319f9027a44e5 ); Py_INCREF( const_str_digest_753af7faeb58085b57b319f9027a44e5 );
    const_tuple_dc6a73b1d46856324d0f02e54a8468eb_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_dc6a73b1d46856324d0f02e54a8468eb_tuple, 0, const_str_plain_compress ); Py_INCREF( const_str_plain_compress );
    PyTuple_SET_ITEM( const_tuple_dc6a73b1d46856324d0f02e54a8468eb_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_de42d875e42b3789f50701c079e8c1e2_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_de42d875e42b3789f50701c079e8c1e2_tuple, 0, const_str_plain_byteswap ); Py_INCREF( const_str_plain_byteswap );
    PyTuple_SET_ITEM( const_tuple_de42d875e42b3789f50701c079e8c1e2_tuple, 1, const_str_digest_bc86fc97acb460deaf1229391ef96c1d ); Py_INCREF( const_str_digest_bc86fc97acb460deaf1229391ef96c1d );
    const_tuple_e204e99bedd1b028c934fa07927ff822_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_e204e99bedd1b028c934fa07927ff822_tuple, 0, const_str_plain_setfield ); Py_INCREF( const_str_plain_setfield );
    PyTuple_SET_ITEM( const_tuple_e204e99bedd1b028c934fa07927ff822_tuple, 1, const_str_digest_575d3190632c5adf39628d67d2c41f9a ); Py_INCREF( const_str_digest_575d3190632c5adf39628d67d2c41f9a );
    const_tuple_e302f866b0f484a902124534cdcd2f67_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_e302f866b0f484a902124534cdcd2f67_tuple, 0, const_str_plain_itemsize ); Py_INCREF( const_str_plain_itemsize );
    PyTuple_SET_ITEM( const_tuple_e302f866b0f484a902124534cdcd2f67_tuple, 1, const_str_digest_12766056ee9deee7660c3159ca371934 ); Py_INCREF( const_str_digest_12766056ee9deee7660c3159ca371934 );
    const_tuple_e8ecfa309dc563fce9833cd9862268c6_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_e8ecfa309dc563fce9833cd9862268c6_tuple, 0, const_str_plain_searchsorted ); Py_INCREF( const_str_plain_searchsorted );
    PyTuple_SET_ITEM( const_tuple_e8ecfa309dc563fce9833cd9862268c6_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_eb81220d52bec09451c05b382c860c9d_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_eb81220d52bec09451c05b382c860c9d_tuple, 0, const_str_plain_newbyteorder ); Py_INCREF( const_str_plain_newbyteorder );
    PyTuple_SET_ITEM( const_tuple_eb81220d52bec09451c05b382c860c9d_tuple, 1, const_str_digest_053b1a0242b1e27383092b4d2b989313 ); Py_INCREF( const_str_digest_053b1a0242b1e27383092b4d2b989313 );
    const_tuple_ebd5b599bd667fd54e428ffb0551ffca_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_ebd5b599bd667fd54e428ffb0551ffca_tuple, 0, const_str_plain_setflags ); Py_INCREF( const_str_plain_setflags );
    PyTuple_SET_ITEM( const_tuple_ebd5b599bd667fd54e428ffb0551ffca_tuple, 1, const_str_digest_6dcb3dbacc0122f758976ec2ed5f4221 ); Py_INCREF( const_str_digest_6dcb3dbacc0122f758976ec2ed5f4221 );
    const_tuple_ed25212450d06d88b5e6e7526a8b7e9a_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_ed25212450d06d88b5e6e7526a8b7e9a_tuple, 0, const_str_plain_reshape ); Py_INCREF( const_str_plain_reshape );
    PyTuple_SET_ITEM( const_tuple_ed25212450d06d88b5e6e7526a8b7e9a_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_f25559e72516c169f61fe445ff2e11d0_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_f25559e72516c169f61fe445ff2e11d0_tuple, 0, const_str_plain_numiter ); Py_INCREF( const_str_plain_numiter );
    PyTuple_SET_ITEM( const_tuple_f25559e72516c169f61fe445ff2e11d0_tuple, 1, const_str_digest_7fd23d2d2400f6f6d09f172079cbb036 ); Py_INCREF( const_str_digest_7fd23d2d2400f6f6d09f172079cbb036 );
    const_tuple_f5e8791ab77b8d5ce316f9c3b2838f29_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_f5e8791ab77b8d5ce316f9c3b2838f29_tuple, 0, const_str_plain_flatten ); Py_INCREF( const_str_plain_flatten );
    PyTuple_SET_ITEM( const_tuple_f5e8791ab77b8d5ce316f9c3b2838f29_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_fe7b8bb69364d874fba1994f9283d25e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_fe7b8bb69364d874fba1994f9283d25e_tuple, 0, const_str_plain_argsort ); Py_INCREF( const_str_plain_argsort );
    PyTuple_SET_ITEM( const_tuple_fe7b8bb69364d874fba1994f9283d25e_tuple, 1, const_str_digest_e2e3c7ebee7e381fe5069da52e4ce783 ); Py_INCREF( const_str_digest_e2e3c7ebee7e381fe5069da52e4ce783 );
    const_tuple_str_plain_T_str_digest_489ee9da5d529ca5e5b750f73ad8bda9_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_T_str_digest_489ee9da5d529ca5e5b750f73ad8bda9_tuple, 0, const_str_plain_T ); Py_INCREF( const_str_plain_T );
    PyTuple_SET_ITEM( const_tuple_str_plain_T_str_digest_489ee9da5d529ca5e5b750f73ad8bda9_tuple, 1, const_str_digest_489ee9da5d529ca5e5b750f73ad8bda9 ); Py_INCREF( const_str_digest_489ee9da5d529ca5e5b750f73ad8bda9 );
    const_tuple_str_plain_T_str_digest_65fc83e171a455f8ed85ba6caf5e88ed_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_T_str_digest_65fc83e171a455f8ed85ba6caf5e88ed_tuple, 0, const_str_plain_T ); Py_INCREF( const_str_plain_T );
    PyTuple_SET_ITEM( const_tuple_str_plain_T_str_digest_65fc83e171a455f8ed85ba6caf5e88ed_tuple, 1, const_str_digest_65fc83e171a455f8ed85ba6caf5e88ed ); Py_INCREF( const_str_digest_65fc83e171a455f8ed85ba6caf5e88ed );
    const_tuple_str_plain_at_str_digest_bcc7e857acf9f2f01a9d6e72bc0c7dfb_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_at_str_digest_bcc7e857acf9f2f01a9d6e72bc0c7dfb_tuple, 0, const_str_plain_at ); Py_INCREF( const_str_plain_at );
    PyTuple_SET_ITEM( const_tuple_str_plain_at_str_digest_bcc7e857acf9f2f01a9d6e72bc0c7dfb_tuple, 1, const_str_digest_bcc7e857acf9f2f01a9d6e72bc0c7dfb ); Py_INCREF( const_str_digest_bcc7e857acf9f2f01a9d6e72bc0c7dfb );
    const_tuple_str_plain_nd_str_digest_a0b4a4a868593833e2030bdf346e86aa_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_nd_str_digest_a0b4a4a868593833e2030bdf346e86aa_tuple, 0, const_str_plain_nd ); Py_INCREF( const_str_plain_nd );
    PyTuple_SET_ITEM( const_tuple_str_plain_nd_str_digest_a0b4a4a868593833e2030bdf346e86aa_tuple, 1, const_str_digest_a0b4a4a868593833e2030bdf346e86aa ); Py_INCREF( const_str_digest_a0b4a4a868593833e2030bdf346e86aa );
    const_tuple_str_plain_all_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_all_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_all ); Py_INCREF( const_str_plain_all );
    PyTuple_SET_ITEM( const_tuple_str_plain_all_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_all_str_digest_c5115b33dc9079608a103d245b7d9839_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_all_str_digest_c5115b33dc9079608a103d245b7d9839_tuple, 0, const_str_plain_all ); Py_INCREF( const_str_plain_all );
    PyTuple_SET_ITEM( const_tuple_str_plain_all_str_digest_c5115b33dc9079608a103d245b7d9839_tuple, 1, const_str_digest_c5115b33dc9079608a103d245b7d9839 ); Py_INCREF( const_str_digest_c5115b33dc9079608a103d245b7d9839 );
    const_tuple_str_plain_any_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_any_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_any ); Py_INCREF( const_str_plain_any );
    PyTuple_SET_ITEM( const_tuple_str_plain_any_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_any_str_digest_b2e66add4d69332160dd1390dc13e41e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_any_str_digest_b2e66add4d69332160dd1390dc13e41e_tuple, 0, const_str_plain_any ); Py_INCREF( const_str_plain_any );
    PyTuple_SET_ITEM( const_tuple_str_plain_any_str_digest_b2e66add4d69332160dd1390dc13e41e_tuple, 1, const_str_digest_b2e66add4d69332160dd1390dc13e41e ); Py_INCREF( const_str_digest_b2e66add4d69332160dd1390dc13e41e );
    const_tuple_str_plain_dot_str_digest_7d2935431c7c8acad4b68ee54b36a61d_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_dot_str_digest_7d2935431c7c8acad4b68ee54b36a61d_tuple, 0, const_str_plain_dot ); Py_INCREF( const_str_plain_dot );
    PyTuple_SET_ITEM( const_tuple_str_plain_dot_str_digest_7d2935431c7c8acad4b68ee54b36a61d_tuple, 1, const_str_digest_7d2935431c7c8acad4b68ee54b36a61d ); Py_INCREF( const_str_digest_7d2935431c7c8acad4b68ee54b36a61d );
    const_tuple_str_plain_max_str_digest_1ae4e5b882c811d3784bf075000d7550_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_max_str_digest_1ae4e5b882c811d3784bf075000d7550_tuple, 0, const_str_plain_max ); Py_INCREF( const_str_plain_max );
    PyTuple_SET_ITEM( const_tuple_str_plain_max_str_digest_1ae4e5b882c811d3784bf075000d7550_tuple, 1, const_str_digest_1ae4e5b882c811d3784bf075000d7550 ); Py_INCREF( const_str_digest_1ae4e5b882c811d3784bf075000d7550 );
    const_tuple_str_plain_max_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_max_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_max ); Py_INCREF( const_str_plain_max );
    PyTuple_SET_ITEM( const_tuple_str_plain_max_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_min_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_min_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_min ); Py_INCREF( const_str_plain_min );
    PyTuple_SET_ITEM( const_tuple_str_plain_min_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_min_str_digest_cdeb189b082c634c4784e5063911dba4_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_min_str_digest_cdeb189b082c634c4784e5063911dba4_tuple, 0, const_str_plain_min ); Py_INCREF( const_str_plain_min );
    PyTuple_SET_ITEM( const_tuple_str_plain_min_str_digest_cdeb189b082c634c4784e5063911dba4_tuple, 1, const_str_digest_cdeb189b082c634c4784e5063911dba4 ); Py_INCREF( const_str_digest_cdeb189b082c634c4784e5063911dba4 );
    const_tuple_str_plain_nin_str_digest_5e7d71a72bc819df62fdca5299e43c57_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_nin_str_digest_5e7d71a72bc819df62fdca5299e43c57_tuple, 0, const_str_plain_nin ); Py_INCREF( const_str_plain_nin );
    PyTuple_SET_ITEM( const_tuple_str_plain_nin_str_digest_5e7d71a72bc819df62fdca5299e43c57_tuple, 1, const_str_digest_5e7d71a72bc819df62fdca5299e43c57 ); Py_INCREF( const_str_digest_5e7d71a72bc819df62fdca5299e43c57 );
    const_tuple_str_plain_num_str_digest_74c41d1c81787ff366291849705c2caa_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_num_str_digest_74c41d1c81787ff366291849705c2caa_tuple, 0, const_str_plain_num ); Py_INCREF( const_str_plain_num );
    PyTuple_SET_ITEM( const_tuple_str_plain_num_str_digest_74c41d1c81787ff366291849705c2caa_tuple, 1, const_str_digest_74c41d1c81787ff366291849705c2caa ); Py_INCREF( const_str_digest_74c41d1c81787ff366291849705c2caa );
    const_tuple_str_plain_ptp_str_digest_5be529d26b6b4237e233e6ea62f494b3_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_ptp_str_digest_5be529d26b6b4237e233e6ea62f494b3_tuple, 0, const_str_plain_ptp ); Py_INCREF( const_str_plain_ptp );
    PyTuple_SET_ITEM( const_tuple_str_plain_ptp_str_digest_5be529d26b6b4237e233e6ea62f494b3_tuple, 1, const_str_digest_5be529d26b6b4237e233e6ea62f494b3 ); Py_INCREF( const_str_digest_5be529d26b6b4237e233e6ea62f494b3 );
    const_tuple_str_plain_ptp_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_ptp_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_ptp ); Py_INCREF( const_str_plain_ptp );
    PyTuple_SET_ITEM( const_tuple_str_plain_ptp_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_put_str_digest_222ab61b6e6a2f3e5ff34d320ddd0a6e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_put_str_digest_222ab61b6e6a2f3e5ff34d320ddd0a6e_tuple, 0, const_str_plain_put ); Py_INCREF( const_str_plain_put );
    PyTuple_SET_ITEM( const_tuple_str_plain_put_str_digest_222ab61b6e6a2f3e5ff34d320ddd0a6e_tuple, 1, const_str_digest_222ab61b6e6a2f3e5ff34d320ddd0a6e ); Py_INCREF( const_str_digest_222ab61b6e6a2f3e5ff34d320ddd0a6e );
    const_tuple_str_plain_put_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_put_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_put ); Py_INCREF( const_str_plain_put );
    PyTuple_SET_ITEM( const_tuple_str_plain_put_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_std_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_std_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_std ); Py_INCREF( const_str_plain_std );
    PyTuple_SET_ITEM( const_tuple_str_plain_std_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_std_str_digest_93c72dcebe6d41657beac2e44fdb0414_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_std_str_digest_93c72dcebe6d41657beac2e44fdb0414_tuple, 0, const_str_plain_std ); Py_INCREF( const_str_plain_std );
    PyTuple_SET_ITEM( const_tuple_str_plain_std_str_digest_93c72dcebe6d41657beac2e44fdb0414_tuple, 1, const_str_digest_93c72dcebe6d41657beac2e44fdb0414 ); Py_INCREF( const_str_digest_93c72dcebe6d41657beac2e44fdb0414 );
    const_tuple_str_plain_str_str_digest_93fda3fda7049c22f560d845f87433a4_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_str_str_digest_93fda3fda7049c22f560d845f87433a4_tuple, 0, const_str_plain_str ); Py_INCREF( const_str_plain_str );
    PyTuple_SET_ITEM( const_tuple_str_plain_str_str_digest_93fda3fda7049c22f560d845f87433a4_tuple, 1, const_str_digest_93fda3fda7049c22f560d845f87433a4 ); Py_INCREF( const_str_digest_93fda3fda7049c22f560d845f87433a4 );
    const_tuple_str_plain_sum_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_sum_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_sum ); Py_INCREF( const_str_plain_sum );
    PyTuple_SET_ITEM( const_tuple_str_plain_sum_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_sum_str_digest_f1a4e000bc858aced6149e7d4d501079_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_sum_str_digest_f1a4e000bc858aced6149e7d4d501079_tuple, 0, const_str_plain_sum ); Py_INCREF( const_str_plain_sum );
    PyTuple_SET_ITEM( const_tuple_str_plain_sum_str_digest_f1a4e000bc858aced6149e7d4d501079_tuple, 1, const_str_digest_f1a4e000bc858aced6149e7d4d501079 ); Py_INCREF( const_str_digest_f1a4e000bc858aced6149e7d4d501079 );
    const_tuple_str_plain_var_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_var_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_var ); Py_INCREF( const_str_plain_var );
    PyTuple_SET_ITEM( const_tuple_str_plain_var_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_var_str_digest_948b5f99f1d298030299d1834128007a_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_var_str_digest_948b5f99f1d298030299d1834128007a_tuple, 0, const_str_plain_var ); Py_INCREF( const_str_plain_var );
    PyTuple_SET_ITEM( const_tuple_str_plain_var_str_digest_948b5f99f1d298030299d1834128007a_tuple, 1, const_str_digest_948b5f99f1d298030299d1834128007a ); Py_INCREF( const_str_digest_948b5f99f1d298030299d1834128007a );
    const_tuple_str_plain_base_str_digest_072e5aadce0bf02ee2cb35cd0fc670c4_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_base_str_digest_072e5aadce0bf02ee2cb35cd0fc670c4_tuple, 0, const_str_plain_base ); Py_INCREF( const_str_plain_base );
    PyTuple_SET_ITEM( const_tuple_str_plain_base_str_digest_072e5aadce0bf02ee2cb35cd0fc670c4_tuple, 1, const_str_digest_072e5aadce0bf02ee2cb35cd0fc670c4 ); Py_INCREF( const_str_digest_072e5aadce0bf02ee2cb35cd0fc670c4 );
    const_tuple_str_plain_base_str_digest_5f4f358829eed338df184bb9b494a31b_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_base_str_digest_5f4f358829eed338df184bb9b494a31b_tuple, 0, const_str_plain_base ); Py_INCREF( const_str_plain_base );
    PyTuple_SET_ITEM( const_tuple_str_plain_base_str_digest_5f4f358829eed338df184bb9b494a31b_tuple, 1, const_str_digest_5f4f358829eed338df184bb9b494a31b ); Py_INCREF( const_str_digest_5f4f358829eed338df184bb9b494a31b );
    const_tuple_str_plain_base_str_digest_e313429493723aee2818b55eabfdb6db_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_base_str_digest_e313429493723aee2818b55eabfdb6db_tuple, 0, const_str_plain_base ); Py_INCREF( const_str_plain_base );
    PyTuple_SET_ITEM( const_tuple_str_plain_base_str_digest_e313429493723aee2818b55eabfdb6db_tuple, 1, const_str_digest_e313429493723aee2818b55eabfdb6db ); Py_INCREF( const_str_digest_e313429493723aee2818b55eabfdb6db );
    const_tuple_str_plain_char_str_digest_f5ed9e6a8b560ec8aa02dc14009c335e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_char_str_digest_f5ed9e6a8b560ec8aa02dc14009c335e_tuple, 0, const_str_plain_char ); Py_INCREF( const_str_plain_char );
    PyTuple_SET_ITEM( const_tuple_str_plain_char_str_digest_f5ed9e6a8b560ec8aa02dc14009c335e_tuple, 1, const_str_digest_f5ed9e6a8b560ec8aa02dc14009c335e ); Py_INCREF( const_str_digest_f5ed9e6a8b560ec8aa02dc14009c335e );
    const_tuple_str_plain_clip_str_digest_21cd5fd8304d3efe703434847bbfa964_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_clip_str_digest_21cd5fd8304d3efe703434847bbfa964_tuple, 0, const_str_plain_clip ); Py_INCREF( const_str_plain_clip );
    PyTuple_SET_ITEM( const_tuple_str_plain_clip_str_digest_21cd5fd8304d3efe703434847bbfa964_tuple, 1, const_str_digest_21cd5fd8304d3efe703434847bbfa964 ); Py_INCREF( const_str_digest_21cd5fd8304d3efe703434847bbfa964 );
    const_tuple_str_plain_clip_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_clip_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_clip ); Py_INCREF( const_str_plain_clip );
    PyTuple_SET_ITEM( const_tuple_str_plain_clip_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_conj_str_digest_0cc324197c555695bfccccd4585dfe52_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_conj_str_digest_0cc324197c555695bfccccd4585dfe52_tuple, 0, const_str_plain_conj ); Py_INCREF( const_str_plain_conj );
    PyTuple_SET_ITEM( const_tuple_str_plain_conj_str_digest_0cc324197c555695bfccccd4585dfe52_tuple, 1, const_str_digest_0cc324197c555695bfccccd4585dfe52 ); Py_INCREF( const_str_digest_0cc324197c555695bfccccd4585dfe52 );
    const_tuple_str_plain_copy_str_digest_25b754911e77261e2817076c6c7c48f1_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_copy_str_digest_25b754911e77261e2817076c6c7c48f1_tuple, 0, const_str_plain_copy ); Py_INCREF( const_str_plain_copy );
    PyTuple_SET_ITEM( const_tuple_str_plain_copy_str_digest_25b754911e77261e2817076c6c7c48f1_tuple, 1, const_str_digest_25b754911e77261e2817076c6c7c48f1 ); Py_INCREF( const_str_digest_25b754911e77261e2817076c6c7c48f1 );
    const_tuple_str_plain_copy_str_digest_6fcd4d910f0c580920aaa138cefadefd_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_copy_str_digest_6fcd4d910f0c580920aaa138cefadefd_tuple, 0, const_str_plain_copy ); Py_INCREF( const_str_plain_copy );
    PyTuple_SET_ITEM( const_tuple_str_plain_copy_str_digest_6fcd4d910f0c580920aaa138cefadefd_tuple, 1, const_str_digest_6fcd4d910f0c580920aaa138cefadefd ); Py_INCREF( const_str_digest_6fcd4d910f0c580920aaa138cefadefd );
    const_tuple_str_plain_copy_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_copy_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_copy ); Py_INCREF( const_str_plain_copy );
    PyTuple_SET_ITEM( const_tuple_str_plain_copy_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_copy_str_digest_c31abcb0819c2698fafa97c9213085fc_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_copy_str_digest_c31abcb0819c2698fafa97c9213085fc_tuple, 0, const_str_plain_copy ); Py_INCREF( const_str_plain_copy );
    PyTuple_SET_ITEM( const_tuple_str_plain_copy_str_digest_c31abcb0819c2698fafa97c9213085fc_tuple, 1, const_str_digest_c31abcb0819c2698fafa97c9213085fc ); Py_INCREF( const_str_digest_c31abcb0819c2698fafa97c9213085fc );
    const_tuple_str_plain_data_str_digest_7cb851f3389929e39052101b8301f35c_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_data_str_digest_7cb851f3389929e39052101b8301f35c_tuple, 0, const_str_plain_data ); Py_INCREF( const_str_plain_data );
    PyTuple_SET_ITEM( const_tuple_str_plain_data_str_digest_7cb851f3389929e39052101b8301f35c_tuple, 1, const_str_digest_7cb851f3389929e39052101b8301f35c ); Py_INCREF( const_str_digest_7cb851f3389929e39052101b8301f35c );
    const_tuple_str_plain_data_str_digest_8e9a116570a45560ebdeab72e35471a0_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_data_str_digest_8e9a116570a45560ebdeab72e35471a0_tuple, 0, const_str_plain_data ); Py_INCREF( const_str_plain_data );
    PyTuple_SET_ITEM( const_tuple_str_plain_data_str_digest_8e9a116570a45560ebdeab72e35471a0_tuple, 1, const_str_digest_8e9a116570a45560ebdeab72e35471a0 ); Py_INCREF( const_str_digest_8e9a116570a45560ebdeab72e35471a0 );
    const_tuple_str_plain_dump_str_digest_561da89354d5361aa3cc17a386772234_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_dump_str_digest_561da89354d5361aa3cc17a386772234_tuple, 0, const_str_plain_dump ); Py_INCREF( const_str_plain_dump );
    PyTuple_SET_ITEM( const_tuple_str_plain_dump_str_digest_561da89354d5361aa3cc17a386772234_tuple, 1, const_str_digest_561da89354d5361aa3cc17a386772234 ); Py_INCREF( const_str_digest_561da89354d5361aa3cc17a386772234 );
    const_tuple_str_plain_dump_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_dump_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_dump ); Py_INCREF( const_str_plain_dump );
    PyTuple_SET_ITEM( const_tuple_str_plain_dump_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_fill_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_fill_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_fill ); Py_INCREF( const_str_plain_fill );
    PyTuple_SET_ITEM( const_tuple_str_plain_fill_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_fill_str_digest_832db00f21f665213aa7e8299041c62a_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_fill_str_digest_832db00f21f665213aa7e8299041c62a_tuple, 0, const_str_plain_fill ); Py_INCREF( const_str_plain_fill );
    PyTuple_SET_ITEM( const_tuple_str_plain_fill_str_digest_832db00f21f665213aa7e8299041c62a_tuple, 1, const_str_digest_832db00f21f665213aa7e8299041c62a ); Py_INCREF( const_str_digest_832db00f21f665213aa7e8299041c62a );
    const_tuple_str_plain_flat_str_digest_16acfe703ccd15bf469ec7595d4c5739_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_flat_str_digest_16acfe703ccd15bf469ec7595d4c5739_tuple, 0, const_str_plain_flat ); Py_INCREF( const_str_plain_flat );
    PyTuple_SET_ITEM( const_tuple_str_plain_flat_str_digest_16acfe703ccd15bf469ec7595d4c5739_tuple, 1, const_str_digest_16acfe703ccd15bf469ec7595d4c5739 ); Py_INCREF( const_str_digest_16acfe703ccd15bf469ec7595d4c5739 );
    const_tuple_str_plain_flat_str_digest_60942448ddcf05011fad74add0dc08f8_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_flat_str_digest_60942448ddcf05011fad74add0dc08f8_tuple, 0, const_str_plain_flat ); Py_INCREF( const_str_plain_flat );
    PyTuple_SET_ITEM( const_tuple_str_plain_flat_str_digest_60942448ddcf05011fad74add0dc08f8_tuple, 1, const_str_digest_60942448ddcf05011fad74add0dc08f8 ); Py_INCREF( const_str_digest_60942448ddcf05011fad74add0dc08f8 );
    const_tuple_str_plain_imag_str_digest_3f5ab0a42237088eddcbcf53bb8f3883_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_imag_str_digest_3f5ab0a42237088eddcbcf53bb8f3883_tuple, 0, const_str_plain_imag ); Py_INCREF( const_str_plain_imag );
    PyTuple_SET_ITEM( const_tuple_str_plain_imag_str_digest_3f5ab0a42237088eddcbcf53bb8f3883_tuple, 1, const_str_digest_3f5ab0a42237088eddcbcf53bb8f3883 ); Py_INCREF( const_str_digest_3f5ab0a42237088eddcbcf53bb8f3883 );
    const_tuple_str_plain_imag_str_digest_e44d4ad86aca8c01ebc6b64b718673bb_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_imag_str_digest_e44d4ad86aca8c01ebc6b64b718673bb_tuple, 0, const_str_plain_imag ); Py_INCREF( const_str_plain_imag );
    PyTuple_SET_ITEM( const_tuple_str_plain_imag_str_digest_e44d4ad86aca8c01ebc6b64b718673bb_tuple, 1, const_str_digest_e44d4ad86aca8c01ebc6b64b718673bb ); Py_INCREF( const_str_digest_e44d4ad86aca8c01ebc6b64b718673bb );
    const_tuple_str_plain_item_str_digest_52bdd9679eca9bc963d17c7787b089be_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_item_str_digest_52bdd9679eca9bc963d17c7787b089be_tuple, 0, const_str_plain_item ); Py_INCREF( const_str_plain_item );
    PyTuple_SET_ITEM( const_tuple_str_plain_item_str_digest_52bdd9679eca9bc963d17c7787b089be_tuple, 1, const_str_digest_52bdd9679eca9bc963d17c7787b089be ); Py_INCREF( const_str_digest_52bdd9679eca9bc963d17c7787b089be );
    const_tuple_str_plain_item_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_item_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_item ); Py_INCREF( const_str_plain_item );
    PyTuple_SET_ITEM( const_tuple_str_plain_item_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_kind_str_digest_0b50ef073e797b4c43fede7667cbaa1c_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_kind_str_digest_0b50ef073e797b4c43fede7667cbaa1c_tuple, 0, const_str_plain_kind ); Py_INCREF( const_str_plain_kind );
    PyTuple_SET_ITEM( const_tuple_str_plain_kind_str_digest_0b50ef073e797b4c43fede7667cbaa1c_tuple, 1, const_str_digest_0b50ef073e797b4c43fede7667cbaa1c ); Py_INCREF( const_str_digest_0b50ef073e797b4c43fede7667cbaa1c );
    const_tuple_str_plain_mean_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_mean_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_mean ); Py_INCREF( const_str_plain_mean );
    PyTuple_SET_ITEM( const_tuple_str_plain_mean_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_mean_str_digest_79677de40ae1974e6aa497ad9e2a299e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_mean_str_digest_79677de40ae1974e6aa497ad9e2a299e_tuple, 0, const_str_plain_mean ); Py_INCREF( const_str_plain_mean );
    PyTuple_SET_ITEM( const_tuple_str_plain_mean_str_digest_79677de40ae1974e6aa497ad9e2a299e_tuple, 1, const_str_digest_79677de40ae1974e6aa497ad9e2a299e ); Py_INCREF( const_str_digest_79677de40ae1974e6aa497ad9e2a299e );
    const_tuple_str_plain_name_str_digest_6ffea2eee88cbbfcf093e63b6681e831_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_name_str_digest_6ffea2eee88cbbfcf093e63b6681e831_tuple, 0, const_str_plain_name ); Py_INCREF( const_str_plain_name );
    PyTuple_SET_ITEM( const_tuple_str_plain_name_str_digest_6ffea2eee88cbbfcf093e63b6681e831_tuple, 1, const_str_digest_6ffea2eee88cbbfcf093e63b6681e831 ); Py_INCREF( const_str_digest_6ffea2eee88cbbfcf093e63b6681e831 );
    const_tuple_str_plain_ndim_str_digest_9983fdaa872f329124db802cd0c11658_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_ndim_str_digest_9983fdaa872f329124db802cd0c11658_tuple, 0, const_str_plain_ndim ); Py_INCREF( const_str_plain_ndim );
    PyTuple_SET_ITEM( const_tuple_str_plain_ndim_str_digest_9983fdaa872f329124db802cd0c11658_tuple, 1, const_str_digest_9983fdaa872f329124db802cd0c11658 ); Py_INCREF( const_str_digest_9983fdaa872f329124db802cd0c11658 );
    const_tuple_str_plain_ndim_str_digest_c85815685c6ffaed1f1d641f434eaf42_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_ndim_str_digest_c85815685c6ffaed1f1d641f434eaf42_tuple, 0, const_str_plain_ndim ); Py_INCREF( const_str_plain_ndim );
    PyTuple_SET_ITEM( const_tuple_str_plain_ndim_str_digest_c85815685c6ffaed1f1d641f434eaf42_tuple, 1, const_str_digest_c85815685c6ffaed1f1d641f434eaf42 ); Py_INCREF( const_str_digest_c85815685c6ffaed1f1d641f434eaf42 );
    const_tuple_str_plain_nout_str_digest_b306dbdfabc0ea8018ff83d3e5ba34ff_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_nout_str_digest_b306dbdfabc0ea8018ff83d3e5ba34ff_tuple, 0, const_str_plain_nout ); Py_INCREF( const_str_plain_nout );
    PyTuple_SET_ITEM( const_tuple_str_plain_nout_str_digest_b306dbdfabc0ea8018ff83d3e5ba34ff_tuple, 1, const_str_digest_b306dbdfabc0ea8018ff83d3e5ba34ff ); Py_INCREF( const_str_digest_b306dbdfabc0ea8018ff83d3e5ba34ff );
    const_tuple_str_plain_prod_str_digest_2a28d76389ab1431ee23e067f8b4aac7_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_prod_str_digest_2a28d76389ab1431ee23e067f8b4aac7_tuple, 0, const_str_plain_prod ); Py_INCREF( const_str_plain_prod );
    PyTuple_SET_ITEM( const_tuple_str_plain_prod_str_digest_2a28d76389ab1431ee23e067f8b4aac7_tuple, 1, const_str_digest_2a28d76389ab1431ee23e067f8b4aac7 ); Py_INCREF( const_str_digest_2a28d76389ab1431ee23e067f8b4aac7 );
    const_tuple_str_plain_prod_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_prod_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_prod ); Py_INCREF( const_str_plain_prod );
    PyTuple_SET_ITEM( const_tuple_str_plain_prod_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_real_str_digest_27ac952713c2394bf6b17bc992308adf_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_real_str_digest_27ac952713c2394bf6b17bc992308adf_tuple, 0, const_str_plain_real ); Py_INCREF( const_str_plain_real );
    PyTuple_SET_ITEM( const_tuple_str_plain_real_str_digest_27ac952713c2394bf6b17bc992308adf_tuple, 1, const_str_digest_27ac952713c2394bf6b17bc992308adf ); Py_INCREF( const_str_digest_27ac952713c2394bf6b17bc992308adf );
    const_tuple_str_plain_real_str_digest_39436fba54dc24ff5a8fbdec205b59be_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_real_str_digest_39436fba54dc24ff5a8fbdec205b59be_tuple, 0, const_str_plain_real ); Py_INCREF( const_str_plain_real );
    PyTuple_SET_ITEM( const_tuple_str_plain_real_str_digest_39436fba54dc24ff5a8fbdec205b59be_tuple, 1, const_str_digest_39436fba54dc24ff5a8fbdec205b59be ); Py_INCREF( const_str_digest_39436fba54dc24ff5a8fbdec205b59be );
    const_tuple_str_plain_size_str_digest_3a6134ee353f2f256c42b0711db150ed_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_size_str_digest_3a6134ee353f2f256c42b0711db150ed_tuple, 0, const_str_plain_size ); Py_INCREF( const_str_plain_size );
    PyTuple_SET_ITEM( const_tuple_str_plain_size_str_digest_3a6134ee353f2f256c42b0711db150ed_tuple, 1, const_str_digest_3a6134ee353f2f256c42b0711db150ed ); Py_INCREF( const_str_digest_3a6134ee353f2f256c42b0711db150ed );
    const_tuple_str_plain_size_str_digest_c216acd7dfa75e16121e9c0376c68f63_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_size_str_digest_c216acd7dfa75e16121e9c0376c68f63_tuple, 0, const_str_plain_size ); Py_INCREF( const_str_plain_size );
    PyTuple_SET_ITEM( const_tuple_str_plain_size_str_digest_c216acd7dfa75e16121e9c0376c68f63_tuple, 1, const_str_digest_c216acd7dfa75e16121e9c0376c68f63 ); Py_INCREF( const_str_digest_c216acd7dfa75e16121e9c0376c68f63 );
    const_tuple_str_plain_size_str_digest_c40ced7cb49d5f69e8525b1f776d8097_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_size_str_digest_c40ced7cb49d5f69e8525b1f776d8097_tuple, 0, const_str_plain_size ); Py_INCREF( const_str_plain_size );
    PyTuple_SET_ITEM( const_tuple_str_plain_size_str_digest_c40ced7cb49d5f69e8525b1f776d8097_tuple, 1, const_str_digest_c40ced7cb49d5f69e8525b1f776d8097 ); Py_INCREF( const_str_digest_c40ced7cb49d5f69e8525b1f776d8097 );
    const_tuple_str_plain_sort_str_digest_09deaec6284ace81e18f5b81c1d04757_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_sort_str_digest_09deaec6284ace81e18f5b81c1d04757_tuple, 0, const_str_plain_sort ); Py_INCREF( const_str_plain_sort );
    PyTuple_SET_ITEM( const_tuple_str_plain_sort_str_digest_09deaec6284ace81e18f5b81c1d04757_tuple, 1, const_str_digest_09deaec6284ace81e18f5b81c1d04757 ); Py_INCREF( const_str_digest_09deaec6284ace81e18f5b81c1d04757 );
    const_tuple_str_plain_sort_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_sort_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_sort ); Py_INCREF( const_str_plain_sort );
    PyTuple_SET_ITEM( const_tuple_str_plain_sort_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_take_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_take_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_take ); Py_INCREF( const_str_plain_take );
    PyTuple_SET_ITEM( const_tuple_str_plain_take_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_take_str_digest_d30d9bb1c871fd4379e61476841f2041_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_take_str_digest_d30d9bb1c871fd4379e61476841f2041_tuple, 0, const_str_plain_take ); Py_INCREF( const_str_plain_take );
    PyTuple_SET_ITEM( const_tuple_str_plain_take_str_digest_d30d9bb1c871fd4379e61476841f2041_tuple, 1, const_str_digest_d30d9bb1c871fd4379e61476841f2041 ); Py_INCREF( const_str_digest_d30d9bb1c871fd4379e61476841f2041 );
    const_tuple_str_plain_type_str_digest_85246e0763e932149c83d2621fd8fc21_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_type_str_digest_85246e0763e932149c83d2621fd8fc21_tuple, 0, const_str_plain_type ); Py_INCREF( const_str_plain_type );
    PyTuple_SET_ITEM( const_tuple_str_plain_type_str_digest_85246e0763e932149c83d2621fd8fc21_tuple, 1, const_str_digest_85246e0763e932149c83d2621fd8fc21 ); Py_INCREF( const_str_digest_85246e0763e932149c83d2621fd8fc21 );
    const_tuple_str_plain_view_str_digest_51a8f570a85cc2ea3488ddde2e3f5ebe_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_view_str_digest_51a8f570a85cc2ea3488ddde2e3f5ebe_tuple, 0, const_str_plain_view ); Py_INCREF( const_str_plain_view );
    PyTuple_SET_ITEM( const_tuple_str_plain_view_str_digest_51a8f570a85cc2ea3488ddde2e3f5ebe_tuple, 1, const_str_digest_51a8f570a85cc2ea3488ddde2e3f5ebe ); Py_INCREF( const_str_digest_51a8f570a85cc2ea3488ddde2e3f5ebe );
    const_tuple_str_plain_view_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_view_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_view ); Py_INCREF( const_str_plain_view );
    PyTuple_SET_ITEM( const_tuple_str_plain_view_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_descr_str_digest_6cf2179a1ded73b0efccdf872728d471_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_descr_str_digest_6cf2179a1ded73b0efccdf872728d471_tuple, 0, const_str_plain_descr ); Py_INCREF( const_str_plain_descr );
    PyTuple_SET_ITEM( const_tuple_str_plain_descr_str_digest_6cf2179a1ded73b0efccdf872728d471_tuple, 1, const_str_digest_6cf2179a1ded73b0efccdf872728d471 ); Py_INCREF( const_str_digest_6cf2179a1ded73b0efccdf872728d471 );
    const_tuple_str_plain_dtype_str_digest_04a1dda0c164f139c95c15dfc22a4e4d_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_dtype_str_digest_04a1dda0c164f139c95c15dfc22a4e4d_tuple, 0, const_str_plain_dtype ); Py_INCREF( const_str_plain_dtype );
    PyTuple_SET_ITEM( const_tuple_str_plain_dtype_str_digest_04a1dda0c164f139c95c15dfc22a4e4d_tuple, 1, const_str_digest_04a1dda0c164f139c95c15dfc22a4e4d ); Py_INCREF( const_str_digest_04a1dda0c164f139c95c15dfc22a4e4d );
    const_tuple_str_plain_dtype_str_digest_762d3e50dc2c60e27cd22917fdb24ebd_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_dtype_str_digest_762d3e50dc2c60e27cd22917fdb24ebd_tuple, 0, const_str_plain_dtype ); Py_INCREF( const_str_plain_dtype );
    PyTuple_SET_ITEM( const_tuple_str_plain_dtype_str_digest_762d3e50dc2c60e27cd22917fdb24ebd_tuple, 1, const_str_digest_762d3e50dc2c60e27cd22917fdb24ebd ); Py_INCREF( const_str_digest_762d3e50dc2c60e27cd22917fdb24ebd );
    const_tuple_str_plain_dumps_str_digest_0d50f7494894aed495bbc9bdc1b4ccf2_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_dumps_str_digest_0d50f7494894aed495bbc9bdc1b4ccf2_tuple, 0, const_str_plain_dumps ); Py_INCREF( const_str_plain_dumps );
    PyTuple_SET_ITEM( const_tuple_str_plain_dumps_str_digest_0d50f7494894aed495bbc9bdc1b4ccf2_tuple, 1, const_str_digest_0d50f7494894aed495bbc9bdc1b4ccf2 ); Py_INCREF( const_str_digest_0d50f7494894aed495bbc9bdc1b4ccf2 );
    const_tuple_str_plain_dumps_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_dumps_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_dumps ); Py_INCREF( const_str_plain_dumps );
    PyTuple_SET_ITEM( const_tuple_str_plain_dumps_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_flags_str_digest_22c0f69ba1a343a957c94ecc234fdd0a_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_flags_str_digest_22c0f69ba1a343a957c94ecc234fdd0a_tuple, 0, const_str_plain_flags ); Py_INCREF( const_str_plain_flags );
    PyTuple_SET_ITEM( const_tuple_str_plain_flags_str_digest_22c0f69ba1a343a957c94ecc234fdd0a_tuple, 1, const_str_digest_22c0f69ba1a343a957c94ecc234fdd0a ); Py_INCREF( const_str_digest_22c0f69ba1a343a957c94ecc234fdd0a );
    const_tuple_str_plain_flags_str_digest_5628e59825cf8b8953c034873f9773a7_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_flags_str_digest_5628e59825cf8b8953c034873f9773a7_tuple, 0, const_str_plain_flags ); Py_INCREF( const_str_plain_flags );
    PyTuple_SET_ITEM( const_tuple_str_plain_flags_str_digest_5628e59825cf8b8953c034873f9773a7_tuple, 1, const_str_digest_5628e59825cf8b8953c034873f9773a7 ); Py_INCREF( const_str_digest_5628e59825cf8b8953c034873f9773a7 );
    const_tuple_str_plain_flags_str_digest_929a391db266f9cd3537824479a31e3e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_flags_str_digest_929a391db266f9cd3537824479a31e3e_tuple, 0, const_str_plain_flags ); Py_INCREF( const_str_plain_flags );
    PyTuple_SET_ITEM( const_tuple_str_plain_flags_str_digest_929a391db266f9cd3537824479a31e3e_tuple, 1, const_str_digest_929a391db266f9cd3537824479a31e3e ); Py_INCREF( const_str_digest_929a391db266f9cd3537824479a31e3e );
    const_tuple_str_plain_index_str_digest_1358868064bc6d53fbaf09ac4fd0b872_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_index_str_digest_1358868064bc6d53fbaf09ac4fd0b872_tuple, 0, const_str_plain_index ); Py_INCREF( const_str_plain_index );
    PyTuple_SET_ITEM( const_tuple_str_plain_index_str_digest_1358868064bc6d53fbaf09ac4fd0b872_tuple, 1, const_str_digest_1358868064bc6d53fbaf09ac4fd0b872 ); Py_INCREF( const_str_digest_1358868064bc6d53fbaf09ac4fd0b872 );
    const_tuple_str_plain_index_str_digest_ad70a04a95b5dd018e58e62432ca77af_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_index_str_digest_ad70a04a95b5dd018e58e62432ca77af_tuple, 0, const_str_plain_index ); Py_INCREF( const_str_plain_index );
    PyTuple_SET_ITEM( const_tuple_str_plain_index_str_digest_ad70a04a95b5dd018e58e62432ca77af_tuple, 1, const_str_digest_ad70a04a95b5dd018e58e62432ca77af ); Py_INCREF( const_str_digest_ad70a04a95b5dd018e58e62432ca77af );
    const_tuple_str_plain_iters_str_digest_5564b30c1246ebc5164fceafda0b7325_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_iters_str_digest_5564b30c1246ebc5164fceafda0b7325_tuple, 0, const_str_plain_iters ); Py_INCREF( const_str_plain_iters );
    PyTuple_SET_ITEM( const_tuple_str_plain_iters_str_digest_5564b30c1246ebc5164fceafda0b7325_tuple, 1, const_str_digest_5564b30c1246ebc5164fceafda0b7325 ); Py_INCREF( const_str_digest_5564b30c1246ebc5164fceafda0b7325 );
    const_tuple_str_plain_names_str_digest_3ff91e10ed6b8e9118c69266f1910be7_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_names_str_digest_3ff91e10ed6b8e9118c69266f1910be7_tuple, 0, const_str_plain_names ); Py_INCREF( const_str_plain_names );
    PyTuple_SET_ITEM( const_tuple_str_plain_names_str_digest_3ff91e10ed6b8e9118c69266f1910be7_tuple, 1, const_str_digest_3ff91e10ed6b8e9118c69266f1910be7 ); Py_INCREF( const_str_digest_3ff91e10ed6b8e9118c69266f1910be7 );
    const_tuple_str_plain_nargs_str_digest_cf62142a31180d740590961afca77341_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_nargs_str_digest_cf62142a31180d740590961afca77341_tuple, 0, const_str_plain_nargs ); Py_INCREF( const_str_plain_nargs );
    PyTuple_SET_ITEM( const_tuple_str_plain_nargs_str_digest_cf62142a31180d740590961afca77341_tuple, 1, const_str_digest_cf62142a31180d740590961afca77341 ); Py_INCREF( const_str_digest_cf62142a31180d740590961afca77341 );
    const_tuple_str_plain_outer_str_digest_e541c5e631957d0b66a1bb371ca17e97_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_outer_str_digest_e541c5e631957d0b66a1bb371ca17e97_tuple, 0, const_str_plain_outer ); Py_INCREF( const_str_plain_outer );
    PyTuple_SET_ITEM( const_tuple_str_plain_outer_str_digest_e541c5e631957d0b66a1bb371ca17e97_tuple, 1, const_str_digest_e541c5e631957d0b66a1bb371ca17e97 ); Py_INCREF( const_str_digest_e541c5e631957d0b66a1bb371ca17e97 );
    const_tuple_str_plain_ravel_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_ravel_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_ravel ); Py_INCREF( const_str_plain_ravel );
    PyTuple_SET_ITEM( const_tuple_str_plain_ravel_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_ravel_str_digest_da973fd4b9c056ed9402635b817c6064_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_ravel_str_digest_da973fd4b9c056ed9402635b817c6064_tuple, 0, const_str_plain_ravel ); Py_INCREF( const_str_plain_ravel );
    PyTuple_SET_ITEM( const_tuple_str_plain_ravel_str_digest_da973fd4b9c056ed9402635b817c6064_tuple, 1, const_str_digest_da973fd4b9c056ed9402635b817c6064 ); Py_INCREF( const_str_digest_da973fd4b9c056ed9402635b817c6064 );
    const_tuple_str_plain_reset_str_digest_676bb7141f31909e874e2fbf3545a613_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_reset_str_digest_676bb7141f31909e874e2fbf3545a613_tuple, 0, const_str_plain_reset ); Py_INCREF( const_str_plain_reset );
    PyTuple_SET_ITEM( const_tuple_str_plain_reset_str_digest_676bb7141f31909e874e2fbf3545a613_tuple, 1, const_str_digest_676bb7141f31909e874e2fbf3545a613 ); Py_INCREF( const_str_digest_676bb7141f31909e874e2fbf3545a613 );
    const_tuple_str_plain_reset_str_digest_8d832150e3217000ba89f19a07841fc6_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_reset_str_digest_8d832150e3217000ba89f19a07841fc6_tuple, 0, const_str_plain_reset ); Py_INCREF( const_str_plain_reset );
    PyTuple_SET_ITEM( const_tuple_str_plain_reset_str_digest_8d832150e3217000ba89f19a07841fc6_tuple, 1, const_str_digest_8d832150e3217000ba89f19a07841fc6 ); Py_INCREF( const_str_digest_8d832150e3217000ba89f19a07841fc6 );
    const_tuple_str_plain_round_str_digest_00eba1502b949d5653483564f27f3f96_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_round_str_digest_00eba1502b949d5653483564f27f3f96_tuple, 0, const_str_plain_round ); Py_INCREF( const_str_plain_round );
    PyTuple_SET_ITEM( const_tuple_str_plain_round_str_digest_00eba1502b949d5653483564f27f3f96_tuple, 1, const_str_digest_00eba1502b949d5653483564f27f3f96 ); Py_INCREF( const_str_digest_00eba1502b949d5653483564f27f3f96 );
    const_tuple_str_plain_round_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_round_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_round ); Py_INCREF( const_str_plain_round );
    PyTuple_SET_ITEM( const_tuple_str_plain_round_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_shape_str_digest_7a4022f5e3b8123daadb557fb7f8e278_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_shape_str_digest_7a4022f5e3b8123daadb557fb7f8e278_tuple, 0, const_str_plain_shape ); Py_INCREF( const_str_plain_shape );
    PyTuple_SET_ITEM( const_tuple_str_plain_shape_str_digest_7a4022f5e3b8123daadb557fb7f8e278_tuple, 1, const_str_digest_7a4022f5e3b8123daadb557fb7f8e278 ); Py_INCREF( const_str_digest_7a4022f5e3b8123daadb557fb7f8e278 );
    const_tuple_str_plain_shape_str_digest_d33b15733c5725986a27558769e649e0_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_shape_str_digest_d33b15733c5725986a27558769e649e0_tuple, 0, const_str_plain_shape ); Py_INCREF( const_str_plain_shape );
    PyTuple_SET_ITEM( const_tuple_str_plain_shape_str_digest_d33b15733c5725986a27558769e649e0_tuple, 1, const_str_digest_d33b15733c5725986a27558769e649e0 ); Py_INCREF( const_str_digest_d33b15733c5725986a27558769e649e0 );
    const_tuple_str_plain_shape_str_digest_d88946802d7b4f26fd04d95aa8403087_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_shape_str_digest_d88946802d7b4f26fd04d95aa8403087_tuple, 0, const_str_plain_shape ); Py_INCREF( const_str_plain_shape );
    PyTuple_SET_ITEM( const_tuple_str_plain_shape_str_digest_d88946802d7b4f26fd04d95aa8403087_tuple, 1, const_str_digest_d88946802d7b4f26fd04d95aa8403087 ); Py_INCREF( const_str_digest_d88946802d7b4f26fd04d95aa8403087 );
    const_tuple_str_plain_shape_str_digest_e5449d57b253f51a97d23086515996bd_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_shape_str_digest_e5449d57b253f51a97d23086515996bd_tuple, 0, const_str_plain_shape ); Py_INCREF( const_str_plain_shape );
    PyTuple_SET_ITEM( const_tuple_str_plain_shape_str_digest_e5449d57b253f51a97d23086515996bd_tuple, 1, const_str_digest_e5449d57b253f51a97d23086515996bd ); Py_INCREF( const_str_digest_e5449d57b253f51a97d23086515996bd );
    const_tuple_str_plain_trace_str_digest_75f91e4806135a7f354a253fd2da5c0b_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_trace_str_digest_75f91e4806135a7f354a253fd2da5c0b_tuple, 0, const_str_plain_trace ); Py_INCREF( const_str_plain_trace );
    PyTuple_SET_ITEM( const_tuple_str_plain_trace_str_digest_75f91e4806135a7f354a253fd2da5c0b_tuple, 1, const_str_digest_75f91e4806135a7f354a253fd2da5c0b ); Py_INCREF( const_str_digest_75f91e4806135a7f354a253fd2da5c0b );
    const_tuple_str_plain_trace_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_trace_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_trace ); Py_INCREF( const_str_plain_trace );
    PyTuple_SET_ITEM( const_tuple_str_plain_trace_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_types_str_digest_0a317321980a6180a9b2209254306540_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_types_str_digest_0a317321980a6180a9b2209254306540_tuple, 0, const_str_plain_types ); Py_INCREF( const_str_plain_types );
    PyTuple_SET_ITEM( const_tuple_str_plain_types_str_digest_0a317321980a6180a9b2209254306540_tuple, 1, const_str_digest_0a317321980a6180a9b2209254306540 ); Py_INCREF( const_str_digest_0a317321980a6180a9b2209254306540 );
    const_tuple_str_plain_argmax_str_digest_26ac2e319d74e74a4ce6cef5c1cae7b2_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_argmax_str_digest_26ac2e319d74e74a4ce6cef5c1cae7b2_tuple, 0, const_str_plain_argmax ); Py_INCREF( const_str_plain_argmax );
    PyTuple_SET_ITEM( const_tuple_str_plain_argmax_str_digest_26ac2e319d74e74a4ce6cef5c1cae7b2_tuple, 1, const_str_digest_26ac2e319d74e74a4ce6cef5c1cae7b2 ); Py_INCREF( const_str_digest_26ac2e319d74e74a4ce6cef5c1cae7b2 );
    const_tuple_str_plain_argmax_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_argmax_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_argmax ); Py_INCREF( const_str_plain_argmax );
    PyTuple_SET_ITEM( const_tuple_str_plain_argmax_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_argmin_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_argmin_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_argmin ); Py_INCREF( const_str_plain_argmin );
    PyTuple_SET_ITEM( const_tuple_str_plain_argmin_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_argmin_str_digest_e6c8dc141d94a856c7d1083ae1974233_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_argmin_str_digest_e6c8dc141d94a856c7d1083ae1974233_tuple, 0, const_str_plain_argmin ); Py_INCREF( const_str_plain_argmin );
    PyTuple_SET_ITEM( const_tuple_str_plain_argmin_str_digest_e6c8dc141d94a856c7d1083ae1974233_tuple, 1, const_str_digest_e6c8dc141d94a856c7d1083ae1974233 ); Py_INCREF( const_str_digest_e6c8dc141d94a856c7d1083ae1974233 );
    const_tuple_str_plain_astype_str_digest_66c47a41c00c8676f72281e05cf3152b_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_astype_str_digest_66c47a41c00c8676f72281e05cf3152b_tuple, 0, const_str_plain_astype ); Py_INCREF( const_str_plain_astype );
    PyTuple_SET_ITEM( const_tuple_str_plain_astype_str_digest_66c47a41c00c8676f72281e05cf3152b_tuple, 1, const_str_digest_66c47a41c00c8676f72281e05cf3152b ); Py_INCREF( const_str_digest_66c47a41c00c8676f72281e05cf3152b );
    const_tuple_str_plain_astype_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_astype_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_astype ); Py_INCREF( const_str_plain_astype );
    PyTuple_SET_ITEM( const_tuple_str_plain_astype_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_choose_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_choose_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_choose ); Py_INCREF( const_str_plain_choose );
    PyTuple_SET_ITEM( const_tuple_str_plain_choose_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_choose_str_digest_f0d9e2e66c0583f9830ecd65f7995493_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_choose_str_digest_f0d9e2e66c0583f9830ecd65f7995493_tuple, 0, const_str_plain_choose ); Py_INCREF( const_str_plain_choose );
    PyTuple_SET_ITEM( const_tuple_str_plain_choose_str_digest_f0d9e2e66c0583f9830ecd65f7995493_tuple, 1, const_str_digest_f0d9e2e66c0583f9830ecd65f7995493 ); Py_INCREF( const_str_digest_f0d9e2e66c0583f9830ecd65f7995493 );
    const_tuple_str_plain_coords_str_digest_174aede2ff82a76082bfc6cd626d8156_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_coords_str_digest_174aede2ff82a76082bfc6cd626d8156_tuple, 0, const_str_plain_coords ); Py_INCREF( const_str_plain_coords );
    PyTuple_SET_ITEM( const_tuple_str_plain_coords_str_digest_174aede2ff82a76082bfc6cd626d8156_tuple, 1, const_str_digest_174aede2ff82a76082bfc6cd626d8156 ); Py_INCREF( const_str_digest_174aede2ff82a76082bfc6cd626d8156 );
    const_tuple_str_plain_ctypes_str_digest_13ca39598ca9f1ae4b2e857009e8282b_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_ctypes_str_digest_13ca39598ca9f1ae4b2e857009e8282b_tuple, 0, const_str_plain_ctypes ); Py_INCREF( const_str_plain_ctypes );
    PyTuple_SET_ITEM( const_tuple_str_plain_ctypes_str_digest_13ca39598ca9f1ae4b2e857009e8282b_tuple, 1, const_str_digest_13ca39598ca9f1ae4b2e857009e8282b ); Py_INCREF( const_str_digest_13ca39598ca9f1ae4b2e857009e8282b );
    const_tuple_str_plain_cumsum_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_cumsum_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_cumsum ); Py_INCREF( const_str_plain_cumsum );
    PyTuple_SET_ITEM( const_tuple_str_plain_cumsum_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_cumsum_str_digest_daf43572e3bea65b049fa73909930d07_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_cumsum_str_digest_daf43572e3bea65b049fa73909930d07_tuple, 0, const_str_plain_cumsum ); Py_INCREF( const_str_plain_cumsum );
    PyTuple_SET_ITEM( const_tuple_str_plain_cumsum_str_digest_daf43572e3bea65b049fa73909930d07_tuple, 1, const_str_digest_daf43572e3bea65b049fa73909930d07 ); Py_INCREF( const_str_digest_daf43572e3bea65b049fa73909930d07 );
    const_tuple_str_plain_fields_str_digest_969f7329219497cd8ce1bcb0055cb881_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_fields_str_digest_969f7329219497cd8ce1bcb0055cb881_tuple, 0, const_str_plain_fields ); Py_INCREF( const_str_plain_fields );
    PyTuple_SET_ITEM( const_tuple_str_plain_fields_str_digest_969f7329219497cd8ce1bcb0055cb881_tuple, 1, const_str_digest_969f7329219497cd8ce1bcb0055cb881 ); Py_INCREF( const_str_digest_969f7329219497cd8ce1bcb0055cb881 );
    const_tuple_str_plain_nbytes_str_digest_0eb3b27e4bb7003460338d0c842d1ed8_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_nbytes_str_digest_0eb3b27e4bb7003460338d0c842d1ed8_tuple, 0, const_str_plain_nbytes ); Py_INCREF( const_str_plain_nbytes );
    PyTuple_SET_ITEM( const_tuple_str_plain_nbytes_str_digest_0eb3b27e4bb7003460338d0c842d1ed8_tuple, 1, const_str_digest_0eb3b27e4bb7003460338d0c842d1ed8 ); Py_INCREF( const_str_digest_0eb3b27e4bb7003460338d0c842d1ed8 );
    const_tuple_str_plain_nbytes_str_digest_bb8f8720d97c46c75a107dbb00861dab_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_nbytes_str_digest_bb8f8720d97c46c75a107dbb00861dab_tuple, 0, const_str_plain_nbytes ); Py_INCREF( const_str_plain_nbytes );
    PyTuple_SET_ITEM( const_tuple_str_plain_nbytes_str_digest_bb8f8720d97c46c75a107dbb00861dab_tuple, 1, const_str_digest_bb8f8720d97c46c75a107dbb00861dab ); Py_INCREF( const_str_digest_bb8f8720d97c46c75a107dbb00861dab );
    const_tuple_str_plain_ntypes_str_digest_eb0507f98a108e550bd6c9fa1f4f4965_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_ntypes_str_digest_eb0507f98a108e550bd6c9fa1f4f4965_tuple, 0, const_str_plain_ntypes ); Py_INCREF( const_str_plain_ntypes );
    PyTuple_SET_ITEM( const_tuple_str_plain_ntypes_str_digest_eb0507f98a108e550bd6c9fa1f4f4965_tuple, 1, const_str_digest_eb0507f98a108e550bd6c9fa1f4f4965 ); Py_INCREF( const_str_digest_eb0507f98a108e550bd6c9fa1f4f4965 );
    const_tuple_str_plain_reduce_str_digest_52c173c637598b9eb53066cca03354ea_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_reduce_str_digest_52c173c637598b9eb53066cca03354ea_tuple, 0, const_str_plain_reduce ); Py_INCREF( const_str_plain_reduce );
    PyTuple_SET_ITEM( const_tuple_str_plain_reduce_str_digest_52c173c637598b9eb53066cca03354ea_tuple, 1, const_str_digest_52c173c637598b9eb53066cca03354ea ); Py_INCREF( const_str_digest_52c173c637598b9eb53066cca03354ea );
    const_tuple_str_plain_repeat_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_repeat_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_repeat ); Py_INCREF( const_str_plain_repeat );
    PyTuple_SET_ITEM( const_tuple_str_plain_repeat_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_repeat_str_digest_d895d3418e116cc8c8c56729f54543f3_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_repeat_str_digest_d895d3418e116cc8c8c56729f54543f3_tuple, 0, const_str_plain_repeat ); Py_INCREF( const_str_plain_repeat );
    PyTuple_SET_ITEM( const_tuple_str_plain_repeat_str_digest_d895d3418e116cc8c8c56729f54543f3_tuple, 1, const_str_digest_d895d3418e116cc8c8c56729f54543f3 ); Py_INCREF( const_str_digest_d895d3418e116cc8c8c56729f54543f3 );
    const_tuple_str_plain_resize_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_resize_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_resize ); Py_INCREF( const_str_plain_resize );
    PyTuple_SET_ITEM( const_tuple_str_plain_resize_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_resize_str_digest_7a53c412a4f5bc6111891afa807de573_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_resize_str_digest_7a53c412a4f5bc6111891afa807de573_tuple, 0, const_str_plain_resize ); Py_INCREF( const_str_plain_resize );
    PyTuple_SET_ITEM( const_tuple_str_plain_resize_str_digest_7a53c412a4f5bc6111891afa807de573_tuple, 1, const_str_digest_7a53c412a4f5bc6111891afa807de573 ); Py_INCREF( const_str_digest_7a53c412a4f5bc6111891afa807de573 );
    const_tuple_str_plain_tofile_str_digest_038b9038684c5d9736626ade6e2d1f31_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_tofile_str_digest_038b9038684c5d9736626ade6e2d1f31_tuple, 0, const_str_plain_tofile ); Py_INCREF( const_str_plain_tofile );
    PyTuple_SET_ITEM( const_tuple_str_plain_tofile_str_digest_038b9038684c5d9736626ade6e2d1f31_tuple, 1, const_str_digest_038b9038684c5d9736626ade6e2d1f31 ); Py_INCREF( const_str_digest_038b9038684c5d9736626ade6e2d1f31 );
    const_tuple_str_plain_tofile_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_tofile_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_tofile ); Py_INCREF( const_str_plain_tofile );
    PyTuple_SET_ITEM( const_tuple_str_plain_tofile_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
    const_tuple_str_plain_tolist_str_digest_6aa966c731204846d6f53e6b0ac82512_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_tolist_str_digest_6aa966c731204846d6f53e6b0ac82512_tuple, 0, const_str_plain_tolist ); Py_INCREF( const_str_plain_tolist );
    PyTuple_SET_ITEM( const_tuple_str_plain_tolist_str_digest_6aa966c731204846d6f53e6b0ac82512_tuple, 1, const_str_digest_6aa966c731204846d6f53e6b0ac82512 ); Py_INCREF( const_str_digest_6aa966c731204846d6f53e6b0ac82512 );
    const_tuple_str_plain_tolist_str_digest_767d5f99968bf1712f4b5a056186620e_tuple = PyTuple_New( 2 );
    PyTuple_SET_ITEM( const_tuple_str_plain_tolist_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 0, const_str_plain_tolist ); Py_INCREF( const_str_plain_tolist );
    PyTuple_SET_ITEM( const_tuple_str_plain_tolist_str_digest_767d5f99968bf1712f4b5a056186620e_tuple, 1, const_str_digest_767d5f99968bf1712f4b5a056186620e ); Py_INCREF( const_str_digest_767d5f99968bf1712f4b5a056186620e );
}

// The module code objects.
static PyCodeObject *codeobj_93ae707a3531f668d8430ca9639c3dff;

static void _initModuleCodeObjects(void)
{
    codeobj_93ae707a3531f668d8430ca9639c3dff = MAKE_CODEOBJ( const_str_digest_d634d9ef98cc6cf23dad24d028acd3ca, const_str_plain_add_newdocs, 0, const_tuple_empty, 0, CO_NOFREE | CO_FUTURE_DIVISION | CO_FUTURE_ABSOLUTE_IMPORT | CO_FUTURE_PRINT_FUNCTION );
}

// The module function declarations.


// The module function definitions.



#if PYTHON_VERSION >= 300
static struct PyModuleDef mdef_numpy$add_newdocs =
{
    PyModuleDef_HEAD_INIT,
    "numpy.add_newdocs",   /* m_name */
    NULL,                /* m_doc */
    -1,                  /* m_size */
    NULL,                /* m_methods */
    NULL,                /* m_reload */
    NULL,                /* m_traverse */
    NULL,                /* m_clear */
    NULL,                /* m_free */
  };
#endif

#define _MODULE_UNFREEZER 0

#if _MODULE_UNFREEZER

#include "nuitka/unfreezing.hpp"

// Table for lookup to find "frozen" modules or DLLs, i.e. the ones included in
// or along this binary.

static struct Nuitka_MetaPathBasedLoaderEntry meta_path_loader_entries[] =
{

    { NULL, NULL, 0 }
};

#endif

// The exported interface to CPython. On import of the module, this function
// gets called. It has to have an exact function name, in cases it's a shared
// library export. This is hidden behind the MOD_INIT_DECL.

MOD_INIT_DECL( numpy$add_newdocs )
{

#if defined(_NUITKA_EXE) || PYTHON_VERSION >= 300
    static bool _init_done = false;

    // Packages can be imported recursively in deep executables.
    if ( _init_done )
    {
        return MOD_RETURN_VALUE( module_numpy$add_newdocs );
    }
    else
    {
        _init_done = true;
    }
#endif

#ifdef _NUITKA_MODULE
    // In case of a stand alone extension module, need to call initialization
    // the init here because that's the first and only time we are going to get
    // called here.

    // Initialize the constant values used.
    _initBuiltinModule();
    _initConstants();

    // Initialize the compiled types of Nuitka.
    PyType_Ready( &Nuitka_Generator_Type );
    PyType_Ready( &Nuitka_Function_Type );
    PyType_Ready( &Nuitka_Method_Type );
    PyType_Ready( &Nuitka_Frame_Type );
#if PYTHON_VERSION < 300
    initSlotCompare();
#endif

    patchBuiltinModule();
    patchTypeComparison();

#endif

#if _MODULE_UNFREEZER
    registerMetaPathBasedUnfreezer( meta_path_loader_entries );
#endif

    _initModuleConstants();
    _initModuleCodeObjects();

    // puts( "in initnumpy$add_newdocs" );

    // Create the module object first. There are no methods initially, all are
    // added dynamically in actual code only.  Also no "__doc__" is initially
    // set at this time, as it could not contain NUL characters this way, they
    // are instead set in early module code.  No "self" for modules, we have no
    // use for it.
#if PYTHON_VERSION < 300
    module_numpy$add_newdocs = Py_InitModule4(
        "numpy.add_newdocs",       // Module Name
        NULL,                    // No methods initially, all are added
                                 // dynamically in actual module code only.
        NULL,                    // No __doc__ is initially set, as it could
                                 // not contain NUL this way, added early in
                                 // actual code.
        NULL,                    // No self for modules, we don't use it.
        PYTHON_API_VERSION
    );
#else
    module_numpy$add_newdocs = PyModule_Create( &mdef_numpy$add_newdocs );
#endif

    moduledict_numpy$add_newdocs = (PyDictObject *)((PyModuleObject *)module_numpy$add_newdocs)->md_dict;

    assertObject( module_numpy$add_newdocs );

// Seems to work for Python2.7 out of the box, but for Python3, the module
// doesn't automatically enter "sys.modules", so do it manually.
#if PYTHON_VERSION >= 300
    {
        int r = PyObject_SetItem( PySys_GetObject( (char *)"modules" ), const_str_digest_abe98f0e3e5e5ae90ac41b76175fc882, module_numpy$add_newdocs );

        assert( r != -1 );
    }
#endif

    // For deep importing of a module we need to have "__builtins__", so we set
    // it ourselves in the same way than CPython does. Note: This must be done
    // before the frame object is allocated, or else it may fail.

    PyObject *module_dict = PyModule_GetDict( module_numpy$add_newdocs );

    if ( PyDict_GetItem( module_dict, const_str_plain___builtins__ ) == NULL )
    {
        PyObject *value = (PyObject *)builtin_module;

        // Check if main module, not a dict then.
#if !defined(_NUITKA_EXE) || !0
        value = PyModule_GetDict( value );
#endif

#ifndef __NUITKA_NO_ASSERT__
        int res =
#endif
            PyDict_SetItem( module_dict, const_str_plain___builtins__, value );

        assert( res == 0 );
    }

#if PYTHON_VERSION >= 330
#if _MODULE_UNFREEZER
    PyDict_SetItem( module_dict, const_str_plain___loader__, metapath_based_loader );
#else
    PyDict_SetItem( module_dict, const_str_plain___loader__, Py_None );
#endif
#endif

    // Temp variables if any
    PyObject *exception_type, *exception_value;
    PyTracebackObject *exception_tb;
    PyObject *tmp_assign_source_1;
    PyObject *tmp_assign_source_2;
    PyObject *tmp_assign_source_3;
    PyObject *tmp_assign_source_4;
    PyObject *tmp_assign_source_5;
    PyObject *tmp_assign_source_6;
    PyObject *tmp_call_arg_element_1;
    PyObject *tmp_call_arg_element_2;
    PyObject *tmp_call_arg_element_3;
    PyObject *tmp_call_arg_element_4;
    PyObject *tmp_call_arg_element_5;
    PyObject *tmp_call_arg_element_6;
    PyObject *tmp_call_arg_element_7;
    PyObject *tmp_call_arg_element_8;
    PyObject *tmp_call_arg_element_9;
    PyObject *tmp_call_arg_element_10;
    PyObject *tmp_call_arg_element_11;
    PyObject *tmp_call_arg_element_12;
    PyObject *tmp_call_arg_element_13;
    PyObject *tmp_call_arg_element_14;
    PyObject *tmp_call_arg_element_15;
    PyObject *tmp_call_arg_element_16;
    PyObject *tmp_call_arg_element_17;
    PyObject *tmp_call_arg_element_18;
    PyObject *tmp_call_arg_element_19;
    PyObject *tmp_call_arg_element_20;
    PyObject *tmp_call_arg_element_21;
    PyObject *tmp_call_arg_element_22;
    PyObject *tmp_call_arg_element_23;
    PyObject *tmp_call_arg_element_24;
    PyObject *tmp_call_arg_element_25;
    PyObject *tmp_call_arg_element_26;
    PyObject *tmp_call_arg_element_27;
    PyObject *tmp_call_arg_element_28;
    PyObject *tmp_call_arg_element_29;
    PyObject *tmp_call_arg_element_30;
    PyObject *tmp_call_arg_element_31;
    PyObject *tmp_call_arg_element_32;
    PyObject *tmp_call_arg_element_33;
    PyObject *tmp_call_arg_element_34;
    PyObject *tmp_call_arg_element_35;
    PyObject *tmp_call_arg_element_36;
    PyObject *tmp_call_arg_element_37;
    PyObject *tmp_call_arg_element_38;
    PyObject *tmp_call_arg_element_39;
    PyObject *tmp_call_arg_element_40;
    PyObject *tmp_call_arg_element_41;
    PyObject *tmp_call_arg_element_42;
    PyObject *tmp_call_arg_element_43;
    PyObject *tmp_call_arg_element_44;
    PyObject *tmp_call_arg_element_45;
    PyObject *tmp_call_arg_element_46;
    PyObject *tmp_call_arg_element_47;
    PyObject *tmp_call_arg_element_48;
    PyObject *tmp_call_arg_element_49;
    PyObject *tmp_call_arg_element_50;
    PyObject *tmp_call_arg_element_51;
    PyObject *tmp_call_arg_element_52;
    PyObject *tmp_call_arg_element_53;
    PyObject *tmp_call_arg_element_54;
    PyObject *tmp_call_arg_element_55;
    PyObject *tmp_call_arg_element_56;
    PyObject *tmp_call_arg_element_57;
    PyObject *tmp_call_arg_element_58;
    PyObject *tmp_call_arg_element_59;
    PyObject *tmp_call_arg_element_60;
    PyObject *tmp_call_arg_element_61;
    PyObject *tmp_call_arg_element_62;
    PyObject *tmp_call_arg_element_63;
    PyObject *tmp_call_arg_element_64;
    PyObject *tmp_call_arg_element_65;
    PyObject *tmp_call_arg_element_66;
    PyObject *tmp_call_arg_element_67;
    PyObject *tmp_call_arg_element_68;
    PyObject *tmp_call_arg_element_69;
    PyObject *tmp_call_arg_element_70;
    PyObject *tmp_call_arg_element_71;
    PyObject *tmp_call_arg_element_72;
    PyObject *tmp_call_arg_element_73;
    PyObject *tmp_call_arg_element_74;
    PyObject *tmp_call_arg_element_75;
    PyObject *tmp_call_arg_element_76;
    PyObject *tmp_call_arg_element_77;
    PyObject *tmp_call_arg_element_78;
    PyObject *tmp_call_arg_element_79;
    PyObject *tmp_call_arg_element_80;
    PyObject *tmp_call_arg_element_81;
    PyObject *tmp_call_arg_element_82;
    PyObject *tmp_call_arg_element_83;
    PyObject *tmp_call_arg_element_84;
    PyObject *tmp_call_arg_element_85;
    PyObject *tmp_call_arg_element_86;
    PyObject *tmp_call_arg_element_87;
    PyObject *tmp_call_arg_element_88;
    PyObject *tmp_call_arg_element_89;
    PyObject *tmp_call_arg_element_90;
    PyObject *tmp_call_arg_element_91;
    PyObject *tmp_call_arg_element_92;
    PyObject *tmp_call_arg_element_93;
    PyObject *tmp_call_arg_element_94;
    PyObject *tmp_call_arg_element_95;
    PyObject *tmp_call_arg_element_96;
    PyObject *tmp_call_arg_element_97;
    PyObject *tmp_call_arg_element_98;
    PyObject *tmp_call_arg_element_99;
    PyObject *tmp_call_arg_element_100;
    PyObject *tmp_call_arg_element_101;
    PyObject *tmp_call_arg_element_102;
    PyObject *tmp_call_arg_element_103;
    PyObject *tmp_call_arg_element_104;
    PyObject *tmp_call_arg_element_105;
    PyObject *tmp_call_arg_element_106;
    PyObject *tmp_call_arg_element_107;
    PyObject *tmp_call_arg_element_108;
    PyObject *tmp_call_arg_element_109;
    PyObject *tmp_call_arg_element_110;
    PyObject *tmp_call_arg_element_111;
    PyObject *tmp_call_arg_element_112;
    PyObject *tmp_call_arg_element_113;
    PyObject *tmp_call_arg_element_114;
    PyObject *tmp_call_arg_element_115;
    PyObject *tmp_call_arg_element_116;
    PyObject *tmp_call_arg_element_117;
    PyObject *tmp_call_arg_element_118;
    PyObject *tmp_call_arg_element_119;
    PyObject *tmp_call_arg_element_120;
    PyObject *tmp_call_arg_element_121;
    PyObject *tmp_call_arg_element_122;
    PyObject *tmp_call_arg_element_123;
    PyObject *tmp_call_arg_element_124;
    PyObject *tmp_call_arg_element_125;
    PyObject *tmp_call_arg_element_126;
    PyObject *tmp_call_arg_element_127;
    PyObject *tmp_call_arg_element_128;
    PyObject *tmp_call_arg_element_129;
    PyObject *tmp_call_arg_element_130;
    PyObject *tmp_call_arg_element_131;
    PyObject *tmp_call_arg_element_132;
    PyObject *tmp_call_arg_element_133;
    PyObject *tmp_call_arg_element_134;
    PyObject *tmp_call_arg_element_135;
    PyObject *tmp_call_arg_element_136;
    PyObject *tmp_call_arg_element_137;
    PyObject *tmp_call_arg_element_138;
    PyObject *tmp_call_arg_element_139;
    PyObject *tmp_call_arg_element_140;
    PyObject *tmp_call_arg_element_141;
    PyObject *tmp_call_arg_element_142;
    PyObject *tmp_call_arg_element_143;
    PyObject *tmp_call_arg_element_144;
    PyObject *tmp_call_arg_element_145;
    PyObject *tmp_call_arg_element_146;
    PyObject *tmp_call_arg_element_147;
    PyObject *tmp_call_arg_element_148;
    PyObject *tmp_call_arg_element_149;
    PyObject *tmp_call_arg_element_150;
    PyObject *tmp_call_arg_element_151;
    PyObject *tmp_call_arg_element_152;
    PyObject *tmp_call_arg_element_153;
    PyObject *tmp_call_arg_element_154;
    PyObject *tmp_call_arg_element_155;
    PyObject *tmp_call_arg_element_156;
    PyObject *tmp_call_arg_element_157;
    PyObject *tmp_call_arg_element_158;
    PyObject *tmp_call_arg_element_159;
    PyObject *tmp_call_arg_element_160;
    PyObject *tmp_call_arg_element_161;
    PyObject *tmp_call_arg_element_162;
    PyObject *tmp_call_arg_element_163;
    PyObject *tmp_call_arg_element_164;
    PyObject *tmp_call_arg_element_165;
    PyObject *tmp_call_arg_element_166;
    PyObject *tmp_call_arg_element_167;
    PyObject *tmp_call_arg_element_168;
    PyObject *tmp_call_arg_element_169;
    PyObject *tmp_call_arg_element_170;
    PyObject *tmp_call_arg_element_171;
    PyObject *tmp_call_arg_element_172;
    PyObject *tmp_call_arg_element_173;
    PyObject *tmp_call_arg_element_174;
    PyObject *tmp_call_arg_element_175;
    PyObject *tmp_call_arg_element_176;
    PyObject *tmp_call_arg_element_177;
    PyObject *tmp_call_arg_element_178;
    PyObject *tmp_call_arg_element_179;
    PyObject *tmp_call_arg_element_180;
    PyObject *tmp_call_arg_element_181;
    PyObject *tmp_call_arg_element_182;
    PyObject *tmp_call_arg_element_183;
    PyObject *tmp_call_arg_element_184;
    PyObject *tmp_call_arg_element_185;
    PyObject *tmp_call_arg_element_186;
    PyObject *tmp_call_arg_element_187;
    PyObject *tmp_call_arg_element_188;
    PyObject *tmp_call_arg_element_189;
    PyObject *tmp_call_arg_element_190;
    PyObject *tmp_call_arg_element_191;
    PyObject *tmp_call_arg_element_192;
    PyObject *tmp_call_arg_element_193;
    PyObject *tmp_call_arg_element_194;
    PyObject *tmp_call_arg_element_195;
    PyObject *tmp_call_arg_element_196;
    PyObject *tmp_call_arg_element_197;
    PyObject *tmp_call_arg_element_198;
    PyObject *tmp_call_arg_element_199;
    PyObject *tmp_call_arg_element_200;
    PyObject *tmp_call_arg_element_201;
    PyObject *tmp_call_arg_element_202;
    PyObject *tmp_call_arg_element_203;
    PyObject *tmp_call_arg_element_204;
    PyObject *tmp_call_arg_element_205;
    PyObject *tmp_call_arg_element_206;
    PyObject *tmp_call_arg_element_207;
    PyObject *tmp_call_arg_element_208;
    PyObject *tmp_call_arg_element_209;
    PyObject *tmp_call_arg_element_210;
    PyObject *tmp_call_arg_element_211;
    PyObject *tmp_call_arg_element_212;
    PyObject *tmp_call_arg_element_213;
    PyObject *tmp_call_arg_element_214;
    PyObject *tmp_call_arg_element_215;
    PyObject *tmp_call_arg_element_216;
    PyObject *tmp_call_arg_element_217;
    PyObject *tmp_call_arg_element_218;
    PyObject *tmp_call_arg_element_219;
    PyObject *tmp_call_arg_element_220;
    PyObject *tmp_call_arg_element_221;
    PyObject *tmp_call_arg_element_222;
    PyObject *tmp_call_arg_element_223;
    PyObject *tmp_call_arg_element_224;
    PyObject *tmp_call_arg_element_225;
    PyObject *tmp_call_arg_element_226;
    PyObject *tmp_call_arg_element_227;
    PyObject *tmp_call_arg_element_228;
    PyObject *tmp_call_arg_element_229;
    PyObject *tmp_call_arg_element_230;
    PyObject *tmp_call_arg_element_231;
    PyObject *tmp_call_arg_element_232;
    PyObject *tmp_call_arg_element_233;
    PyObject *tmp_call_arg_element_234;
    PyObject *tmp_call_arg_element_235;
    PyObject *tmp_call_arg_element_236;
    PyObject *tmp_call_arg_element_237;
    PyObject *tmp_call_arg_element_238;
    PyObject *tmp_call_arg_element_239;
    PyObject *tmp_call_arg_element_240;
    PyObject *tmp_call_arg_element_241;
    PyObject *tmp_call_arg_element_242;
    PyObject *tmp_call_arg_element_243;
    PyObject *tmp_call_arg_element_244;
    PyObject *tmp_call_arg_element_245;
    PyObject *tmp_call_arg_element_246;
    PyObject *tmp_call_arg_element_247;
    PyObject *tmp_call_arg_element_248;
    PyObject *tmp_call_arg_element_249;
    PyObject *tmp_call_arg_element_250;
    PyObject *tmp_call_arg_element_251;
    PyObject *tmp_call_arg_element_252;
    PyObject *tmp_call_arg_element_253;
    PyObject *tmp_call_arg_element_254;
    PyObject *tmp_call_arg_element_255;
    PyObject *tmp_call_arg_element_256;
    PyObject *tmp_call_arg_element_257;
    PyObject *tmp_call_arg_element_258;
    PyObject *tmp_call_arg_element_259;
    PyObject *tmp_call_arg_element_260;
    PyObject *tmp_call_arg_element_261;
    PyObject *tmp_call_arg_element_262;
    PyObject *tmp_call_arg_element_263;
    PyObject *tmp_call_arg_element_264;
    PyObject *tmp_call_arg_element_265;
    PyObject *tmp_call_arg_element_266;
    PyObject *tmp_call_arg_element_267;
    PyObject *tmp_call_arg_element_268;
    PyObject *tmp_call_arg_element_269;
    PyObject *tmp_call_arg_element_270;
    PyObject *tmp_call_arg_element_271;
    PyObject *tmp_call_arg_element_272;
    PyObject *tmp_call_arg_element_273;
    PyObject *tmp_call_arg_element_274;
    PyObject *tmp_call_arg_element_275;
    PyObject *tmp_call_arg_element_276;
    PyObject *tmp_call_arg_element_277;
    PyObject *tmp_call_arg_element_278;
    PyObject *tmp_call_arg_element_279;
    PyObject *tmp_call_arg_element_280;
    PyObject *tmp_call_arg_element_281;
    PyObject *tmp_call_arg_element_282;
    PyObject *tmp_call_arg_element_283;
    PyObject *tmp_call_arg_element_284;
    PyObject *tmp_call_arg_element_285;
    PyObject *tmp_call_arg_element_286;
    PyObject *tmp_call_arg_element_287;
    PyObject *tmp_call_arg_element_288;
    PyObject *tmp_call_arg_element_289;
    PyObject *tmp_call_arg_element_290;
    PyObject *tmp_call_arg_element_291;
    PyObject *tmp_call_arg_element_292;
    PyObject *tmp_call_arg_element_293;
    PyObject *tmp_call_arg_element_294;
    PyObject *tmp_call_arg_element_295;
    PyObject *tmp_call_arg_element_296;
    PyObject *tmp_call_arg_element_297;
    PyObject *tmp_call_arg_element_298;
    PyObject *tmp_call_arg_element_299;
    PyObject *tmp_call_arg_element_300;
    PyObject *tmp_call_arg_element_301;
    PyObject *tmp_call_arg_element_302;
    PyObject *tmp_call_arg_element_303;
    PyObject *tmp_call_arg_element_304;
    PyObject *tmp_call_arg_element_305;
    PyObject *tmp_call_arg_element_306;
    PyObject *tmp_call_arg_element_307;
    PyObject *tmp_call_arg_element_308;
    PyObject *tmp_call_arg_element_309;
    PyObject *tmp_call_arg_element_310;
    PyObject *tmp_call_arg_element_311;
    PyObject *tmp_call_arg_element_312;
    PyObject *tmp_call_arg_element_313;
    PyObject *tmp_call_arg_element_314;
    PyObject *tmp_call_arg_element_315;
    PyObject *tmp_call_arg_element_316;
    PyObject *tmp_call_arg_element_317;
    PyObject *tmp_call_arg_element_318;
    PyObject *tmp_call_arg_element_319;
    PyObject *tmp_call_arg_element_320;
    PyObject *tmp_call_arg_element_321;
    PyObject *tmp_call_arg_element_322;
    PyObject *tmp_call_arg_element_323;
    PyObject *tmp_call_arg_element_324;
    PyObject *tmp_call_arg_element_325;
    PyObject *tmp_call_arg_element_326;
    PyObject *tmp_call_arg_element_327;
    PyObject *tmp_call_arg_element_328;
    PyObject *tmp_call_arg_element_329;
    PyObject *tmp_call_arg_element_330;
    PyObject *tmp_call_arg_element_331;
    PyObject *tmp_call_arg_element_332;
    PyObject *tmp_call_arg_element_333;
    PyObject *tmp_call_arg_element_334;
    PyObject *tmp_call_arg_element_335;
    PyObject *tmp_call_arg_element_336;
    PyObject *tmp_call_arg_element_337;
    PyObject *tmp_call_arg_element_338;
    PyObject *tmp_call_arg_element_339;
    PyObject *tmp_call_arg_element_340;
    PyObject *tmp_call_arg_element_341;
    PyObject *tmp_call_arg_element_342;
    PyObject *tmp_call_arg_element_343;
    PyObject *tmp_call_arg_element_344;
    PyObject *tmp_call_arg_element_345;
    PyObject *tmp_call_arg_element_346;
    PyObject *tmp_call_arg_element_347;
    PyObject *tmp_call_arg_element_348;
    PyObject *tmp_call_arg_element_349;
    PyObject *tmp_call_arg_element_350;
    PyObject *tmp_call_arg_element_351;
    PyObject *tmp_call_arg_element_352;
    PyObject *tmp_call_arg_element_353;
    PyObject *tmp_call_arg_element_354;
    PyObject *tmp_call_arg_element_355;
    PyObject *tmp_call_arg_element_356;
    PyObject *tmp_call_arg_element_357;
    PyObject *tmp_call_arg_element_358;
    PyObject *tmp_call_arg_element_359;
    PyObject *tmp_call_arg_element_360;
    PyObject *tmp_call_arg_element_361;
    PyObject *tmp_call_arg_element_362;
    PyObject *tmp_call_arg_element_363;
    PyObject *tmp_call_arg_element_364;
    PyObject *tmp_call_arg_element_365;
    PyObject *tmp_call_arg_element_366;
    PyObject *tmp_call_arg_element_367;
    PyObject *tmp_call_arg_element_368;
    PyObject *tmp_call_arg_element_369;
    PyObject *tmp_call_arg_element_370;
    PyObject *tmp_call_arg_element_371;
    PyObject *tmp_call_arg_element_372;
    PyObject *tmp_call_arg_element_373;
    PyObject *tmp_call_arg_element_374;
    PyObject *tmp_call_arg_element_375;
    PyObject *tmp_call_arg_element_376;
    PyObject *tmp_call_arg_element_377;
    PyObject *tmp_call_arg_element_378;
    PyObject *tmp_call_arg_element_379;
    PyObject *tmp_call_arg_element_380;
    PyObject *tmp_call_arg_element_381;
    PyObject *tmp_call_arg_element_382;
    PyObject *tmp_call_arg_element_383;
    PyObject *tmp_call_arg_element_384;
    PyObject *tmp_call_arg_element_385;
    PyObject *tmp_call_arg_element_386;
    PyObject *tmp_call_arg_element_387;
    PyObject *tmp_call_arg_element_388;
    PyObject *tmp_call_arg_element_389;
    PyObject *tmp_call_arg_element_390;
    PyObject *tmp_call_arg_element_391;
    PyObject *tmp_call_arg_element_392;
    PyObject *tmp_call_arg_element_393;
    PyObject *tmp_call_arg_element_394;
    PyObject *tmp_call_arg_element_395;
    PyObject *tmp_call_arg_element_396;
    PyObject *tmp_call_arg_element_397;
    PyObject *tmp_call_arg_element_398;
    PyObject *tmp_call_arg_element_399;
    PyObject *tmp_call_arg_element_400;
    PyObject *tmp_call_arg_element_401;
    PyObject *tmp_call_arg_element_402;
    PyObject *tmp_call_arg_element_403;
    PyObject *tmp_call_arg_element_404;
    PyObject *tmp_call_arg_element_405;
    PyObject *tmp_call_arg_element_406;
    PyObject *tmp_call_arg_element_407;
    PyObject *tmp_call_arg_element_408;
    PyObject *tmp_call_arg_element_409;
    PyObject *tmp_call_arg_element_410;
    PyObject *tmp_call_arg_element_411;
    PyObject *tmp_call_arg_element_412;
    PyObject *tmp_call_arg_element_413;
    PyObject *tmp_call_arg_element_414;
    PyObject *tmp_call_arg_element_415;
    PyObject *tmp_call_arg_element_416;
    PyObject *tmp_call_arg_element_417;
    PyObject *tmp_call_arg_element_418;
    PyObject *tmp_call_arg_element_419;
    PyObject *tmp_call_arg_element_420;
    PyObject *tmp_call_arg_element_421;
    PyObject *tmp_call_arg_element_422;
    PyObject *tmp_call_arg_element_423;
    PyObject *tmp_call_arg_element_424;
    PyObject *tmp_call_arg_element_425;
    PyObject *tmp_call_arg_element_426;
    PyObject *tmp_call_arg_element_427;
    PyObject *tmp_call_arg_element_428;
    PyObject *tmp_call_arg_element_429;
    PyObject *tmp_call_arg_element_430;
    PyObject *tmp_call_arg_element_431;
    PyObject *tmp_call_arg_element_432;
    PyObject *tmp_call_arg_element_433;
    PyObject *tmp_call_arg_element_434;
    PyObject *tmp_call_arg_element_435;
    PyObject *tmp_call_arg_element_436;
    PyObject *tmp_call_arg_element_437;
    PyObject *tmp_call_arg_element_438;
    PyObject *tmp_call_arg_element_439;
    PyObject *tmp_call_arg_element_440;
    PyObject *tmp_call_arg_element_441;
    PyObject *tmp_call_arg_element_442;
    PyObject *tmp_call_arg_element_443;
    PyObject *tmp_call_arg_element_444;
    PyObject *tmp_call_arg_element_445;
    PyObject *tmp_call_arg_element_446;
    PyObject *tmp_call_arg_element_447;
    PyObject *tmp_call_arg_element_448;
    PyObject *tmp_call_arg_element_449;
    PyObject *tmp_call_arg_element_450;
    PyObject *tmp_call_arg_element_451;
    PyObject *tmp_call_arg_element_452;
    PyObject *tmp_call_arg_element_453;
    PyObject *tmp_call_arg_element_454;
    PyObject *tmp_call_arg_element_455;
    PyObject *tmp_call_arg_element_456;
    PyObject *tmp_call_arg_element_457;
    PyObject *tmp_call_arg_element_458;
    PyObject *tmp_call_arg_element_459;
    PyObject *tmp_call_arg_element_460;
    PyObject *tmp_call_arg_element_461;
    PyObject *tmp_call_arg_element_462;
    PyObject *tmp_call_arg_element_463;
    PyObject *tmp_call_arg_element_464;
    PyObject *tmp_call_arg_element_465;
    PyObject *tmp_call_arg_element_466;
    PyObject *tmp_call_arg_element_467;
    PyObject *tmp_call_arg_element_468;
    PyObject *tmp_call_arg_element_469;
    PyObject *tmp_call_arg_element_470;
    PyObject *tmp_call_arg_element_471;
    PyObject *tmp_call_arg_element_472;
    PyObject *tmp_call_arg_element_473;
    PyObject *tmp_call_arg_element_474;
    PyObject *tmp_call_arg_element_475;
    PyObject *tmp_call_arg_element_476;
    PyObject *tmp_call_arg_element_477;
    PyObject *tmp_call_arg_element_478;
    PyObject *tmp_call_arg_element_479;
    PyObject *tmp_call_arg_element_480;
    PyObject *tmp_call_arg_element_481;
    PyObject *tmp_call_arg_element_482;
    PyObject *tmp_call_arg_element_483;
    PyObject *tmp_call_arg_element_484;
    PyObject *tmp_call_arg_element_485;
    PyObject *tmp_call_arg_element_486;
    PyObject *tmp_call_arg_element_487;
    PyObject *tmp_call_arg_element_488;
    PyObject *tmp_call_arg_element_489;
    PyObject *tmp_call_arg_element_490;
    PyObject *tmp_call_arg_element_491;
    PyObject *tmp_call_arg_element_492;
    PyObject *tmp_call_arg_element_493;
    PyObject *tmp_call_arg_element_494;
    PyObject *tmp_call_arg_element_495;
    PyObject *tmp_call_arg_element_496;
    PyObject *tmp_call_arg_element_497;
    PyObject *tmp_call_arg_element_498;
    PyObject *tmp_call_arg_element_499;
    PyObject *tmp_call_arg_element_500;
    PyObject *tmp_call_arg_element_501;
    PyObject *tmp_call_arg_element_502;
    PyObject *tmp_call_arg_element_503;
    PyObject *tmp_call_arg_element_504;
    PyObject *tmp_call_arg_element_505;
    PyObject *tmp_call_arg_element_506;
    PyObject *tmp_call_arg_element_507;
    PyObject *tmp_call_arg_element_508;
    PyObject *tmp_call_arg_element_509;
    PyObject *tmp_call_arg_element_510;
    PyObject *tmp_call_arg_element_511;
    PyObject *tmp_call_arg_element_512;
    PyObject *tmp_call_arg_element_513;
    PyObject *tmp_call_arg_element_514;
    PyObject *tmp_call_arg_element_515;
    PyObject *tmp_call_arg_element_516;
    PyObject *tmp_call_arg_element_517;
    PyObject *tmp_call_arg_element_518;
    PyObject *tmp_call_arg_element_519;
    PyObject *tmp_call_arg_element_520;
    PyObject *tmp_call_arg_element_521;
    PyObject *tmp_call_arg_element_522;
    PyObject *tmp_call_arg_element_523;
    PyObject *tmp_call_arg_element_524;
    PyObject *tmp_call_arg_element_525;
    PyObject *tmp_call_arg_element_526;
    PyObject *tmp_call_arg_element_527;
    PyObject *tmp_call_arg_element_528;
    PyObject *tmp_call_arg_element_529;
    PyObject *tmp_call_arg_element_530;
    PyObject *tmp_call_arg_element_531;
    PyObject *tmp_call_arg_element_532;
    PyObject *tmp_call_arg_element_533;
    PyObject *tmp_call_arg_element_534;
    PyObject *tmp_call_arg_element_535;
    PyObject *tmp_call_arg_element_536;
    PyObject *tmp_call_arg_element_537;
    PyObject *tmp_call_arg_element_538;
    PyObject *tmp_call_arg_element_539;
    PyObject *tmp_call_arg_element_540;
    PyObject *tmp_call_arg_element_541;
    PyObject *tmp_call_arg_element_542;
    PyObject *tmp_call_arg_element_543;
    PyObject *tmp_call_arg_element_544;
    PyObject *tmp_call_arg_element_545;
    PyObject *tmp_call_arg_element_546;
    PyObject *tmp_call_arg_element_547;
    PyObject *tmp_call_arg_element_548;
    PyObject *tmp_call_arg_element_549;
    PyObject *tmp_call_arg_element_550;
    PyObject *tmp_call_arg_element_551;
    PyObject *tmp_call_arg_element_552;
    PyObject *tmp_call_arg_element_553;
    PyObject *tmp_call_arg_element_554;
    PyObject *tmp_call_arg_element_555;
    PyObject *tmp_call_arg_element_556;
    PyObject *tmp_call_arg_element_557;
    PyObject *tmp_call_arg_element_558;
    PyObject *tmp_call_arg_element_559;
    PyObject *tmp_call_arg_element_560;
    PyObject *tmp_call_arg_element_561;
    PyObject *tmp_call_arg_element_562;
    PyObject *tmp_call_arg_element_563;
    PyObject *tmp_call_arg_element_564;
    PyObject *tmp_call_arg_element_565;
    PyObject *tmp_call_arg_element_566;
    PyObject *tmp_call_arg_element_567;
    PyObject *tmp_call_arg_element_568;
    PyObject *tmp_call_arg_element_569;
    PyObject *tmp_call_arg_element_570;
    PyObject *tmp_call_arg_element_571;
    PyObject *tmp_call_arg_element_572;
    PyObject *tmp_call_arg_element_573;
    PyObject *tmp_call_arg_element_574;
    PyObject *tmp_call_arg_element_575;
    PyObject *tmp_call_arg_element_576;
    PyObject *tmp_call_arg_element_577;
    PyObject *tmp_call_arg_element_578;
    PyObject *tmp_call_arg_element_579;
    PyObject *tmp_call_arg_element_580;
    PyObject *tmp_call_arg_element_581;
    PyObject *tmp_call_arg_element_582;
    PyObject *tmp_call_arg_element_583;
    PyObject *tmp_call_arg_element_584;
    PyObject *tmp_call_arg_element_585;
    PyObject *tmp_call_arg_element_586;
    PyObject *tmp_call_arg_element_587;
    PyObject *tmp_call_arg_element_588;
    PyObject *tmp_call_arg_element_589;
    PyObject *tmp_call_arg_element_590;
    PyObject *tmp_call_arg_element_591;
    PyObject *tmp_call_arg_element_592;
    PyObject *tmp_call_arg_element_593;
    PyObject *tmp_call_arg_element_594;
    PyObject *tmp_call_arg_element_595;
    PyObject *tmp_call_arg_element_596;
    PyObject *tmp_call_arg_element_597;
    PyObject *tmp_call_arg_element_598;
    PyObject *tmp_call_arg_element_599;
    PyObject *tmp_call_arg_element_600;
    PyObject *tmp_call_arg_element_601;
    PyObject *tmp_call_arg_element_602;
    PyObject *tmp_call_arg_element_603;
    PyObject *tmp_call_arg_element_604;
    PyObject *tmp_call_arg_element_605;
    PyObject *tmp_call_arg_element_606;
    PyObject *tmp_call_arg_element_607;
    PyObject *tmp_call_arg_element_608;
    PyObject *tmp_call_arg_element_609;
    PyObject *tmp_call_arg_element_610;
    PyObject *tmp_call_arg_element_611;
    PyObject *tmp_call_arg_element_612;
    PyObject *tmp_call_arg_element_613;
    PyObject *tmp_call_arg_element_614;
    PyObject *tmp_call_arg_element_615;
    PyObject *tmp_call_arg_element_616;
    PyObject *tmp_call_arg_element_617;
    PyObject *tmp_call_arg_element_618;
    PyObject *tmp_call_arg_element_619;
    PyObject *tmp_call_arg_element_620;
    PyObject *tmp_call_arg_element_621;
    PyObject *tmp_call_arg_element_622;
    PyObject *tmp_call_arg_element_623;
    PyObject *tmp_call_arg_element_624;
    PyObject *tmp_call_arg_element_625;
    PyObject *tmp_call_arg_element_626;
    PyObject *tmp_call_arg_element_627;
    PyObject *tmp_call_arg_element_628;
    PyObject *tmp_call_arg_element_629;
    PyObject *tmp_call_arg_element_630;
    PyObject *tmp_call_arg_element_631;
    PyObject *tmp_call_arg_element_632;
    PyObject *tmp_call_arg_element_633;
    PyObject *tmp_call_arg_element_634;
    PyObject *tmp_call_arg_element_635;
    PyObject *tmp_call_arg_element_636;
    PyObject *tmp_call_arg_element_637;
    PyObject *tmp_call_arg_element_638;
    PyObject *tmp_call_arg_element_639;
    PyObject *tmp_call_arg_element_640;
    PyObject *tmp_call_arg_element_641;
    PyObject *tmp_call_arg_element_642;
    PyObject *tmp_call_arg_element_643;
    PyObject *tmp_call_arg_element_644;
    PyObject *tmp_call_arg_element_645;
    PyObject *tmp_call_arg_element_646;
    PyObject *tmp_call_arg_element_647;
    PyObject *tmp_call_arg_element_648;
    PyObject *tmp_call_arg_element_649;
    PyObject *tmp_call_arg_element_650;
    PyObject *tmp_call_arg_element_651;
    PyObject *tmp_call_arg_element_652;
    PyObject *tmp_call_arg_element_653;
    PyObject *tmp_call_arg_element_654;
    PyObject *tmp_call_arg_element_655;
    PyObject *tmp_call_arg_element_656;
    PyObject *tmp_call_arg_element_657;
    PyObject *tmp_call_arg_element_658;
    PyObject *tmp_call_arg_element_659;
    PyObject *tmp_call_arg_element_660;
    PyObject *tmp_call_arg_element_661;
    PyObject *tmp_call_arg_element_662;
    PyObject *tmp_call_arg_element_663;
    PyObject *tmp_call_arg_element_664;
    PyObject *tmp_call_arg_element_665;
    PyObject *tmp_call_arg_element_666;
    PyObject *tmp_call_arg_element_667;
    PyObject *tmp_call_arg_element_668;
    PyObject *tmp_call_arg_element_669;
    PyObject *tmp_call_arg_element_670;
    PyObject *tmp_call_arg_element_671;
    PyObject *tmp_call_arg_element_672;
    PyObject *tmp_call_arg_element_673;
    PyObject *tmp_call_arg_element_674;
    PyObject *tmp_call_arg_element_675;
    PyObject *tmp_call_arg_element_676;
    PyObject *tmp_call_arg_element_677;
    PyObject *tmp_call_arg_element_678;
    PyObject *tmp_call_arg_element_679;
    PyObject *tmp_call_arg_element_680;
    PyObject *tmp_call_arg_element_681;
    PyObject *tmp_call_arg_element_682;
    PyObject *tmp_call_arg_element_683;
    PyObject *tmp_call_arg_element_684;
    PyObject *tmp_call_arg_element_685;
    PyObject *tmp_call_arg_element_686;
    PyObject *tmp_call_arg_element_687;
    PyObject *tmp_call_arg_element_688;
    PyObject *tmp_call_arg_element_689;
    PyObject *tmp_call_arg_element_690;
    PyObject *tmp_call_arg_element_691;
    PyObject *tmp_call_arg_element_692;
    PyObject *tmp_call_arg_element_693;
    PyObject *tmp_call_arg_element_694;
    PyObject *tmp_call_arg_element_695;
    PyObject *tmp_call_arg_element_696;
    PyObject *tmp_call_arg_element_697;
    PyObject *tmp_call_arg_element_698;
    PyObject *tmp_call_arg_element_699;
    PyObject *tmp_call_arg_element_700;
    PyObject *tmp_call_arg_element_701;
    PyObject *tmp_call_arg_element_702;
    PyObject *tmp_call_arg_element_703;
    PyObject *tmp_call_arg_element_704;
    PyObject *tmp_call_arg_element_705;
    PyObject *tmp_call_arg_element_706;
    PyObject *tmp_call_arg_element_707;
    PyObject *tmp_call_arg_element_708;
    PyObject *tmp_call_arg_element_709;
    PyObject *tmp_call_arg_element_710;
    PyObject *tmp_call_arg_element_711;
    PyObject *tmp_call_arg_element_712;
    PyObject *tmp_call_arg_element_713;
    PyObject *tmp_call_arg_element_714;
    PyObject *tmp_call_arg_element_715;
    PyObject *tmp_call_arg_element_716;
    PyObject *tmp_call_arg_element_717;
    PyObject *tmp_call_arg_element_718;
    PyObject *tmp_call_arg_element_719;
    PyObject *tmp_call_arg_element_720;
    PyObject *tmp_call_arg_element_721;
    PyObject *tmp_call_arg_element_722;
    PyObject *tmp_call_arg_element_723;
    PyObject *tmp_call_arg_element_724;
    PyObject *tmp_call_arg_element_725;
    PyObject *tmp_call_arg_element_726;
    PyObject *tmp_call_arg_element_727;
    PyObject *tmp_call_arg_element_728;
    PyObject *tmp_call_arg_element_729;
    PyObject *tmp_call_arg_element_730;
    PyObject *tmp_call_arg_element_731;
    PyObject *tmp_call_arg_element_732;
    PyObject *tmp_call_arg_element_733;
    PyObject *tmp_call_arg_element_734;
    PyObject *tmp_call_arg_element_735;
    PyObject *tmp_call_arg_element_736;
    PyObject *tmp_call_arg_element_737;
    PyObject *tmp_call_arg_element_738;
    PyObject *tmp_call_arg_element_739;
    PyObject *tmp_call_arg_element_740;
    PyObject *tmp_call_arg_element_741;
    PyObject *tmp_call_arg_element_742;
    PyObject *tmp_call_arg_element_743;
    PyObject *tmp_call_arg_element_744;
    PyObject *tmp_call_arg_element_745;
    PyObject *tmp_call_arg_element_746;
    PyObject *tmp_call_arg_element_747;
    PyObject *tmp_call_arg_element_748;
    PyObject *tmp_call_arg_element_749;
    PyObject *tmp_call_arg_element_750;
    PyObject *tmp_call_arg_element_751;
    PyObject *tmp_call_arg_element_752;
    PyObject *tmp_call_arg_element_753;
    PyObject *tmp_call_arg_element_754;
    PyObject *tmp_call_arg_element_755;
    PyObject *tmp_call_arg_element_756;
    PyObject *tmp_call_arg_element_757;
    PyObject *tmp_call_arg_element_758;
    PyObject *tmp_call_arg_element_759;
    PyObject *tmp_call_arg_element_760;
    PyObject *tmp_call_arg_element_761;
    PyObject *tmp_call_arg_element_762;
    PyObject *tmp_call_arg_element_763;
    PyObject *tmp_call_arg_element_764;
    PyObject *tmp_call_arg_element_765;
    PyObject *tmp_call_arg_element_766;
    PyObject *tmp_call_arg_element_767;
    PyObject *tmp_call_arg_element_768;
    PyObject *tmp_call_arg_element_769;
    PyObject *tmp_call_arg_element_770;
    PyObject *tmp_call_arg_element_771;
    PyObject *tmp_call_arg_element_772;
    PyObject *tmp_call_arg_element_773;
    PyObject *tmp_call_arg_element_774;
    PyObject *tmp_call_arg_element_775;
    PyObject *tmp_call_arg_element_776;
    PyObject *tmp_call_arg_element_777;
    PyObject *tmp_call_arg_element_778;
    PyObject *tmp_call_arg_element_779;
    PyObject *tmp_call_arg_element_780;
    PyObject *tmp_call_arg_element_781;
    PyObject *tmp_call_arg_element_782;
    PyObject *tmp_call_arg_element_783;
    PyObject *tmp_call_arg_element_784;
    PyObject *tmp_call_arg_element_785;
    PyObject *tmp_call_arg_element_786;
    PyObject *tmp_call_arg_element_787;
    PyObject *tmp_call_arg_element_788;
    PyObject *tmp_call_arg_element_789;
    PyObject *tmp_call_arg_element_790;
    PyObject *tmp_call_arg_element_791;
    PyObject *tmp_call_arg_element_792;
    PyObject *tmp_call_arg_element_793;
    PyObject *tmp_call_arg_element_794;
    PyObject *tmp_call_arg_element_795;
    PyObject *tmp_call_arg_element_796;
    PyObject *tmp_call_arg_element_797;
    PyObject *tmp_call_arg_element_798;
    PyObject *tmp_call_arg_element_799;
    PyObject *tmp_call_arg_element_800;
    PyObject *tmp_call_arg_element_801;
    PyObject *tmp_call_arg_element_802;
    PyObject *tmp_call_arg_element_803;
    PyObject *tmp_call_arg_element_804;
    PyObject *tmp_call_arg_element_805;
    PyObject *tmp_call_arg_element_806;
    PyObject *tmp_call_arg_element_807;
    PyObject *tmp_call_arg_element_808;
    PyObject *tmp_call_arg_element_809;
    PyObject *tmp_call_arg_element_810;
    PyObject *tmp_call_arg_element_811;
    PyObject *tmp_call_arg_element_812;
    PyObject *tmp_call_arg_element_813;
    PyObject *tmp_call_arg_element_814;
    PyObject *tmp_call_arg_element_815;
    PyObject *tmp_call_arg_element_816;
    PyObject *tmp_call_arg_element_817;
    PyObject *tmp_call_arg_element_818;
    PyObject *tmp_call_arg_element_819;
    PyObject *tmp_called_1;
    PyObject *tmp_called_2;
    PyObject *tmp_called_3;
    PyObject *tmp_called_4;
    PyObject *tmp_called_5;
    PyObject *tmp_called_6;
    PyObject *tmp_called_7;
    PyObject *tmp_called_8;
    PyObject *tmp_called_9;
    PyObject *tmp_called_10;
    PyObject *tmp_called_11;
    PyObject *tmp_called_12;
    PyObject *tmp_called_13;
    PyObject *tmp_called_14;
    PyObject *tmp_called_15;
    PyObject *tmp_called_16;
    PyObject *tmp_called_17;
    PyObject *tmp_called_18;
    PyObject *tmp_called_19;
    PyObject *tmp_called_20;
    PyObject *tmp_called_21;
    PyObject *tmp_called_22;
    PyObject *tmp_called_23;
    PyObject *tmp_called_24;
    PyObject *tmp_called_25;
    PyObject *tmp_called_26;
    PyObject *tmp_called_27;
    PyObject *tmp_called_28;
    PyObject *tmp_called_29;
    PyObject *tmp_called_30;
    PyObject *tmp_called_31;
    PyObject *tmp_called_32;
    PyObject *tmp_called_33;
    PyObject *tmp_called_34;
    PyObject *tmp_called_35;
    PyObject *tmp_called_36;
    PyObject *tmp_called_37;
    PyObject *tmp_called_38;
    PyObject *tmp_called_39;
    PyObject *tmp_called_40;
    PyObject *tmp_called_41;
    PyObject *tmp_called_42;
    PyObject *tmp_called_43;
    PyObject *tmp_called_44;
    PyObject *tmp_called_45;
    PyObject *tmp_called_46;
    PyObject *tmp_called_47;
    PyObject *tmp_called_48;
    PyObject *tmp_called_49;
    PyObject *tmp_called_50;
    PyObject *tmp_called_51;
    PyObject *tmp_called_52;
    PyObject *tmp_called_53;
    PyObject *tmp_called_54;
    PyObject *tmp_called_55;
    PyObject *tmp_called_56;
    PyObject *tmp_called_57;
    PyObject *tmp_called_58;
    PyObject *tmp_called_59;
    PyObject *tmp_called_60;
    PyObject *tmp_called_61;
    PyObject *tmp_called_62;
    PyObject *tmp_called_63;
    PyObject *tmp_called_64;
    PyObject *tmp_called_65;
    PyObject *tmp_called_66;
    PyObject *tmp_called_67;
    PyObject *tmp_called_68;
    PyObject *tmp_called_69;
    PyObject *tmp_called_70;
    PyObject *tmp_called_71;
    PyObject *tmp_called_72;
    PyObject *tmp_called_73;
    PyObject *tmp_called_74;
    PyObject *tmp_called_75;
    PyObject *tmp_called_76;
    PyObject *tmp_called_77;
    PyObject *tmp_called_78;
    PyObject *tmp_called_79;
    PyObject *tmp_called_80;
    PyObject *tmp_called_81;
    PyObject *tmp_called_82;
    PyObject *tmp_called_83;
    PyObject *tmp_called_84;
    PyObject *tmp_called_85;
    PyObject *tmp_called_86;
    PyObject *tmp_called_87;
    PyObject *tmp_called_88;
    PyObject *tmp_called_89;
    PyObject *tmp_called_90;
    PyObject *tmp_called_91;
    PyObject *tmp_called_92;
    PyObject *tmp_called_93;
    PyObject *tmp_called_94;
    PyObject *tmp_called_95;
    PyObject *tmp_called_96;
    PyObject *tmp_called_97;
    PyObject *tmp_called_98;
    PyObject *tmp_called_99;
    PyObject *tmp_called_100;
    PyObject *tmp_called_101;
    PyObject *tmp_called_102;
    PyObject *tmp_called_103;
    PyObject *tmp_called_104;
    PyObject *tmp_called_105;
    PyObject *tmp_called_106;
    PyObject *tmp_called_107;
    PyObject *tmp_called_108;
    PyObject *tmp_called_109;
    PyObject *tmp_called_110;
    PyObject *tmp_called_111;
    PyObject *tmp_called_112;
    PyObject *tmp_called_113;
    PyObject *tmp_called_114;
    PyObject *tmp_called_115;
    PyObject *tmp_called_116;
    PyObject *tmp_called_117;
    PyObject *tmp_called_118;
    PyObject *tmp_called_119;
    PyObject *tmp_called_120;
    PyObject *tmp_called_121;
    PyObject *tmp_called_122;
    PyObject *tmp_called_123;
    PyObject *tmp_called_124;
    PyObject *tmp_called_125;
    PyObject *tmp_called_126;
    PyObject *tmp_called_127;
    PyObject *tmp_called_128;
    PyObject *tmp_called_129;
    PyObject *tmp_called_130;
    PyObject *tmp_called_131;
    PyObject *tmp_called_132;
    PyObject *tmp_called_133;
    PyObject *tmp_called_134;
    PyObject *tmp_called_135;
    PyObject *tmp_called_136;
    PyObject *tmp_called_137;
    PyObject *tmp_called_138;
    PyObject *tmp_called_139;
    PyObject *tmp_called_140;
    PyObject *tmp_called_141;
    PyObject *tmp_called_142;
    PyObject *tmp_called_143;
    PyObject *tmp_called_144;
    PyObject *tmp_called_145;
    PyObject *tmp_called_146;
    PyObject *tmp_called_147;
    PyObject *tmp_called_148;
    PyObject *tmp_called_149;
    PyObject *tmp_called_150;
    PyObject *tmp_called_151;
    PyObject *tmp_called_152;
    PyObject *tmp_called_153;
    PyObject *tmp_called_154;
    PyObject *tmp_called_155;
    PyObject *tmp_called_156;
    PyObject *tmp_called_157;
    PyObject *tmp_called_158;
    PyObject *tmp_called_159;
    PyObject *tmp_called_160;
    PyObject *tmp_called_161;
    PyObject *tmp_called_162;
    PyObject *tmp_called_163;
    PyObject *tmp_called_164;
    PyObject *tmp_called_165;
    PyObject *tmp_called_166;
    PyObject *tmp_called_167;
    PyObject *tmp_called_168;
    PyObject *tmp_called_169;
    PyObject *tmp_called_170;
    PyObject *tmp_called_171;
    PyObject *tmp_called_172;
    PyObject *tmp_called_173;
    PyObject *tmp_called_174;
    PyObject *tmp_called_175;
    PyObject *tmp_called_176;
    PyObject *tmp_called_177;
    PyObject *tmp_called_178;
    PyObject *tmp_called_179;
    PyObject *tmp_called_180;
    PyObject *tmp_called_181;
    PyObject *tmp_called_182;
    PyObject *tmp_called_183;
    PyObject *tmp_called_184;
    PyObject *tmp_called_185;
    PyObject *tmp_called_186;
    PyObject *tmp_called_187;
    PyObject *tmp_called_188;
    PyObject *tmp_called_189;
    PyObject *tmp_called_190;
    PyObject *tmp_called_191;
    PyObject *tmp_called_192;
    PyObject *tmp_called_193;
    PyObject *tmp_called_194;
    PyObject *tmp_called_195;
    PyObject *tmp_called_196;
    PyObject *tmp_called_197;
    PyObject *tmp_called_198;
    PyObject *tmp_called_199;
    PyObject *tmp_called_200;
    PyObject *tmp_called_201;
    PyObject *tmp_called_202;
    PyObject *tmp_called_203;
    PyObject *tmp_called_204;
    PyObject *tmp_called_205;
    PyObject *tmp_called_206;
    PyObject *tmp_called_207;
    PyObject *tmp_called_208;
    PyObject *tmp_called_209;
    PyObject *tmp_called_210;
    PyObject *tmp_called_211;
    PyObject *tmp_called_212;
    PyObject *tmp_called_213;
    PyObject *tmp_called_214;
    PyObject *tmp_called_215;
    PyObject *tmp_called_216;
    PyObject *tmp_called_217;
    PyObject *tmp_called_218;
    PyObject *tmp_called_219;
    PyObject *tmp_called_220;
    PyObject *tmp_called_221;
    PyObject *tmp_called_222;
    PyObject *tmp_called_223;
    PyObject *tmp_called_224;
    PyObject *tmp_called_225;
    PyObject *tmp_called_226;
    PyObject *tmp_called_227;
    PyObject *tmp_called_228;
    PyObject *tmp_called_229;
    PyObject *tmp_called_230;
    PyObject *tmp_called_231;
    PyObject *tmp_called_232;
    PyObject *tmp_called_233;
    PyObject *tmp_called_234;
    PyObject *tmp_called_235;
    PyObject *tmp_called_236;
    PyObject *tmp_called_237;
    PyObject *tmp_called_238;
    PyObject *tmp_called_239;
    PyObject *tmp_called_240;
    PyObject *tmp_called_241;
    PyObject *tmp_called_242;
    PyObject *tmp_called_243;
    PyObject *tmp_called_244;
    PyObject *tmp_called_245;
    PyObject *tmp_called_246;
    PyObject *tmp_called_247;
    PyObject *tmp_called_248;
    PyObject *tmp_called_249;
    PyObject *tmp_called_250;
    PyObject *tmp_called_251;
    PyObject *tmp_called_252;
    PyObject *tmp_called_253;
    PyObject *tmp_called_254;
    PyObject *tmp_called_255;
    PyObject *tmp_called_256;
    PyObject *tmp_called_257;
    PyObject *tmp_called_258;
    PyObject *tmp_called_259;
    PyObject *tmp_called_260;
    PyObject *tmp_called_261;
    PyObject *tmp_called_262;
    PyObject *tmp_called_263;
    PyObject *tmp_called_264;
    PyObject *tmp_called_265;
    PyObject *tmp_called_266;
    PyObject *tmp_called_267;
    PyObject *tmp_called_268;
    PyObject *tmp_called_269;
    PyObject *tmp_called_270;
    PyObject *tmp_called_271;
    PyObject *tmp_called_272;
    PyObject *tmp_called_273;
    PyObject *tmp_import_globals_1;
    PyObject *tmp_import_globals_2;
    PyObject *tmp_import_globals_3;
    PyObject *tmp_import_globals_4;
    PyObject *tmp_import_name_from_1;
    PyObject *tmp_import_name_from_2;
    PyObject *tmp_import_name_from_3;
    PyObject *tmp_import_name_from_4;
    NUITKA_MAY_BE_UNUSED PyObject *tmp_unused;

    // Module code.
    tmp_assign_source_1 = const_str_digest_2305035f183ef54bb204548ed9c07925;
    UPDATE_STRING_DICT0( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain___doc__, tmp_assign_source_1 );
    tmp_assign_source_2 = const_str_digest_d634d9ef98cc6cf23dad24d028acd3ca;
    UPDATE_STRING_DICT0( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain___file__, tmp_assign_source_2 );
    // Frame without reuse.
    PyFrameObject *frame_module = MAKE_FRAME( codeobj_93ae707a3531f668d8430ca9639c3dff, module_numpy$add_newdocs );

    // Push the new frame as the currently active one, and we should be exlusively
    // owning it.
    pushFrameStack( frame_module );
    assert( Py_REFCNT( frame_module ) == 1 );

#if PYTHON_VERSION >= 340
    frame_module->f_executing += 1;
#endif

    // Framed code:
    tmp_import_globals_1 = ((PyModuleObject *)module_numpy$add_newdocs)->md_dict;
    frame_module->f_lineno = 11;
    tmp_import_name_from_1 = IMPORT_MODULE( const_str_plain___future__, tmp_import_globals_1, tmp_import_globals_1, const_tuple_b3c114ff65e5229953139969fd8f9f4c_tuple, const_int_0 );
    if ( tmp_import_name_from_1 == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 11;
        goto frame_exception_exit_1;
    }
    tmp_assign_source_3 = IMPORT_NAME( tmp_import_name_from_1, const_str_plain_division );
    Py_DECREF( tmp_import_name_from_1 );
    if ( tmp_assign_source_3 == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 11;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_division, tmp_assign_source_3 );
    tmp_import_globals_2 = ((PyModuleObject *)module_numpy$add_newdocs)->md_dict;
    frame_module->f_lineno = 11;
    tmp_import_name_from_2 = IMPORT_MODULE( const_str_plain___future__, tmp_import_globals_2, tmp_import_globals_2, const_tuple_b3c114ff65e5229953139969fd8f9f4c_tuple, const_int_0 );
    if ( tmp_import_name_from_2 == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 11;
        goto frame_exception_exit_1;
    }
    tmp_assign_source_4 = IMPORT_NAME( tmp_import_name_from_2, const_str_plain_absolute_import );
    Py_DECREF( tmp_import_name_from_2 );
    if ( tmp_assign_source_4 == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 11;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_absolute_import, tmp_assign_source_4 );
    tmp_import_globals_3 = ((PyModuleObject *)module_numpy$add_newdocs)->md_dict;
    frame_module->f_lineno = 11;
    tmp_import_name_from_3 = IMPORT_MODULE( const_str_plain___future__, tmp_import_globals_3, tmp_import_globals_3, const_tuple_b3c114ff65e5229953139969fd8f9f4c_tuple, const_int_0 );
    if ( tmp_import_name_from_3 == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 11;
        goto frame_exception_exit_1;
    }
    tmp_assign_source_5 = IMPORT_NAME( tmp_import_name_from_3, const_str_plain_print_function );
    Py_DECREF( tmp_import_name_from_3 );
    if ( tmp_assign_source_5 == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 11;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_print_function, tmp_assign_source_5 );
    tmp_import_globals_4 = ((PyModuleObject *)module_numpy$add_newdocs)->md_dict;
    frame_module->f_lineno = 13;
    tmp_import_name_from_4 = IMPORT_MODULE( const_str_digest_0b4e4303427381d5eb687ef96e3ca993, tmp_import_globals_4, tmp_import_globals_4, const_tuple_str_plain_add_newdoc_tuple, const_int_0 );
    if ( tmp_import_name_from_4 == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 13;
        goto frame_exception_exit_1;
    }
    tmp_assign_source_6 = IMPORT_NAME( tmp_import_name_from_4, const_str_plain_add_newdoc );
    Py_DECREF( tmp_import_name_from_4 );
    if ( tmp_assign_source_6 == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 13;
        goto frame_exception_exit_1;
    }
    UPDATE_STRING_DICT1( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc, tmp_assign_source_6 );
    tmp_called_1 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_1 == NULL ))
    {
        tmp_called_1 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_1 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 23;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_1 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_2 = const_str_plain_flatiter;
    tmp_call_arg_element_3 = const_str_digest_79b28d30a8997775a032bc15c59c242b;
    frame_module->f_lineno = 64;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_1, tmp_call_arg_element_1, tmp_call_arg_element_2, tmp_call_arg_element_3 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 64;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_2 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_2 == NULL ))
    {
        tmp_called_2 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_2 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 68;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_4 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_5 = const_str_plain_flatiter;
    tmp_call_arg_element_6 = const_tuple_str_plain_base_str_digest_5f4f358829eed338df184bb9b494a31b_tuple;
    frame_module->f_lineno = 79;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_2, tmp_call_arg_element_4, tmp_call_arg_element_5, tmp_call_arg_element_6 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 79;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_3 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_3 == NULL ))
    {
        tmp_called_3 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_3 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 83;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_7 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_8 = const_str_plain_flatiter;
    tmp_call_arg_element_9 = const_tuple_str_plain_coords_str_digest_174aede2ff82a76082bfc6cd626d8156_tuple;
    frame_module->f_lineno = 98;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_3, tmp_call_arg_element_7, tmp_call_arg_element_8, tmp_call_arg_element_9 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 98;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_4 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_4 == NULL ))
    {
        tmp_called_4 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_4 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 102;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_10 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_11 = const_str_plain_flatiter;
    tmp_call_arg_element_12 = const_tuple_str_plain_index_str_digest_1358868064bc6d53fbaf09ac4fd0b872_tuple;
    frame_module->f_lineno = 117;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_4, tmp_call_arg_element_10, tmp_call_arg_element_11, tmp_call_arg_element_12 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 117;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_5 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_5 == NULL ))
    {
        tmp_called_5 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_5 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 121;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_13 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_14 = const_str_plain_flatiter;
    tmp_call_arg_element_15 = const_tuple_5db8241ef79e2f712ccec22d1e90f58f_tuple;
    frame_module->f_lineno = 124;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_5, tmp_call_arg_element_13, tmp_call_arg_element_14, tmp_call_arg_element_15 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 124;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_6 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_6 == NULL ))
    {
        tmp_called_6 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_6 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 127;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_16 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_17 = const_str_plain_flatiter;
    tmp_call_arg_element_18 = const_tuple_str_plain_copy_str_digest_25b754911e77261e2817076c6c7c48f1_tuple;
    frame_module->f_lineno = 143;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_6, tmp_call_arg_element_16, tmp_call_arg_element_17, tmp_call_arg_element_18 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 143;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_7 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_7 == NULL ))
    {
        tmp_called_7 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_7 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 152;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_19 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_20 = const_str_plain_nditer;
    tmp_call_arg_element_21 = const_str_digest_9c5d9eae7f1e7974a46aad372cb19734;
    frame_module->f_lineno = 377;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_7, tmp_call_arg_element_19, tmp_call_arg_element_20, tmp_call_arg_element_21 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 377;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_8 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_8 == NULL ))
    {
        tmp_called_8 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_8 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 381;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_22 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_23 = const_str_plain_nditer;
    tmp_call_arg_element_24 = const_tuple_str_plain_copy_str_digest_6fcd4d910f0c580920aaa138cefadefd_tuple;
    frame_module->f_lineno = 398;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_8, tmp_call_arg_element_22, tmp_call_arg_element_23, tmp_call_arg_element_24 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 398;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_9 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_9 == NULL ))
    {
        tmp_called_9 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_9 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 400;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_25 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_26 = const_str_plain_nditer;
    tmp_call_arg_element_27 = const_tuple_07310240c40c3d8cdb399bae26808f1a_tuple;
    frame_module->f_lineno = 406;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_9, tmp_call_arg_element_25, tmp_call_arg_element_26, tmp_call_arg_element_27 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 406;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_10 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_10 == NULL ))
    {
        tmp_called_10 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_10 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 408;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_28 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_29 = const_str_plain_nditer;
    tmp_call_arg_element_30 = const_tuple_1217d71b79efac6e10a172e0ff3aa40f_tuple;
    frame_module->f_lineno = 416;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_10, tmp_call_arg_element_28, tmp_call_arg_element_29, tmp_call_arg_element_30 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 416;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_11 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_11 == NULL ))
    {
        tmp_called_11 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_11 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 418;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_31 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_32 = const_str_plain_nditer;
    tmp_call_arg_element_33 = const_tuple_0378df891f16fb015d71ec0711df3ae6_tuple;
    frame_module->f_lineno = 431;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_11, tmp_call_arg_element_31, tmp_call_arg_element_32, tmp_call_arg_element_33 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 431;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_12 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_12 == NULL ))
    {
        tmp_called_12 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_12 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 433;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_34 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_35 = const_str_plain_nditer;
    tmp_call_arg_element_36 = const_tuple_00bc6892d594665177ab89626ab92220_tuple;
    frame_module->f_lineno = 440;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_12, tmp_call_arg_element_34, tmp_call_arg_element_35, tmp_call_arg_element_36 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 440;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_13 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_13 == NULL ))
    {
        tmp_called_13 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_13 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 442;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_37 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_38 = const_str_plain_nditer;
    tmp_call_arg_element_39 = const_tuple_45a0149f7f16e1f303d1ec3737ceb828_tuple;
    frame_module->f_lineno = 449;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_13, tmp_call_arg_element_37, tmp_call_arg_element_38, tmp_call_arg_element_39 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 449;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_14 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_14 == NULL ))
    {
        tmp_called_14 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_14 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 451;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_40 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_41 = const_str_plain_nditer;
    tmp_call_arg_element_42 = const_tuple_str_plain_reset_str_digest_676bb7141f31909e874e2fbf3545a613_tuple;
    frame_module->f_lineno = 457;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_14, tmp_call_arg_element_40, tmp_call_arg_element_41, tmp_call_arg_element_42 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 457;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_15 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_15 == NULL ))
    {
        tmp_called_15 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_15 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 467;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_43 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_44 = const_str_plain_broadcast;
    tmp_call_arg_element_45 = const_str_digest_c6dfd49e205163d1c875ab72f5847079;
    frame_module->f_lineno = 506;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_15, tmp_call_arg_element_43, tmp_call_arg_element_44, tmp_call_arg_element_45 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 506;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_16 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_16 == NULL ))
    {
        tmp_called_16 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_16 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 510;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_46 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_47 = const_str_plain_broadcast;
    tmp_call_arg_element_48 = const_tuple_str_plain_index_str_digest_ad70a04a95b5dd018e58e62432ca77af_tuple;
    frame_module->f_lineno = 526;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_16, tmp_call_arg_element_46, tmp_call_arg_element_47, tmp_call_arg_element_48 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 526;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_17 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_17 == NULL ))
    {
        tmp_called_17 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_17 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 528;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_49 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_50 = const_str_plain_broadcast;
    tmp_call_arg_element_51 = const_tuple_str_plain_iters_str_digest_5564b30c1246ebc5164fceafda0b7325_tuple;
    frame_module->f_lineno = 548;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_17, tmp_call_arg_element_49, tmp_call_arg_element_50, tmp_call_arg_element_51 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 548;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_18 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_18 == NULL ))
    {
        tmp_called_18 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_18 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 550;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_52 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_53 = const_str_plain_broadcast;
    tmp_call_arg_element_54 = const_tuple_str_plain_nd_str_digest_a0b4a4a868593833e2030bdf346e86aa_tuple;
    frame_module->f_lineno = 562;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_18, tmp_call_arg_element_52, tmp_call_arg_element_53, tmp_call_arg_element_54 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 562;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_19 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_19 == NULL ))
    {
        tmp_called_19 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_19 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 564;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_55 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_56 = const_str_plain_broadcast;
    tmp_call_arg_element_57 = const_tuple_f25559e72516c169f61fe445ff2e11d0_tuple;
    frame_module->f_lineno = 576;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_19, tmp_call_arg_element_55, tmp_call_arg_element_56, tmp_call_arg_element_57 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 576;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_20 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_20 == NULL ))
    {
        tmp_called_20 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_20 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 578;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_58 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_59 = const_str_plain_broadcast;
    tmp_call_arg_element_60 = const_tuple_str_plain_shape_str_digest_d88946802d7b4f26fd04d95aa8403087_tuple;
    frame_module->f_lineno = 590;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_20, tmp_call_arg_element_58, tmp_call_arg_element_59, tmp_call_arg_element_60 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 590;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_21 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_21 == NULL ))
    {
        tmp_called_21 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_21 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 592;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_61 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_62 = const_str_plain_broadcast;
    tmp_call_arg_element_63 = const_tuple_str_plain_size_str_digest_c216acd7dfa75e16121e9c0376c68f63_tuple;
    frame_module->f_lineno = 604;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_21, tmp_call_arg_element_61, tmp_call_arg_element_62, tmp_call_arg_element_63 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 604;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_22 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_22 == NULL ))
    {
        tmp_called_22 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_22 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 606;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_64 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_65 = const_str_plain_broadcast;
    tmp_call_arg_element_66 = const_tuple_str_plain_reset_str_digest_8d832150e3217000ba89f19a07841fc6_tuple;
    frame_module->f_lineno = 635;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_22, tmp_call_arg_element_64, tmp_call_arg_element_65, tmp_call_arg_element_66 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 635;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_23 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_23 == NULL ))
    {
        tmp_called_23 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_23 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 643;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_67 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_68 = const_str_plain_array;
    tmp_call_arg_element_69 = const_str_digest_6f0370611700873052f15b37ad7c0a45;
    frame_module->f_lineno = 733;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_23, tmp_call_arg_element_67, tmp_call_arg_element_68, tmp_call_arg_element_69 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 733;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_24 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_24 == NULL ))
    {
        tmp_called_24 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_24 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 735;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_70 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_71 = const_str_plain_empty;
    tmp_call_arg_element_72 = const_str_digest_be315a577a97f868f74e975a1dd63e5b;
    frame_module->f_lineno = 772;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_24, tmp_call_arg_element_70, tmp_call_arg_element_71, tmp_call_arg_element_72 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 772;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_25 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_25 == NULL ))
    {
        tmp_called_25 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_25 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 774;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_73 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_74 = const_str_plain_empty_like;
    tmp_call_arg_element_75 = const_str_digest_dceb90f721201ca66d6b7d26301e9172;
    frame_module->f_lineno = 830;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_25, tmp_call_arg_element_73, tmp_call_arg_element_74, tmp_call_arg_element_75 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 830;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_26 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_26 == NULL ))
    {
        tmp_called_26 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_26 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 833;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_76 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_77 = const_str_plain_scalar;
    tmp_call_arg_element_78 = const_str_digest_bad155f8b85e50ebaaa73a3222b45155;
    frame_module->f_lineno = 845;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_26, tmp_call_arg_element_76, tmp_call_arg_element_77, tmp_call_arg_element_78 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 845;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_27 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_27 == NULL ))
    {
        tmp_called_27 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_27 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 847;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_79 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_80 = const_str_plain_zeros;
    tmp_call_arg_element_81 = const_str_digest_0941a09e3390e79f03c2e20c34373c5b;
    frame_module->f_lineno = 898;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_27, tmp_call_arg_element_79, tmp_call_arg_element_80, tmp_call_arg_element_81 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 898;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_28 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_28 == NULL ))
    {
        tmp_called_28 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_28 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 900;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_82 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_83 = const_str_plain_count_nonzero;
    tmp_call_arg_element_84 = const_str_digest_7f2d5ced66d836de145954e94d0bd586;
    frame_module->f_lineno = 926;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_28, tmp_call_arg_element_82, tmp_call_arg_element_83, tmp_call_arg_element_84 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 926;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_29 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_29 == NULL ))
    {
        tmp_called_29 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_29 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 928;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_85 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_86 = const_str_plain_set_typeDict;
    tmp_call_arg_element_87 = const_str_digest_2afbadb75de43f9037a54e5c2f7c8833;
    frame_module->f_lineno = 934;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_29, tmp_call_arg_element_85, tmp_call_arg_element_86, tmp_call_arg_element_87 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 934;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_30 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_30 == NULL ))
    {
        tmp_called_30 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_30 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 936;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_88 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_89 = const_str_plain_fromstring;
    tmp_call_arg_element_90 = const_str_digest_fccf91dac621388ec7056847b7be2b33;
    frame_module->f_lineno = 986;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_30, tmp_call_arg_element_88, tmp_call_arg_element_89, tmp_call_arg_element_90 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 986;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_31 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_31 == NULL ))
    {
        tmp_called_31 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_31 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 988;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_91 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_92 = const_str_plain_fromiter;
    tmp_call_arg_element_93 = const_str_digest_a8e2653fab1179f045de2f1c2d7d30e6;
    frame_module->f_lineno = 1020;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_31, tmp_call_arg_element_91, tmp_call_arg_element_92, tmp_call_arg_element_93 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1020;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_32 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_32 == NULL ))
    {
        tmp_called_32 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_32 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1022;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_94 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_95 = const_str_plain_fromfile;
    tmp_call_arg_element_96 = const_str_digest_280ee915fc32eab9d8106bcbf1b846d5;
    frame_module->f_lineno = 1095;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_32, tmp_call_arg_element_94, tmp_call_arg_element_95, tmp_call_arg_element_96 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1095;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_33 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_33 == NULL ))
    {
        tmp_called_33 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_33 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1097;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_97 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_98 = const_str_plain_frombuffer;
    tmp_call_arg_element_99 = const_str_digest_abd92491c261be635aa93bc5347a083f;
    frame_module->f_lineno = 1133;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_33, tmp_call_arg_element_97, tmp_call_arg_element_98, tmp_call_arg_element_99 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1133;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_34 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_34 == NULL ))
    {
        tmp_called_34 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_34 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1135;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_100 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_101 = const_str_plain_concatenate;
    tmp_call_arg_element_102 = const_str_digest_302df085aec850216c342352da229924;
    frame_module->f_lineno = 1207;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_34, tmp_call_arg_element_100, tmp_call_arg_element_101, tmp_call_arg_element_102 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1207;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_35 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_35 == NULL ))
    {
        tmp_called_35 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_35 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1209;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_103 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_104 = const_str_plain_inner;
    tmp_call_arg_element_105 = const_str_digest_b70e688cc97e9142ef1d16f748707342;
    frame_module->f_lineno = 1281;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_35, tmp_call_arg_element_103, tmp_call_arg_element_104, tmp_call_arg_element_105 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1281;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_36 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_36 == NULL ))
    {
        tmp_called_36 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_36 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1283;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_106 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_107 = const_str_plain_fastCopyAndTranspose;
    tmp_call_arg_element_108 = const_str_digest_056fc6c2344abd6fe26ba8cfa87f8e77;
    frame_module->f_lineno = 1284;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_36, tmp_call_arg_element_106, tmp_call_arg_element_107, tmp_call_arg_element_108 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1284;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_37 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_37 == NULL ))
    {
        tmp_called_37 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_37 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1286;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_109 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_110 = const_str_plain_correlate;
    tmp_call_arg_element_111 = const_str_digest_aa3e4f331e8b2d95be21b6bd5c9a9f25;
    frame_module->f_lineno = 1287;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_37, tmp_call_arg_element_109, tmp_call_arg_element_110, tmp_call_arg_element_111 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1287;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_38 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_38 == NULL ))
    {
        tmp_called_38 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_38 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1289;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_112 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_113 = const_str_plain_arange;
    tmp_call_arg_element_114 = const_str_digest_a90ba49f05b78c124145313b875607ee;
    frame_module->f_lineno = 1348;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_38, tmp_call_arg_element_112, tmp_call_arg_element_113, tmp_call_arg_element_114 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1348;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_39 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_39 == NULL ))
    {
        tmp_called_39 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_39 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1350;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_115 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_116 = const_str_plain__get_ndarray_c_version;
    tmp_call_arg_element_117 = const_str_digest_384b2dde7dfc8eccbf066d2489386087;
    frame_module->f_lineno = 1355;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_39, tmp_call_arg_element_115, tmp_call_arg_element_116, tmp_call_arg_element_117 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1355;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_40 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_40 == NULL ))
    {
        tmp_called_40 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_40 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1357;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_118 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_119 = const_str_plain__reconstruct;
    tmp_call_arg_element_120 = const_str_digest_7752b2c6f769d0d08dd92b517169931f;
    frame_module->f_lineno = 1362;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_40, tmp_call_arg_element_118, tmp_call_arg_element_119, tmp_call_arg_element_120 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1362;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_41 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_41 == NULL ))
    {
        tmp_called_41 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_41 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1365;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_121 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_122 = const_str_plain_set_string_function;
    tmp_call_arg_element_123 = const_str_digest_bcce9f54f26811fcc34996d01797beaf;
    frame_module->f_lineno = 1371;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_41, tmp_call_arg_element_121, tmp_call_arg_element_122, tmp_call_arg_element_123 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1371;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_42 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_42 == NULL ))
    {
        tmp_called_42 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_42 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1373;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_124 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_125 = const_str_plain_set_numeric_ops;
    tmp_call_arg_element_126 = const_str_digest_7587e2e4b031d5ccae4fd3191aeac1e4;
    frame_module->f_lineno = 1415;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_42, tmp_call_arg_element_124, tmp_call_arg_element_125, tmp_call_arg_element_126 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1415;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_43 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_43 == NULL ))
    {
        tmp_called_43 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_43 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1417;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_127 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_128 = const_str_plain_where;
    tmp_call_arg_element_129 = const_str_digest_cde4ff7b1186a8c89a6a393afe18522e;
    frame_module->f_lineno = 1486;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_43, tmp_call_arg_element_127, tmp_call_arg_element_128, tmp_call_arg_element_129 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1486;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_44 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_44 == NULL ))
    {
        tmp_called_44 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_44 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1489;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_130 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_131 = const_str_plain_lexsort;
    tmp_call_arg_element_132 = const_str_digest_81b5327da5fa6df51e8e4972fb6b4f58;
    frame_module->f_lineno = 1563;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_44, tmp_call_arg_element_130, tmp_call_arg_element_131, tmp_call_arg_element_132 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1563;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_45 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_45 == NULL ))
    {
        tmp_called_45 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_45 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1565;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_133 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_134 = const_str_plain_can_cast;
    tmp_call_arg_element_135 = const_str_digest_3f324069b9d79f118f44e8e0fdf2dace;
    frame_module->f_lineno = 1663;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_45, tmp_call_arg_element_133, tmp_call_arg_element_134, tmp_call_arg_element_135 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1663;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_46 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_46 == NULL ))
    {
        tmp_called_46 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_46 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1665;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_136 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_137 = const_str_plain_promote_types;
    tmp_call_arg_element_138 = const_str_digest_db689bbd8da062e86bfefce405ee4ce7;
    frame_module->f_lineno = 1711;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_46, tmp_call_arg_element_136, tmp_call_arg_element_137, tmp_call_arg_element_138 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1711;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_47 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_47 == NULL ))
    {
        tmp_called_47 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_47 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1713;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_139 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_140 = const_str_plain_min_scalar_type;
    tmp_call_arg_element_141 = const_str_digest_8371f64b8e8709a121fbab20a13e32e9;
    frame_module->f_lineno = 1759;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_47, tmp_call_arg_element_139, tmp_call_arg_element_140, tmp_call_arg_element_141 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1759;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_48 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_48 == NULL ))
    {
        tmp_called_48 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_48 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1761;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_142 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_143 = const_str_plain_result_type;
    tmp_call_arg_element_144 = const_str_digest_2e49599853dc5491e12d185acfaaf459;
    frame_module->f_lineno = 1828;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_48, tmp_call_arg_element_142, tmp_call_arg_element_143, tmp_call_arg_element_144 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1828;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_49 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_49 == NULL ))
    {
        tmp_called_49 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_49 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1830;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_145 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_146 = const_str_plain_newbuffer;
    tmp_call_arg_element_147 = const_str_digest_148404d51380574a1b630ac8d7cbe301;
    frame_module->f_lineno = 1846;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_49, tmp_call_arg_element_145, tmp_call_arg_element_146, tmp_call_arg_element_147 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1846;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_50 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_50 == NULL ))
    {
        tmp_called_50 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_50 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1848;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_148 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_149 = const_str_plain_getbuffer;
    tmp_call_arg_element_150 = const_str_digest_9d59a226b699b53e9e97d1b771b48317;
    frame_module->f_lineno = 1880;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_50, tmp_call_arg_element_148, tmp_call_arg_element_149, tmp_call_arg_element_150 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1880;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_51 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_51 == NULL ))
    {
        tmp_called_51 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_51 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1882;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_151 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_152 = const_str_plain_dot;
    tmp_call_arg_element_153 = const_str_digest_ab970cf78418b9567ba385cb0836592a;
    frame_module->f_lineno = 1954;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_51, tmp_call_arg_element_151, tmp_call_arg_element_152, tmp_call_arg_element_153 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 1954;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_52 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_52 == NULL ))
    {
        tmp_called_52 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_52 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 1956;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_154 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_155 = const_str_plain_einsum;
    tmp_call_arg_element_156 = const_str_digest_41b8fefbbcf4577213453a4554ffddd6;
    frame_module->f_lineno = 2144;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_52, tmp_call_arg_element_154, tmp_call_arg_element_155, tmp_call_arg_element_156 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2144;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_53 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_53 == NULL ))
    {
        tmp_called_53 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_53 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2146;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_157 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_158 = const_str_plain_alterdot;
    tmp_call_arg_element_159 = const_str_digest_2a41709f9c5c965c12ea74ceef1985a1;
    frame_module->f_lineno = 2165;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_53, tmp_call_arg_element_157, tmp_call_arg_element_158, tmp_call_arg_element_159 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2165;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_54 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_54 == NULL ))
    {
        tmp_called_54 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_54 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2167;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_160 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_161 = const_str_plain_restoredot;
    tmp_call_arg_element_162 = const_str_digest_efad016bbabf57c22e6dc25901e74a3d;
    frame_module->f_lineno = 2181;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_54, tmp_call_arg_element_160, tmp_call_arg_element_161, tmp_call_arg_element_162 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2181;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_55 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_55 == NULL ))
    {
        tmp_called_55 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_55 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2183;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_163 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_164 = const_str_plain_vdot;
    tmp_call_arg_element_165 = const_str_digest_7ffefb54b7a4e71f7cacec4f618fa6fc;
    frame_module->f_lineno = 2236;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_55, tmp_call_arg_element_163, tmp_call_arg_element_164, tmp_call_arg_element_165 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2236;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_56 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_56 == NULL ))
    {
        tmp_called_56 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_56 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2253;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_166 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_167 = const_str_plain_ndarray;
    tmp_call_arg_element_168 = const_str_digest_3e63f79ab164ad9907e128864d285dda;
    frame_module->f_lineno = 2372;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_56, tmp_call_arg_element_166, tmp_call_arg_element_167, tmp_call_arg_element_168 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2372;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_57 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_57 == NULL ))
    {
        tmp_called_57 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_57 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2382;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_169 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_170 = const_str_plain_ndarray;
    tmp_call_arg_element_171 = const_tuple_db138a78b469a6b7f450d8af75416b4f_tuple;
    frame_module->f_lineno = 2383;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_57, tmp_call_arg_element_169, tmp_call_arg_element_170, tmp_call_arg_element_171 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2383;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_58 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_58 == NULL ))
    {
        tmp_called_58 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_58 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2386;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_172 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_173 = const_str_plain_ndarray;
    tmp_call_arg_element_174 = const_tuple_b2558c6fef98023770cfb98e68694b1e_tuple;
    frame_module->f_lineno = 2387;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_58, tmp_call_arg_element_172, tmp_call_arg_element_173, tmp_call_arg_element_174 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2387;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_59 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_59 == NULL ))
    {
        tmp_called_59 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_59 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2390;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_175 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_176 = const_str_plain_ndarray;
    tmp_call_arg_element_177 = const_tuple_168cccda5300501c32420c09725198af_tuple;
    frame_module->f_lineno = 2391;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_59, tmp_call_arg_element_175, tmp_call_arg_element_176, tmp_call_arg_element_177 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2391;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_60 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_60 == NULL ))
    {
        tmp_called_60 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_60 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2394;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_178 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_179 = const_str_plain_ndarray;
    tmp_call_arg_element_180 = const_tuple_5c0d913bc3c493855b54029141f469cd_tuple;
    frame_module->f_lineno = 2395;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_60, tmp_call_arg_element_178, tmp_call_arg_element_179, tmp_call_arg_element_180 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2395;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_61 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_61 == NULL ))
    {
        tmp_called_61 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_61 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2398;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_181 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_182 = const_str_plain_ndarray;
    tmp_call_arg_element_183 = const_tuple_cb38d29900c6e22e84c1fc0f348afa41_tuple;
    frame_module->f_lineno = 2402;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_61, tmp_call_arg_element_181, tmp_call_arg_element_182, tmp_call_arg_element_183 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2402;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_62 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_62 == NULL ))
    {
        tmp_called_62 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_62 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2405;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_184 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_185 = const_str_plain_ndarray;
    tmp_call_arg_element_186 = const_tuple_str_plain_base_str_digest_072e5aadce0bf02ee2cb35cd0fc670c4_tuple;
    frame_module->f_lineno = 2423;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_62, tmp_call_arg_element_184, tmp_call_arg_element_185, tmp_call_arg_element_186 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2423;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_63 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_63 == NULL ))
    {
        tmp_called_63 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_63 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2426;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_187 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_188 = const_str_plain_ndarray;
    tmp_call_arg_element_189 = const_tuple_str_plain_ctypes_str_digest_13ca39598ca9f1ae4b2e857009e8282b_tuple;
    frame_module->f_lineno = 2526;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_63, tmp_call_arg_element_187, tmp_call_arg_element_188, tmp_call_arg_element_189 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2526;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_64 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_64 == NULL ))
    {
        tmp_called_64 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_64 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2529;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_190 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_191 = const_str_plain_ndarray;
    tmp_call_arg_element_192 = const_tuple_str_plain_data_str_digest_8e9a116570a45560ebdeab72e35471a0_tuple;
    frame_module->f_lineno = 2530;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_64, tmp_call_arg_element_190, tmp_call_arg_element_191, tmp_call_arg_element_192 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2530;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_65 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_65 == NULL ))
    {
        tmp_called_65 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_65 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2533;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_193 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_194 = const_str_plain_ndarray;
    tmp_call_arg_element_195 = const_tuple_str_plain_dtype_str_digest_04a1dda0c164f139c95c15dfc22a4e4d_tuple;
    frame_module->f_lineno = 2559;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_65, tmp_call_arg_element_193, tmp_call_arg_element_194, tmp_call_arg_element_195 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2559;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_66 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_66 == NULL ))
    {
        tmp_called_66 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_66 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2562;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_196 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_197 = const_str_plain_ndarray;
    tmp_call_arg_element_198 = const_tuple_str_plain_imag_str_digest_3f5ab0a42237088eddcbcf53bb8f3883_tuple;
    frame_module->f_lineno = 2574;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_66, tmp_call_arg_element_196, tmp_call_arg_element_197, tmp_call_arg_element_198 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2574;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_67 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_67 == NULL ))
    {
        tmp_called_67 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_67 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2577;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_199 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_200 = const_str_plain_ndarray;
    tmp_call_arg_element_201 = const_tuple_3cb725c54d87981cd864954898a761e9_tuple;
    frame_module->f_lineno = 2590;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_67, tmp_call_arg_element_199, tmp_call_arg_element_200, tmp_call_arg_element_201 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2590;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_68 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_68 == NULL ))
    {
        tmp_called_68 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_68 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2593;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_202 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_203 = const_str_plain_ndarray;
    tmp_call_arg_element_204 = const_tuple_str_plain_flags_str_digest_22c0f69ba1a343a957c94ecc234fdd0a_tuple;
    frame_module->f_lineno = 2661;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_68, tmp_call_arg_element_202, tmp_call_arg_element_203, tmp_call_arg_element_204 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2661;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_69 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_69 == NULL ))
    {
        tmp_called_69 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_69 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2664;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_205 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_206 = const_str_plain_ndarray;
    tmp_call_arg_element_207 = const_tuple_str_plain_flat_str_digest_16acfe703ccd15bf469ec7595d4c5739_tuple;
    frame_module->f_lineno = 2703;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_69, tmp_call_arg_element_205, tmp_call_arg_element_206, tmp_call_arg_element_207 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2703;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_70 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_70 == NULL ))
    {
        tmp_called_70 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_70 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2706;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_208 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_209 = const_str_plain_ndarray;
    tmp_call_arg_element_210 = const_tuple_str_plain_nbytes_str_digest_bb8f8720d97c46c75a107dbb00861dab_tuple;
    frame_module->f_lineno = 2723;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_70, tmp_call_arg_element_208, tmp_call_arg_element_209, tmp_call_arg_element_210 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2723;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_71 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_71 == NULL ))
    {
        tmp_called_71 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_71 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2726;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_211 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_212 = const_str_plain_ndarray;
    tmp_call_arg_element_213 = const_tuple_str_plain_ndim_str_digest_c85815685c6ffaed1f1d641f434eaf42_tuple;
    frame_module->f_lineno = 2739;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_71, tmp_call_arg_element_211, tmp_call_arg_element_212, tmp_call_arg_element_213 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2739;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_72 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_72 == NULL ))
    {
        tmp_called_72 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_72 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2742;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_214 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_215 = const_str_plain_ndarray;
    tmp_call_arg_element_216 = const_tuple_str_plain_real_str_digest_27ac952713c2394bf6b17bc992308adf_tuple;
    frame_module->f_lineno = 2758;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_72, tmp_call_arg_element_214, tmp_call_arg_element_215, tmp_call_arg_element_216 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2758;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_73 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_73 == NULL ))
    {
        tmp_called_73 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_73 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2761;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_217 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_218 = const_str_plain_ndarray;
    tmp_call_arg_element_219 = const_tuple_str_plain_shape_str_digest_e5449d57b253f51a97d23086515996bd_tuple;
    frame_module->f_lineno = 2788;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_73, tmp_call_arg_element_217, tmp_call_arg_element_218, tmp_call_arg_element_219 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2788;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_74 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_74 == NULL ))
    {
        tmp_called_74 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_74 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2791;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_220 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_221 = const_str_plain_ndarray;
    tmp_call_arg_element_222 = const_tuple_str_plain_size_str_digest_c40ced7cb49d5f69e8525b1f776d8097_tuple;
    frame_module->f_lineno = 2806;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_74, tmp_call_arg_element_220, tmp_call_arg_element_221, tmp_call_arg_element_222 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2806;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_75 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_75 == NULL ))
    {
        tmp_called_75 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_75 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2809;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_223 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_224 = const_str_plain_ndarray;
    tmp_call_arg_element_225 = const_tuple_a99f64eb8e4a62ccea3fdbb5664ef79a_tuple;
    frame_module->f_lineno = 2868;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_75, tmp_call_arg_element_223, tmp_call_arg_element_224, tmp_call_arg_element_225 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2868;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_76 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_76 == NULL ))
    {
        tmp_called_76 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_76 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2871;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_226 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_227 = const_str_plain_ndarray;
    tmp_call_arg_element_228 = const_tuple_str_plain_T_str_digest_489ee9da5d529ca5e5b750f73ad8bda9_tuple;
    frame_module->f_lineno = 2891;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_76, tmp_call_arg_element_226, tmp_call_arg_element_227, tmp_call_arg_element_228 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2891;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_77 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_77 == NULL ))
    {
        tmp_called_77 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_77 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2901;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_229 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_230 = const_str_plain_ndarray;
    tmp_call_arg_element_231 = const_tuple_1e533109502c60c8c44af3d0247baf08_tuple;
    frame_module->f_lineno = 2908;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_77, tmp_call_arg_element_229, tmp_call_arg_element_230, tmp_call_arg_element_231 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2908;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_78 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_78 == NULL ))
    {
        tmp_called_78 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_78 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2911;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_232 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_233 = const_str_plain_ndarray;
    tmp_call_arg_element_234 = const_tuple_496a28f2c89423aa766ed3cf97306f74_tuple;
    frame_module->f_lineno = 2914;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_78, tmp_call_arg_element_232, tmp_call_arg_element_233, tmp_call_arg_element_234 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2914;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_79 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_79 == NULL ))
    {
        tmp_called_79 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_79 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2917;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_235 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_236 = const_str_plain_ndarray;
    tmp_call_arg_element_237 = const_tuple_567b06640fd1510b8820671304af3401_tuple;
    frame_module->f_lineno = 2920;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_79, tmp_call_arg_element_235, tmp_call_arg_element_236, tmp_call_arg_element_237 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2920;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_80 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_80 == NULL ))
    {
        tmp_called_80 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_80 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2923;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_238 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_239 = const_str_plain_ndarray;
    tmp_call_arg_element_240 = const_tuple_5978e1eecfe46aeb2e3eb25a509b00fa_tuple;
    frame_module->f_lineno = 2936;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_80, tmp_call_arg_element_238, tmp_call_arg_element_239, tmp_call_arg_element_240 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2936;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_81 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_81 == NULL ))
    {
        tmp_called_81 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_81 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2939;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_241 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_242 = const_str_plain_ndarray;
    tmp_call_arg_element_243 = const_tuple_7846297b9dde029e6d264d197e7dcd0b_tuple;
    frame_module->f_lineno = 2944;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_81, tmp_call_arg_element_241, tmp_call_arg_element_242, tmp_call_arg_element_243 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2944;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_82 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_82 == NULL ))
    {
        tmp_called_82 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_82 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2947;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_244 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_245 = const_str_plain_ndarray;
    tmp_call_arg_element_246 = const_tuple_cf813f423ced7b80485cb65ecbae367e_tuple;
    frame_module->f_lineno = 2952;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_82, tmp_call_arg_element_244, tmp_call_arg_element_245, tmp_call_arg_element_246 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2952;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_83 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_83 == NULL ))
    {
        tmp_called_83 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_83 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2955;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_247 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_248 = const_str_plain_ndarray;
    tmp_call_arg_element_249 = const_tuple_bff2b61c4aeb46d9085347f6b8423257_tuple;
    frame_module->f_lineno = 2970;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_83, tmp_call_arg_element_247, tmp_call_arg_element_248, tmp_call_arg_element_249 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2970;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_84 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_84 == NULL ))
    {
        tmp_called_84 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_84 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2973;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_250 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_251 = const_str_plain_ndarray;
    tmp_call_arg_element_252 = const_tuple_str_plain_all_str_digest_c5115b33dc9079608a103d245b7d9839_tuple;
    frame_module->f_lineno = 2985;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_84, tmp_call_arg_element_250, tmp_call_arg_element_251, tmp_call_arg_element_252 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 2985;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_85 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_85 == NULL ))
    {
        tmp_called_85 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_85 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 2988;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_253 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_254 = const_str_plain_ndarray;
    tmp_call_arg_element_255 = const_tuple_str_plain_any_str_digest_b2e66add4d69332160dd1390dc13e41e_tuple;
    frame_module->f_lineno = 3000;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_85, tmp_call_arg_element_253, tmp_call_arg_element_254, tmp_call_arg_element_255 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3000;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_86 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_86 == NULL ))
    {
        tmp_called_86 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_86 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3003;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_256 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_257 = const_str_plain_ndarray;
    tmp_call_arg_element_258 = const_tuple_str_plain_argmax_str_digest_26ac2e319d74e74a4ce6cef5c1cae7b2_tuple;
    frame_module->f_lineno = 3015;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_86, tmp_call_arg_element_256, tmp_call_arg_element_257, tmp_call_arg_element_258 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3015;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_87 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_87 == NULL ))
    {
        tmp_called_87 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_87 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3018;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_259 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_260 = const_str_plain_ndarray;
    tmp_call_arg_element_261 = const_tuple_str_plain_argmin_str_digest_e6c8dc141d94a856c7d1083ae1974233_tuple;
    frame_module->f_lineno = 3030;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_87, tmp_call_arg_element_259, tmp_call_arg_element_260, tmp_call_arg_element_261 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3030;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_88 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_88 == NULL ))
    {
        tmp_called_88 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_88 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3033;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_262 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_263 = const_str_plain_ndarray;
    tmp_call_arg_element_264 = const_tuple_fe7b8bb69364d874fba1994f9283d25e_tuple;
    frame_module->f_lineno = 3045;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_88, tmp_call_arg_element_262, tmp_call_arg_element_263, tmp_call_arg_element_264 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3045;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_89 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_89 == NULL ))
    {
        tmp_called_89 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_89 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3048;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_265 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_266 = const_str_plain_ndarray;
    tmp_call_arg_element_267 = const_tuple_a0afff5ea6feedfea62d850efb5c4a60_tuple;
    frame_module->f_lineno = 3062;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_89, tmp_call_arg_element_265, tmp_call_arg_element_266, tmp_call_arg_element_267 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3062;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_90 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_90 == NULL ))
    {
        tmp_called_90 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_90 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3065;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_268 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_269 = const_str_plain_ndarray;
    tmp_call_arg_element_270 = const_tuple_str_plain_astype_str_digest_66c47a41c00c8676f72281e05cf3152b_tuple;
    frame_module->f_lineno = 3124;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_90, tmp_call_arg_element_268, tmp_call_arg_element_269, tmp_call_arg_element_270 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3124;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_91 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_91 == NULL ))
    {
        tmp_called_91 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_91 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3127;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_271 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_272 = const_str_plain_ndarray;
    tmp_call_arg_element_273 = const_tuple_de42d875e42b3789f50701c079e8c1e2_tuple;
    frame_module->f_lineno = 3164;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_91, tmp_call_arg_element_271, tmp_call_arg_element_272, tmp_call_arg_element_273 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3164;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_92 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_92 == NULL ))
    {
        tmp_called_92 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_92 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3167;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_274 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_275 = const_str_plain_ndarray;
    tmp_call_arg_element_276 = const_tuple_str_plain_choose_str_digest_f0d9e2e66c0583f9830ecd65f7995493_tuple;
    frame_module->f_lineno = 3179;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_92, tmp_call_arg_element_274, tmp_call_arg_element_275, tmp_call_arg_element_276 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3179;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_93 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_93 == NULL ))
    {
        tmp_called_93 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_93 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3182;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_277 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_278 = const_str_plain_ndarray;
    tmp_call_arg_element_279 = const_tuple_str_plain_clip_str_digest_21cd5fd8304d3efe703434847bbfa964_tuple;
    frame_module->f_lineno = 3194;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_93, tmp_call_arg_element_277, tmp_call_arg_element_278, tmp_call_arg_element_279 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3194;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_94 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_94 == NULL ))
    {
        tmp_called_94 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_94 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3197;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_280 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_281 = const_str_plain_ndarray;
    tmp_call_arg_element_282 = const_tuple_944d87451e49494d7e19c2d2ac071e0c_tuple;
    frame_module->f_lineno = 3209;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_94, tmp_call_arg_element_280, tmp_call_arg_element_281, tmp_call_arg_element_282 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3209;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_95 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_95 == NULL ))
    {
        tmp_called_95 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_95 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3212;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_283 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_284 = const_str_plain_ndarray;
    tmp_call_arg_element_285 = const_tuple_str_plain_conj_str_digest_0cc324197c555695bfccccd4585dfe52_tuple;
    frame_module->f_lineno = 3224;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_95, tmp_call_arg_element_283, tmp_call_arg_element_284, tmp_call_arg_element_285 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3224;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_96 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_96 == NULL ))
    {
        tmp_called_96 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_96 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3227;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_286 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_287 = const_str_plain_ndarray;
    tmp_call_arg_element_288 = const_tuple_db387da14d2819ec0b64ddfe31cedfaf_tuple;
    frame_module->f_lineno = 3239;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_96, tmp_call_arg_element_286, tmp_call_arg_element_287, tmp_call_arg_element_288 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3239;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_97 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_97 == NULL ))
    {
        tmp_called_97 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_97 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3242;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_289 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_290 = const_str_plain_ndarray;
    tmp_call_arg_element_291 = const_tuple_str_plain_copy_str_digest_c31abcb0819c2698fafa97c9213085fc_tuple;
    frame_module->f_lineno = 3282;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_97, tmp_call_arg_element_289, tmp_call_arg_element_290, tmp_call_arg_element_291 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3282;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_98 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_98 == NULL ))
    {
        tmp_called_98 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_98 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3285;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_292 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_293 = const_str_plain_ndarray;
    tmp_call_arg_element_294 = const_tuple_9a74aff70f13f68d5e78dbbf1ba0d2ea_tuple;
    frame_module->f_lineno = 3297;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_98, tmp_call_arg_element_292, tmp_call_arg_element_293, tmp_call_arg_element_294 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3297;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_99 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_99 == NULL ))
    {
        tmp_called_99 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_99 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3300;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_295 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_296 = const_str_plain_ndarray;
    tmp_call_arg_element_297 = const_tuple_str_plain_cumsum_str_digest_daf43572e3bea65b049fa73909930d07_tuple;
    frame_module->f_lineno = 3312;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_99, tmp_call_arg_element_295, tmp_call_arg_element_296, tmp_call_arg_element_297 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3312;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_100 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_100 == NULL ))
    {
        tmp_called_100 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_100 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3315;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_298 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_299 = const_str_plain_ndarray;
    tmp_call_arg_element_300 = const_tuple_3d4ee0659d84e79bdc9172bb2f91a450_tuple;
    frame_module->f_lineno = 3327;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_100, tmp_call_arg_element_298, tmp_call_arg_element_299, tmp_call_arg_element_300 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3327;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_101 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_101 == NULL ))
    {
        tmp_called_101 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_101 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3330;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_301 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_302 = const_str_plain_ndarray;
    tmp_call_arg_element_303 = const_tuple_str_plain_dot_str_digest_7d2935431c7c8acad4b68ee54b36a61d_tuple;
    frame_module->f_lineno = 3356;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_101, tmp_call_arg_element_301, tmp_call_arg_element_302, tmp_call_arg_element_303 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3356;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_102 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_102 == NULL ))
    {
        tmp_called_102 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_102 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3359;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_304 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_305 = const_str_plain_ndarray;
    tmp_call_arg_element_306 = const_tuple_str_plain_dump_str_digest_561da89354d5361aa3cc17a386772234_tuple;
    frame_module->f_lineno = 3370;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_102, tmp_call_arg_element_304, tmp_call_arg_element_305, tmp_call_arg_element_306 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3370;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_103 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_103 == NULL ))
    {
        tmp_called_103 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_103 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3373;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_307 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_308 = const_str_plain_ndarray;
    tmp_call_arg_element_309 = const_tuple_str_plain_dumps_str_digest_0d50f7494894aed495bbc9bdc1b4ccf2_tuple;
    frame_module->f_lineno = 3384;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_103, tmp_call_arg_element_307, tmp_call_arg_element_308, tmp_call_arg_element_309 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3384;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_104 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_104 == NULL ))
    {
        tmp_called_104 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_104 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3387;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_310 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_311 = const_str_plain_ndarray;
    tmp_call_arg_element_312 = const_tuple_str_plain_fill_str_digest_832db00f21f665213aa7e8299041c62a_tuple;
    frame_module->f_lineno = 3409;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_104, tmp_call_arg_element_310, tmp_call_arg_element_311, tmp_call_arg_element_312 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3409;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_105 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_105 == NULL ))
    {
        tmp_called_105 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_105 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3412;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_313 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_314 = const_str_plain_ndarray;
    tmp_call_arg_element_315 = const_tuple_719203561976685e07141a070d4f40f5_tuple;
    frame_module->f_lineno = 3443;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_105, tmp_call_arg_element_313, tmp_call_arg_element_314, tmp_call_arg_element_315 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3443;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_106 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_106 == NULL ))
    {
        tmp_called_106 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_106 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3446;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_316 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_317 = const_str_plain_ndarray;
    tmp_call_arg_element_318 = const_tuple_51b4aa93213c9b07ffd7c474881446dc_tuple;
    frame_module->f_lineno = 3485;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_106, tmp_call_arg_element_316, tmp_call_arg_element_317, tmp_call_arg_element_318 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3485;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_107 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_107 == NULL ))
    {
        tmp_called_107 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_107 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3488;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_319 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_320 = const_str_plain_ndarray;
    tmp_call_arg_element_321 = const_tuple_str_plain_item_str_digest_52bdd9679eca9bc963d17c7787b089be_tuple;
    frame_module->f_lineno = 3543;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_107, tmp_call_arg_element_319, tmp_call_arg_element_320, tmp_call_arg_element_321 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3543;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_108 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_108 == NULL ))
    {
        tmp_called_108 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_108 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3546;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_322 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_323 = const_str_plain_ndarray;
    tmp_call_arg_element_324 = const_tuple_c4cab0ead787cb1aa2ee7d4898b1f6c0_tuple;
    frame_module->f_lineno = 3589;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_108, tmp_call_arg_element_322, tmp_call_arg_element_323, tmp_call_arg_element_324 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3589;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_109 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_109 == NULL ))
    {
        tmp_called_109 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_109 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3592;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_325 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_326 = const_str_plain_ndarray;
    tmp_call_arg_element_327 = const_tuple_154901ead6ea245e00b989a7dbd03337_tuple;
    frame_module->f_lineno = 3620;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_109, tmp_call_arg_element_325, tmp_call_arg_element_326, tmp_call_arg_element_327 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3620;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_110 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_110 == NULL ))
    {
        tmp_called_110 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_110 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3623;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_328 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_329 = const_str_plain_ndarray;
    tmp_call_arg_element_330 = const_tuple_str_plain_max_str_digest_1ae4e5b882c811d3784bf075000d7550_tuple;
    frame_module->f_lineno = 3635;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_110, tmp_call_arg_element_328, tmp_call_arg_element_329, tmp_call_arg_element_330 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3635;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_111 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_111 == NULL ))
    {
        tmp_called_111 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_111 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3638;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_331 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_332 = const_str_plain_ndarray;
    tmp_call_arg_element_333 = const_tuple_str_plain_mean_str_digest_79677de40ae1974e6aa497ad9e2a299e_tuple;
    frame_module->f_lineno = 3650;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_111, tmp_call_arg_element_331, tmp_call_arg_element_332, tmp_call_arg_element_333 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3650;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_112 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_112 == NULL ))
    {
        tmp_called_112 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_112 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3653;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_334 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_335 = const_str_plain_ndarray;
    tmp_call_arg_element_336 = const_tuple_str_plain_min_str_digest_cdeb189b082c634c4784e5063911dba4_tuple;
    frame_module->f_lineno = 3665;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_112, tmp_call_arg_element_334, tmp_call_arg_element_335, tmp_call_arg_element_336 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3665;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_113 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_113 == NULL ))
    {
        tmp_called_113 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_113 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3668;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_337 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_338 = const_str_plain_may_share_memory;
    tmp_call_arg_element_339 = const_str_digest_5349908683210b8909491b9cb0279275;
    frame_module->f_lineno = 3691;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_113, tmp_call_arg_element_337, tmp_call_arg_element_338, tmp_call_arg_element_339 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3691;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_114 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_114 == NULL ))
    {
        tmp_called_114 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_114 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3694;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_340 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_341 = const_str_plain_ndarray;
    tmp_call_arg_element_342 = const_tuple_4d9c0911803c954682040c46cf902039_tuple;
    frame_module->f_lineno = 3733;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_114, tmp_call_arg_element_340, tmp_call_arg_element_341, tmp_call_arg_element_342 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3733;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_115 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_115 == NULL ))
    {
        tmp_called_115 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_115 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3736;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_343 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_344 = const_str_plain_ndarray;
    tmp_call_arg_element_345 = const_tuple_9a4874ee1b7692822a4f8212bb1c557a_tuple;
    frame_module->f_lineno = 3748;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_115, tmp_call_arg_element_343, tmp_call_arg_element_344, tmp_call_arg_element_345 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3748;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_116 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_116 == NULL ))
    {
        tmp_called_116 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_116 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3751;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_346 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_347 = const_str_plain_ndarray;
    tmp_call_arg_element_348 = const_tuple_str_plain_prod_str_digest_2a28d76389ab1431ee23e067f8b4aac7_tuple;
    frame_module->f_lineno = 3763;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_116, tmp_call_arg_element_346, tmp_call_arg_element_347, tmp_call_arg_element_348 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3763;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_117 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_117 == NULL ))
    {
        tmp_called_117 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_117 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3766;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_349 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_350 = const_str_plain_ndarray;
    tmp_call_arg_element_351 = const_tuple_str_plain_ptp_str_digest_5be529d26b6b4237e233e6ea62f494b3_tuple;
    frame_module->f_lineno = 3778;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_117, tmp_call_arg_element_349, tmp_call_arg_element_350, tmp_call_arg_element_351 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3778;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_118 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_118 == NULL ))
    {
        tmp_called_118 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_118 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3781;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_352 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_353 = const_str_plain_ndarray;
    tmp_call_arg_element_354 = const_tuple_str_plain_put_str_digest_222ab61b6e6a2f3e5ff34d320ddd0a6e_tuple;
    frame_module->f_lineno = 3793;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_118, tmp_call_arg_element_352, tmp_call_arg_element_353, tmp_call_arg_element_354 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3793;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_119 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_119 == NULL ))
    {
        tmp_called_119 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_119 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3795;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_355 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_356 = const_str_plain_copyto;
    tmp_call_arg_element_357 = const_str_digest_54d77fb640b0406b8d76b2d411690e13;
    frame_module->f_lineno = 3829;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_119, tmp_call_arg_element_355, tmp_call_arg_element_356, tmp_call_arg_element_357 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3829;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_120 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_120 == NULL ))
    {
        tmp_called_120 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_120 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3831;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_358 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_359 = const_str_plain_putmask;
    tmp_call_arg_element_360 = const_str_digest_d85a5b7627afd13926ad874b3827fbc2;
    frame_module->f_lineno = 3876;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_120, tmp_call_arg_element_358, tmp_call_arg_element_359, tmp_call_arg_element_360 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3876;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_121 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_121 == NULL ))
    {
        tmp_called_121 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_121 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3879;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_361 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_362 = const_str_plain_ndarray;
    tmp_call_arg_element_363 = const_tuple_str_plain_ravel_str_digest_da973fd4b9c056ed9402635b817c6064_tuple;
    frame_module->f_lineno = 3893;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_121, tmp_call_arg_element_361, tmp_call_arg_element_362, tmp_call_arg_element_363 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3893;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_122 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_122 == NULL ))
    {
        tmp_called_122 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_122 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3896;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_364 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_365 = const_str_plain_ndarray;
    tmp_call_arg_element_366 = const_tuple_str_plain_repeat_str_digest_d895d3418e116cc8c8c56729f54543f3_tuple;
    frame_module->f_lineno = 3908;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_122, tmp_call_arg_element_364, tmp_call_arg_element_365, tmp_call_arg_element_366 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3908;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_123 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_123 == NULL ))
    {
        tmp_called_123 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_123 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3911;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_367 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_368 = const_str_plain_ndarray;
    tmp_call_arg_element_369 = const_tuple_642899665856b8540df0ca61f1b8b8fb_tuple;
    frame_module->f_lineno = 3923;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_123, tmp_call_arg_element_367, tmp_call_arg_element_368, tmp_call_arg_element_369 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 3923;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_124 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_124 == NULL ))
    {
        tmp_called_124 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_124 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 3926;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_370 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_371 = const_str_plain_ndarray;
    tmp_call_arg_element_372 = const_tuple_str_plain_resize_str_digest_7a53c412a4f5bc6111891afa807de573_tuple;
    frame_module->f_lineno = 4012;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_124, tmp_call_arg_element_370, tmp_call_arg_element_371, tmp_call_arg_element_372 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4012;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_125 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_125 == NULL ))
    {
        tmp_called_125 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_125 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4015;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_373 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_374 = const_str_plain_ndarray;
    tmp_call_arg_element_375 = const_tuple_str_plain_round_str_digest_00eba1502b949d5653483564f27f3f96_tuple;
    frame_module->f_lineno = 4027;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_125, tmp_call_arg_element_373, tmp_call_arg_element_374, tmp_call_arg_element_375 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4027;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_126 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_126 == NULL ))
    {
        tmp_called_126 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_126 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4030;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_376 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_377 = const_str_plain_ndarray;
    tmp_call_arg_element_378 = const_tuple_d8af2a6436025a999c5cf49a50118acd_tuple;
    frame_module->f_lineno = 4042;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_126, tmp_call_arg_element_376, tmp_call_arg_element_377, tmp_call_arg_element_378 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4042;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_127 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_127 == NULL ))
    {
        tmp_called_127 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_127 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4045;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_379 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_380 = const_str_plain_ndarray;
    tmp_call_arg_element_381 = const_tuple_e204e99bedd1b028c934fa07927ff822_tuple;
    frame_module->f_lineno = 4093;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_127, tmp_call_arg_element_379, tmp_call_arg_element_380, tmp_call_arg_element_381 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4093;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_128 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_128 == NULL ))
    {
        tmp_called_128 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_128 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4096;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_382 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_383 = const_str_plain_ndarray;
    tmp_call_arg_element_384 = const_tuple_ebd5b599bd667fd54e428ffb0551ffca_tuple;
    frame_module->f_lineno = 4165;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_128, tmp_call_arg_element_382, tmp_call_arg_element_383, tmp_call_arg_element_384 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4165;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_129 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_129 == NULL ))
    {
        tmp_called_129 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_129 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4168;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_385 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_386 = const_str_plain_ndarray;
    tmp_call_arg_element_387 = const_tuple_str_plain_sort_str_digest_09deaec6284ace81e18f5b81c1d04757_tuple;
    frame_module->f_lineno = 4219;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_129, tmp_call_arg_element_385, tmp_call_arg_element_386, tmp_call_arg_element_387 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4219;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_130 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_130 == NULL ))
    {
        tmp_called_130 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_130 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4222;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_388 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_389 = const_str_plain_ndarray;
    tmp_call_arg_element_390 = const_tuple_b7bc703b86a64c90150f02816f520d68_tuple;
    frame_module->f_lineno = 4272;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_130, tmp_call_arg_element_388, tmp_call_arg_element_389, tmp_call_arg_element_390 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4272;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_131 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_131 == NULL ))
    {
        tmp_called_131 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_131 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4275;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_391 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_392 = const_str_plain_ndarray;
    tmp_call_arg_element_393 = const_tuple_7fa5a5b8b4c6a28db5c548becff7a7ba_tuple;
    frame_module->f_lineno = 4287;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_131, tmp_call_arg_element_391, tmp_call_arg_element_392, tmp_call_arg_element_393 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4287;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_132 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_132 == NULL ))
    {
        tmp_called_132 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_132 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4290;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_394 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_395 = const_str_plain_ndarray;
    tmp_call_arg_element_396 = const_tuple_str_plain_std_str_digest_93c72dcebe6d41657beac2e44fdb0414_tuple;
    frame_module->f_lineno = 4302;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_132, tmp_call_arg_element_394, tmp_call_arg_element_395, tmp_call_arg_element_396 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4302;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_133 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_133 == NULL ))
    {
        tmp_called_133 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_133 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4305;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_397 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_398 = const_str_plain_ndarray;
    tmp_call_arg_element_399 = const_tuple_str_plain_sum_str_digest_f1a4e000bc858aced6149e7d4d501079_tuple;
    frame_module->f_lineno = 4317;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_133, tmp_call_arg_element_397, tmp_call_arg_element_398, tmp_call_arg_element_399 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4317;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_134 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_134 == NULL ))
    {
        tmp_called_134 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_134 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4320;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_400 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_401 = const_str_plain_ndarray;
    tmp_call_arg_element_402 = const_tuple_51a4913ad23b1d952ea8ae8814a303e8_tuple;
    frame_module->f_lineno = 4332;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_134, tmp_call_arg_element_400, tmp_call_arg_element_401, tmp_call_arg_element_402 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4332;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_135 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_135 == NULL ))
    {
        tmp_called_135 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_135 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4335;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_403 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_404 = const_str_plain_ndarray;
    tmp_call_arg_element_405 = const_tuple_str_plain_take_str_digest_d30d9bb1c871fd4379e61476841f2041_tuple;
    frame_module->f_lineno = 4347;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_135, tmp_call_arg_element_403, tmp_call_arg_element_404, tmp_call_arg_element_405 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4347;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_136 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_136 == NULL ))
    {
        tmp_called_136 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_136 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4350;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_406 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_407 = const_str_plain_ndarray;
    tmp_call_arg_element_408 = const_tuple_str_plain_tofile_str_digest_038b9038684c5d9736626ade6e2d1f31_tuple;
    frame_module->f_lineno = 4382;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_136, tmp_call_arg_element_406, tmp_call_arg_element_407, tmp_call_arg_element_408 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4382;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_137 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_137 == NULL ))
    {
        tmp_called_137 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_137 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4385;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_409 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_410 = const_str_plain_ndarray;
    tmp_call_arg_element_411 = const_tuple_str_plain_tolist_str_digest_6aa966c731204846d6f53e6b0ac82512_tuple;
    frame_module->f_lineno = 4418;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_137, tmp_call_arg_element_409, tmp_call_arg_element_410, tmp_call_arg_element_411 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4418;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_138 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_138 == NULL ))
    {
        tmp_called_138 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_138 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4421;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_412 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_413 = const_str_plain_ndarray;
    tmp_call_arg_element_414 = const_tuple_c667c4e27ea8a275e4b66de02bc68798_tuple;
    frame_module->f_lineno = 4454;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_138, tmp_call_arg_element_412, tmp_call_arg_element_413, tmp_call_arg_element_414 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4454;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_139 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_139 == NULL ))
    {
        tmp_called_139 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_139 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4457;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_415 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_416 = const_str_plain_ndarray;
    tmp_call_arg_element_417 = const_tuple_str_plain_trace_str_digest_75f91e4806135a7f354a253fd2da5c0b_tuple;
    frame_module->f_lineno = 4469;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_139, tmp_call_arg_element_415, tmp_call_arg_element_416, tmp_call_arg_element_417 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4469;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_140 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_140 == NULL ))
    {
        tmp_called_140 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_140 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4472;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_418 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_419 = const_str_plain_ndarray;
    tmp_call_arg_element_420 = const_tuple_acef84770d3b7f571d00a81a7d8b0978_tuple;
    frame_module->f_lineno = 4523;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_140, tmp_call_arg_element_418, tmp_call_arg_element_419, tmp_call_arg_element_420 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4523;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_141 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_141 == NULL ))
    {
        tmp_called_141 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_141 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4526;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_421 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_422 = const_str_plain_ndarray;
    tmp_call_arg_element_423 = const_tuple_str_plain_var_str_digest_948b5f99f1d298030299d1834128007a_tuple;
    frame_module->f_lineno = 4538;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_141, tmp_call_arg_element_421, tmp_call_arg_element_422, tmp_call_arg_element_423 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4538;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_142 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_142 == NULL ))
    {
        tmp_called_142 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_142 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4541;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_424 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_425 = const_str_plain_ndarray;
    tmp_call_arg_element_426 = const_tuple_str_plain_view_str_digest_51a8f570a85cc2ea3488ddde2e3f5ebe_tuple;
    frame_module->f_lineno = 4638;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_142, tmp_call_arg_element_424, tmp_call_arg_element_425, tmp_call_arg_element_426 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4638;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_143 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_143 == NULL ))
    {
        tmp_called_143 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_143 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4647;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_427 = const_str_digest_074649e893b759031a43f33476401a94;
    tmp_call_arg_element_428 = const_str_plain_frompyfunc;
    tmp_call_arg_element_429 = const_str_digest_70bbd803d59ddc9e3f151db78f028d12;
    frame_module->f_lineno = 4685;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_143, tmp_call_arg_element_427, tmp_call_arg_element_428, tmp_call_arg_element_429 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4685;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_144 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_144 == NULL ))
    {
        tmp_called_144 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_144 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4687;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_430 = const_str_digest_074649e893b759031a43f33476401a94;
    tmp_call_arg_element_431 = const_str_plain_geterrobj;
    tmp_call_arg_element_432 = const_str_digest_447bdf769013ab944eb22405744322a2;
    frame_module->f_lineno = 4749;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_144, tmp_call_arg_element_430, tmp_call_arg_element_431, tmp_call_arg_element_432 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4749;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_145 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_145 == NULL ))
    {
        tmp_called_145 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_145 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4751;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_433 = const_str_digest_074649e893b759031a43f33476401a94;
    tmp_call_arg_element_434 = const_str_plain_seterrobj;
    tmp_call_arg_element_435 = const_str_digest_6ff87e09d50bfdcf9ed4cfe4707379fa;
    frame_module->f_lineno = 4808;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_145, tmp_call_arg_element_433, tmp_call_arg_element_434, tmp_call_arg_element_435 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4808;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_146 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_146 == NULL ))
    {
        tmp_called_146 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_146 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4817;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_436 = const_str_digest_3c09aded1adab7d161d8a975ac63ddd7;
    tmp_call_arg_element_437 = const_str_plain_digitize;
    tmp_call_arg_element_438 = const_str_digest_add3f95be50ff8fcc903f547fea3b4ae;
    frame_module->f_lineno = 4887;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_146, tmp_call_arg_element_436, tmp_call_arg_element_437, tmp_call_arg_element_438 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4887;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_147 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_147 == NULL ))
    {
        tmp_called_147 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_147 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4889;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_439 = const_str_digest_3c09aded1adab7d161d8a975ac63ddd7;
    tmp_call_arg_element_440 = const_str_plain_bincount;
    tmp_call_arg_element_441 = const_str_digest_30a1386a754a57d1f1b9a207e693591e;
    frame_module->f_lineno = 4960;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_147, tmp_call_arg_element_439, tmp_call_arg_element_440, tmp_call_arg_element_441 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 4960;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_148 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_148 == NULL ))
    {
        tmp_called_148 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_148 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 4962;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_442 = const_str_digest_3c09aded1adab7d161d8a975ac63ddd7;
    tmp_call_arg_element_443 = const_str_plain_ravel_multi_index;
    tmp_call_arg_element_444 = const_str_digest_1009b807d2ad590c5f98b355d7636ae6;
    frame_module->f_lineno = 5017;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_148, tmp_call_arg_element_442, tmp_call_arg_element_443, tmp_call_arg_element_444 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5017;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_149 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_149 == NULL ))
    {
        tmp_called_149 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_149 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5019;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_445 = const_str_digest_3c09aded1adab7d161d8a975ac63ddd7;
    tmp_call_arg_element_446 = const_str_plain_unravel_index;
    tmp_call_arg_element_447 = const_str_digest_b006d7d1149fe4c530c3dd4538d629bf;
    frame_module->f_lineno = 5060;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_149, tmp_call_arg_element_445, tmp_call_arg_element_446, tmp_call_arg_element_447 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5060;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_150 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_150 == NULL ))
    {
        tmp_called_150 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_150 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5062;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_448 = const_str_digest_3c09aded1adab7d161d8a975ac63ddd7;
    tmp_call_arg_element_449 = const_str_plain_add_docstring;
    tmp_call_arg_element_450 = const_str_digest_e0402244adbb8b2e3fe1da6213a6b483;
    frame_module->f_lineno = 5070;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_150, tmp_call_arg_element_448, tmp_call_arg_element_449, tmp_call_arg_element_450 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5070;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_151 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_151 == NULL ))
    {
        tmp_called_151 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_151 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5072;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_451 = const_str_digest_3c09aded1adab7d161d8a975ac63ddd7;
    tmp_call_arg_element_452 = const_str_plain_add_newdoc_ufunc;
    tmp_call_arg_element_453 = const_str_digest_3fa93b9471d9ce641ffcf1ba35c70798;
    frame_module->f_lineno = 5096;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_151, tmp_call_arg_element_451, tmp_call_arg_element_452, tmp_call_arg_element_453 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5096;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_152 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_152 == NULL ))
    {
        tmp_called_152 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_152 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5098;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_454 = const_str_digest_3c09aded1adab7d161d8a975ac63ddd7;
    tmp_call_arg_element_455 = const_str_plain_packbits;
    tmp_call_arg_element_456 = const_str_digest_c30fa5963b17836f9c8cb949c256d353;
    frame_module->f_lineno = 5140;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_152, tmp_call_arg_element_454, tmp_call_arg_element_455, tmp_call_arg_element_456 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5140;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_153 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_153 == NULL ))
    {
        tmp_called_153 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_153 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5142;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_457 = const_str_digest_3c09aded1adab7d161d8a975ac63ddd7;
    tmp_call_arg_element_458 = const_str_plain_unpackbits;
    tmp_call_arg_element_459 = const_str_digest_802638ce2efcfe5a86a1f2219a2e135b;
    frame_module->f_lineno = 5183;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_153, tmp_call_arg_element_457, tmp_call_arg_element_458, tmp_call_arg_element_459 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5183;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_154 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_154 == NULL ))
    {
        tmp_called_154 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_154 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5199;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_460 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_461 = const_str_plain_ufunc;
    tmp_call_arg_element_462 = const_str_digest_4333eb4a7818d9368cdaa352c664914c;
    frame_module->f_lineno = 5258;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_154, tmp_call_arg_element_460, tmp_call_arg_element_461, tmp_call_arg_element_462 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5258;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_155 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_155 == NULL ))
    {
        tmp_called_155 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_155 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5267;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_463 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_464 = const_str_plain_ufunc;
    tmp_call_arg_element_465 = const_tuple_0843079f4e99f26394f31feeb70ba449_tuple;
    frame_module->f_lineno = 5284;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_155, tmp_call_arg_element_463, tmp_call_arg_element_464, tmp_call_arg_element_465 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5284;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_156 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_156 == NULL ))
    {
        tmp_called_156 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_156 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5286;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_466 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_467 = const_str_plain_ufunc;
    tmp_call_arg_element_468 = const_tuple_str_plain_nargs_str_digest_cf62142a31180d740590961afca77341_tuple;
    frame_module->f_lineno = 5308;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_156, tmp_call_arg_element_466, tmp_call_arg_element_467, tmp_call_arg_element_468 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5308;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_157 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_157 == NULL ))
    {
        tmp_called_157 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_157 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5310;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_469 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_470 = const_str_plain_ufunc;
    tmp_call_arg_element_471 = const_tuple_str_plain_nin_str_digest_5e7d71a72bc819df62fdca5299e43c57_tuple;
    frame_module->f_lineno = 5326;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_157, tmp_call_arg_element_469, tmp_call_arg_element_470, tmp_call_arg_element_471 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5326;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_158 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_158 == NULL ))
    {
        tmp_called_158 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_158 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5328;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_472 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_473 = const_str_plain_ufunc;
    tmp_call_arg_element_474 = const_tuple_str_plain_nout_str_digest_b306dbdfabc0ea8018ff83d3e5ba34ff_tuple;
    frame_module->f_lineno = 5349;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_158, tmp_call_arg_element_472, tmp_call_arg_element_473, tmp_call_arg_element_474 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5349;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_159 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_159 == NULL ))
    {
        tmp_called_159 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_159 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5351;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_475 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_476 = const_str_plain_ufunc;
    tmp_call_arg_element_477 = const_tuple_str_plain_ntypes_str_digest_eb0507f98a108e550bd6c9fa1f4f4965_tuple;
    frame_module->f_lineno = 5375;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_159, tmp_call_arg_element_475, tmp_call_arg_element_476, tmp_call_arg_element_477 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5375;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_160 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_160 == NULL ))
    {
        tmp_called_160 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_160 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5377;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_478 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_479 = const_str_plain_ufunc;
    tmp_call_arg_element_480 = const_tuple_str_plain_types_str_digest_0a317321980a6180a9b2209254306540_tuple;
    frame_module->f_lineno = 5412;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_160, tmp_call_arg_element_478, tmp_call_arg_element_479, tmp_call_arg_element_480 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5412;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_161 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_161 == NULL ))
    {
        tmp_called_161 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_161 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5421;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_481 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_482 = const_str_plain_ufunc;
    tmp_call_arg_element_483 = const_tuple_str_plain_reduce_str_digest_52c173c637598b9eb53066cca03354ea_tuple;
    frame_module->f_lineno = 5504;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_161, tmp_call_arg_element_481, tmp_call_arg_element_482, tmp_call_arg_element_483 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5504;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_162 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_162 == NULL ))
    {
        tmp_called_162 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_162 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5506;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_484 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_485 = const_str_plain_ufunc;
    tmp_call_arg_element_486 = const_tuple_b8d5311a68b2275cd757a1cc2fa8575d_tuple;
    frame_module->f_lineno = 5578;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_162, tmp_call_arg_element_484, tmp_call_arg_element_485, tmp_call_arg_element_486 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5578;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_163 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_163 == NULL ))
    {
        tmp_called_163 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_163 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5580;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_487 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_488 = const_str_plain_ufunc;
    tmp_call_arg_element_489 = const_tuple_be4e55bf7255a611a0641da1451eeb71_tuple;
    frame_module->f_lineno = 5679;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_163, tmp_call_arg_element_487, tmp_call_arg_element_488, tmp_call_arg_element_489 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5679;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_164 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_164 == NULL ))
    {
        tmp_called_164 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_164 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5681;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_490 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_491 = const_str_plain_ufunc;
    tmp_call_arg_element_492 = const_tuple_str_plain_outer_str_digest_e541c5e631957d0b66a1bb371ca17e97_tuple;
    frame_module->f_lineno = 5741;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_164, tmp_call_arg_element_490, tmp_call_arg_element_491, tmp_call_arg_element_492 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5741;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_165 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_165 == NULL ))
    {
        tmp_called_165 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_165 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5743;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_493 = const_str_digest_3e8d4c5fbc78426f466387c576765620;
    tmp_call_arg_element_494 = const_str_plain_ufunc;
    tmp_call_arg_element_495 = const_tuple_str_plain_at_str_digest_bcc7e857acf9f2f01a9d6e72bc0c7dfb_tuple;
    frame_module->f_lineno = 5797;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_165, tmp_call_arg_element_493, tmp_call_arg_element_494, tmp_call_arg_element_495 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5797;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_166 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_166 == NULL ))
    {
        tmp_called_166 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_166 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5811;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_496 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_497 = const_str_plain_dtype;
    tmp_call_arg_element_498 = const_str_digest_28328668e8f633a203b673af046c456a;
    frame_module->f_lineno = 5893;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_166, tmp_call_arg_element_496, tmp_call_arg_element_497, tmp_call_arg_element_498 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5893;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_167 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_167 == NULL ))
    {
        tmp_called_167 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_167 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5901;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_499 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_500 = const_str_plain_dtype;
    tmp_call_arg_element_501 = const_tuple_d0d76a9f61713fe33d2b5e6127f4d883_tuple;
    frame_module->f_lineno = 5907;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_167, tmp_call_arg_element_499, tmp_call_arg_element_500, tmp_call_arg_element_501 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5907;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_168 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_168 == NULL ))
    {
        tmp_called_168 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_168 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5909;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_502 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_503 = const_str_plain_dtype;
    tmp_call_arg_element_504 = const_tuple_302259f98bdef0cc48b947aafd235e61_tuple;
    frame_module->f_lineno = 5950;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_168, tmp_call_arg_element_502, tmp_call_arg_element_503, tmp_call_arg_element_504 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5950;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_169 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_169 == NULL ))
    {
        tmp_called_169 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_169 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5952;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_505 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_506 = const_str_plain_dtype;
    tmp_call_arg_element_507 = const_tuple_str_plain_char_str_digest_f5ed9e6a8b560ec8aa02dc14009c335e_tuple;
    frame_module->f_lineno = 5953;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_169, tmp_call_arg_element_505, tmp_call_arg_element_506, tmp_call_arg_element_507 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5953;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_170 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_170 == NULL ))
    {
        tmp_called_170 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_170 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5955;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_508 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_509 = const_str_plain_dtype;
    tmp_call_arg_element_510 = const_tuple_str_plain_descr_str_digest_6cf2179a1ded73b0efccdf872728d471_tuple;
    frame_module->f_lineno = 5962;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_170, tmp_call_arg_element_508, tmp_call_arg_element_509, tmp_call_arg_element_510 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5962;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_171 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_171 == NULL ))
    {
        tmp_called_171 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_171 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5964;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_511 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_512 = const_str_plain_dtype;
    tmp_call_arg_element_513 = const_tuple_str_plain_fields_str_digest_969f7329219497cd8ce1bcb0055cb881_tuple;
    frame_module->f_lineno = 5989;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_171, tmp_call_arg_element_511, tmp_call_arg_element_512, tmp_call_arg_element_513 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 5989;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_172 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_172 == NULL ))
    {
        tmp_called_172 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_172 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 5991;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_514 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_515 = const_str_plain_dtype;
    tmp_call_arg_element_516 = const_tuple_str_plain_flags_str_digest_929a391db266f9cd3537824479a31e3e_tuple;
    frame_module->f_lineno = 6001;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_172, tmp_call_arg_element_514, tmp_call_arg_element_515, tmp_call_arg_element_516 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6001;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_173 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_173 == NULL ))
    {
        tmp_called_173 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_173 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6003;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_517 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_518 = const_str_plain_dtype;
    tmp_call_arg_element_519 = const_tuple_528ae606cdf01db301387e0b4392ef72_tuple;
    frame_module->f_lineno = 6014;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_173, tmp_call_arg_element_517, tmp_call_arg_element_518, tmp_call_arg_element_519 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6014;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_174 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_174 == NULL ))
    {
        tmp_called_174 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_174 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6016;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_520 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_521 = const_str_plain_dtype;
    tmp_call_arg_element_522 = const_tuple_0020ee3234d1e5ee27d06074badeb028_tuple;
    frame_module->f_lineno = 6043;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_174, tmp_call_arg_element_520, tmp_call_arg_element_521, tmp_call_arg_element_522 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6043;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_175 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_175 == NULL ))
    {
        tmp_called_175 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_175 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6045;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_523 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_524 = const_str_plain_dtype;
    tmp_call_arg_element_525 = const_tuple_d9817fd54a0983f66e9e06ccaa537043_tuple;
    frame_module->f_lineno = 6050;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_175, tmp_call_arg_element_523, tmp_call_arg_element_524, tmp_call_arg_element_525 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6050;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_176 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_176 == NULL ))
    {
        tmp_called_176 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_176 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6052;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_526 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_527 = const_str_plain_dtype;
    tmp_call_arg_element_528 = const_tuple_23f4a897322d8862a4c354029a7b472a_tuple;
    frame_module->f_lineno = 6058;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_176, tmp_call_arg_element_526, tmp_call_arg_element_527, tmp_call_arg_element_528 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6058;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_177 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_177 == NULL ))
    {
        tmp_called_177 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_177 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6060;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_529 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_530 = const_str_plain_dtype;
    tmp_call_arg_element_531 = const_tuple_1aad8a4f68d578f503ebfeb4e89c613e_tuple;
    frame_module->f_lineno = 6067;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_177, tmp_call_arg_element_529, tmp_call_arg_element_530, tmp_call_arg_element_531 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6067;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_178 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_178 == NULL ))
    {
        tmp_called_178 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_178 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6069;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_532 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_533 = const_str_plain_dtype;
    tmp_call_arg_element_534 = const_tuple_str_plain_kind_str_digest_0b50ef073e797b4c43fede7667cbaa1c_tuple;
    frame_module->f_lineno = 6073;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_178, tmp_call_arg_element_532, tmp_call_arg_element_533, tmp_call_arg_element_534 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6073;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_179 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_179 == NULL ))
    {
        tmp_called_179 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_179 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6075;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_535 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_536 = const_str_plain_dtype;
    tmp_call_arg_element_537 = const_tuple_str_plain_name_str_digest_6ffea2eee88cbbfcf093e63b6681e831_tuple;
    frame_module->f_lineno = 6081;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_179, tmp_call_arg_element_535, tmp_call_arg_element_536, tmp_call_arg_element_537 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6081;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_180 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_180 == NULL ))
    {
        tmp_called_180 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_180 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6083;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_538 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_539 = const_str_plain_dtype;
    tmp_call_arg_element_540 = const_tuple_str_plain_names_str_digest_3ff91e10ed6b8e9118c69266f1910be7_tuple;
    frame_module->f_lineno = 6096;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_180, tmp_call_arg_element_538, tmp_call_arg_element_539, tmp_call_arg_element_540 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6096;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_181 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_181 == NULL ))
    {
        tmp_called_181 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_181 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6098;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_541 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_542 = const_str_plain_dtype;
    tmp_call_arg_element_543 = const_tuple_str_plain_num_str_digest_74c41d1c81787ff366291849705c2caa_tuple;
    frame_module->f_lineno = 6104;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_181, tmp_call_arg_element_541, tmp_call_arg_element_542, tmp_call_arg_element_543 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6104;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_182 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_182 == NULL ))
    {
        tmp_called_182 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_182 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6106;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_544 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_545 = const_str_plain_dtype;
    tmp_call_arg_element_546 = const_tuple_str_plain_shape_str_digest_d33b15733c5725986a27558769e649e0_tuple;
    frame_module->f_lineno = 6111;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_182, tmp_call_arg_element_544, tmp_call_arg_element_545, tmp_call_arg_element_546 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6111;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_183 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_183 == NULL ))
    {
        tmp_called_183 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_183 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6113;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_547 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_548 = const_str_plain_dtype;
    tmp_call_arg_element_549 = const_tuple_str_plain_str_str_digest_93fda3fda7049c22f560d845f87433a4_tuple;
    frame_module->f_lineno = 6114;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_183, tmp_call_arg_element_547, tmp_call_arg_element_548, tmp_call_arg_element_549 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6114;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_184 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_184 == NULL ))
    {
        tmp_called_184 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_184 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6116;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_550 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_551 = const_str_plain_dtype;
    tmp_call_arg_element_552 = const_tuple_c286bcaa8a4d2031c78d2e62e90d77e2_tuple;
    frame_module->f_lineno = 6128;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_184, tmp_call_arg_element_550, tmp_call_arg_element_551, tmp_call_arg_element_552 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6128;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_185 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_185 == NULL ))
    {
        tmp_called_185 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_185 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6130;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_553 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_554 = const_str_plain_dtype;
    tmp_call_arg_element_555 = const_tuple_str_plain_type_str_digest_85246e0763e932149c83d2621fd8fc21_tuple;
    frame_module->f_lineno = 6131;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_185, tmp_call_arg_element_553, tmp_call_arg_element_554, tmp_call_arg_element_555 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6131;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_186 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_186 == NULL ))
    {
        tmp_called_186 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_186 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6139;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_556 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_557 = const_str_plain_dtype;
    tmp_call_arg_element_558 = const_tuple_b27408d30f707d8507cc97d68e4fb8d0_tuple;
    frame_module->f_lineno = 6203;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_186, tmp_call_arg_element_556, tmp_call_arg_element_557, tmp_call_arg_element_558 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6203;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_187 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_187 == NULL ))
    {
        tmp_called_187 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_187 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6212;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_559 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_560 = const_str_plain_busdaycalendar;
    tmp_call_arg_element_561 = const_str_digest_1e62395f363f49260eeee67805d09a55;
    frame_module->f_lineno = 6274;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_187, tmp_call_arg_element_559, tmp_call_arg_element_560, tmp_call_arg_element_561 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6274;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_188 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_188 == NULL ))
    {
        tmp_called_188 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_188 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6276;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_562 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_563 = const_str_plain_busdaycalendar;
    tmp_call_arg_element_564 = const_tuple_a5a48f725a7776592295423e68270431_tuple;
    frame_module->f_lineno = 6277;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_188, tmp_call_arg_element_562, tmp_call_arg_element_563, tmp_call_arg_element_564 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6277;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_189 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_189 == NULL ))
    {
        tmp_called_189 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_189 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6279;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_565 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_566 = const_str_plain_busdaycalendar;
    tmp_call_arg_element_567 = const_tuple_78fdc1d4207a13e9f7e942e52fd65ad9_tuple;
    frame_module->f_lineno = 6280;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_189, tmp_call_arg_element_565, tmp_call_arg_element_566, tmp_call_arg_element_567 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6280;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_190 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_190 == NULL ))
    {
        tmp_called_190 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_190 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6282;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_568 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_569 = const_str_plain_is_busday;
    tmp_call_arg_element_570 = const_str_digest_6563312a9f8aa92f97088217529edc1a;
    frame_module->f_lineno = 6331;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_190, tmp_call_arg_element_568, tmp_call_arg_element_569, tmp_call_arg_element_570 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6331;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_191 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_191 == NULL ))
    {
        tmp_called_191 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_191 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6333;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_571 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_572 = const_str_plain_busday_offset;
    tmp_call_arg_element_573 = const_str_digest_e860e8fbbaa4d19f20e58ceea30ed723;
    frame_module->f_lineno = 6421;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_191, tmp_call_arg_element_571, tmp_call_arg_element_572, tmp_call_arg_element_573 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6421;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_192 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_192 == NULL ))
    {
        tmp_called_192 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_192 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6423;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_574 = const_str_digest_94c347c24ae368650c11346640f548a5;
    tmp_call_arg_element_575 = const_str_plain_busday_count;
    tmp_call_arg_element_576 = const_str_digest_edf9c894b0824e53430d7b02673039e6;
    frame_module->f_lineno = 6485;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_192, tmp_call_arg_element_574, tmp_call_arg_element_575, tmp_call_arg_element_576 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6485;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_193 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_193 == NULL ))
    {
        tmp_called_193 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_193 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6493;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_577 = const_str_digest_2029c2f6a2f548f5a6896adc20b13a55;
    tmp_call_arg_element_578 = const_str_plain_mgrid;
    tmp_call_arg_element_579 = const_str_digest_c8034cf4ded85ce0e20c7db0a95a1d52;
    frame_module->f_lineno = 6534;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_193, tmp_call_arg_element_577, tmp_call_arg_element_578, tmp_call_arg_element_579 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6534;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_194 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_194 == NULL ))
    {
        tmp_called_194 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_194 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6536;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_580 = const_str_digest_2029c2f6a2f548f5a6896adc20b13a55;
    tmp_call_arg_element_581 = const_str_plain_ogrid;
    tmp_call_arg_element_582 = const_str_digest_032113a56a021b3243c78050144fee20;
    frame_module->f_lineno = 6573;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_194, tmp_call_arg_element_580, tmp_call_arg_element_581, tmp_call_arg_element_582 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6573;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_195 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_195 == NULL ))
    {
        tmp_called_195 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_195 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6582;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_583 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_584 = const_str_plain_generic;
    tmp_call_arg_element_585 = const_str_digest_3c2254a8d1af3ea25a37272f8ee02b0b;
    frame_module->f_lineno = 6592;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_195, tmp_call_arg_element_583, tmp_call_arg_element_584, tmp_call_arg_element_585 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6592;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_196 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_196 == NULL ))
    {
        tmp_called_196 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_196 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6596;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_586 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_587 = const_str_plain_generic;
    tmp_call_arg_element_588 = const_tuple_str_plain_T_str_digest_65fc83e171a455f8ed85ba6caf5e88ed_tuple;
    frame_module->f_lineno = 6608;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_196, tmp_call_arg_element_586, tmp_call_arg_element_587, tmp_call_arg_element_588 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6608;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_197 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_197 == NULL ))
    {
        tmp_called_197 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_197 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6610;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_589 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_590 = const_str_plain_generic;
    tmp_call_arg_element_591 = const_tuple_str_plain_base_str_digest_e313429493723aee2818b55eabfdb6db_tuple;
    frame_module->f_lineno = 6622;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_197, tmp_call_arg_element_589, tmp_call_arg_element_590, tmp_call_arg_element_591 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6622;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_198 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_198 == NULL ))
    {
        tmp_called_198 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_198 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6624;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_592 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_593 = const_str_plain_generic;
    tmp_call_arg_element_594 = const_tuple_str_plain_data_str_digest_7cb851f3389929e39052101b8301f35c_tuple;
    frame_module->f_lineno = 6625;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_198, tmp_call_arg_element_592, tmp_call_arg_element_593, tmp_call_arg_element_594 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6625;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_199 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_199 == NULL ))
    {
        tmp_called_199 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_199 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6627;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_595 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_596 = const_str_plain_generic;
    tmp_call_arg_element_597 = const_tuple_str_plain_dtype_str_digest_762d3e50dc2c60e27cd22917fdb24ebd_tuple;
    frame_module->f_lineno = 6628;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_199, tmp_call_arg_element_595, tmp_call_arg_element_596, tmp_call_arg_element_597 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6628;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_200 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_200 == NULL ))
    {
        tmp_called_200 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_200 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6630;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_598 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_599 = const_str_plain_generic;
    tmp_call_arg_element_600 = const_tuple_str_plain_flags_str_digest_5628e59825cf8b8953c034873f9773a7_tuple;
    frame_module->f_lineno = 6631;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_200, tmp_call_arg_element_598, tmp_call_arg_element_599, tmp_call_arg_element_600 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6631;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_201 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_201 == NULL ))
    {
        tmp_called_201 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_201 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6633;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_601 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_602 = const_str_plain_generic;
    tmp_call_arg_element_603 = const_tuple_str_plain_flat_str_digest_60942448ddcf05011fad74add0dc08f8_tuple;
    frame_module->f_lineno = 6634;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_201, tmp_call_arg_element_601, tmp_call_arg_element_602, tmp_call_arg_element_603 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6634;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_202 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_202 == NULL ))
    {
        tmp_called_202 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_202 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6636;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_604 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_605 = const_str_plain_generic;
    tmp_call_arg_element_606 = const_tuple_str_plain_imag_str_digest_e44d4ad86aca8c01ebc6b64b718673bb_tuple;
    frame_module->f_lineno = 6637;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_202, tmp_call_arg_element_604, tmp_call_arg_element_605, tmp_call_arg_element_606 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6637;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_203 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_203 == NULL ))
    {
        tmp_called_203 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_203 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6639;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_607 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_608 = const_str_plain_generic;
    tmp_call_arg_element_609 = const_tuple_e302f866b0f484a902124534cdcd2f67_tuple;
    frame_module->f_lineno = 6640;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_203, tmp_call_arg_element_607, tmp_call_arg_element_608, tmp_call_arg_element_609 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6640;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_204 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_204 == NULL ))
    {
        tmp_called_204 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_204 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6642;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_610 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_611 = const_str_plain_generic;
    tmp_call_arg_element_612 = const_tuple_str_plain_nbytes_str_digest_0eb3b27e4bb7003460338d0c842d1ed8_tuple;
    frame_module->f_lineno = 6643;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_204, tmp_call_arg_element_610, tmp_call_arg_element_611, tmp_call_arg_element_612 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6643;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_205 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_205 == NULL ))
    {
        tmp_called_205 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_205 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6645;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_613 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_614 = const_str_plain_generic;
    tmp_call_arg_element_615 = const_tuple_str_plain_ndim_str_digest_9983fdaa872f329124db802cd0c11658_tuple;
    frame_module->f_lineno = 6646;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_205, tmp_call_arg_element_613, tmp_call_arg_element_614, tmp_call_arg_element_615 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6646;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_206 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_206 == NULL ))
    {
        tmp_called_206 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_206 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6648;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_616 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_617 = const_str_plain_generic;
    tmp_call_arg_element_618 = const_tuple_str_plain_real_str_digest_39436fba54dc24ff5a8fbdec205b59be_tuple;
    frame_module->f_lineno = 6649;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_206, tmp_call_arg_element_616, tmp_call_arg_element_617, tmp_call_arg_element_618 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6649;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_207 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_207 == NULL ))
    {
        tmp_called_207 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_207 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6651;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_619 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_620 = const_str_plain_generic;
    tmp_call_arg_element_621 = const_tuple_str_plain_shape_str_digest_7a4022f5e3b8123daadb557fb7f8e278_tuple;
    frame_module->f_lineno = 6652;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_207, tmp_call_arg_element_619, tmp_call_arg_element_620, tmp_call_arg_element_621 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6652;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_208 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_208 == NULL ))
    {
        tmp_called_208 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_208 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6654;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_622 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_623 = const_str_plain_generic;
    tmp_call_arg_element_624 = const_tuple_str_plain_size_str_digest_3a6134ee353f2f256c42b0711db150ed_tuple;
    frame_module->f_lineno = 6655;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_208, tmp_call_arg_element_622, tmp_call_arg_element_623, tmp_call_arg_element_624 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6655;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_209 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_209 == NULL ))
    {
        tmp_called_209 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_209 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6657;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_625 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_626 = const_str_plain_generic;
    tmp_call_arg_element_627 = const_tuple_25fd744e31a7a60c3b09b43a7632b54d_tuple;
    frame_module->f_lineno = 6658;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_209, tmp_call_arg_element_625, tmp_call_arg_element_626, tmp_call_arg_element_627 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6658;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_210 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_210 == NULL ))
    {
        tmp_called_210 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_210 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6662;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_628 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_629 = const_str_plain_generic;
    tmp_call_arg_element_630 = const_tuple_str_plain_all_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 6674;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_210, tmp_call_arg_element_628, tmp_call_arg_element_629, tmp_call_arg_element_630 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6674;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_211 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_211 == NULL ))
    {
        tmp_called_211 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_211 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6676;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_631 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_632 = const_str_plain_generic;
    tmp_call_arg_element_633 = const_tuple_str_plain_any_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 6688;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_211, tmp_call_arg_element_631, tmp_call_arg_element_632, tmp_call_arg_element_633 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6688;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_212 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_212 == NULL ))
    {
        tmp_called_212 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_212 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6690;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_634 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_635 = const_str_plain_generic;
    tmp_call_arg_element_636 = const_tuple_str_plain_argmax_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 6702;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_212, tmp_call_arg_element_634, tmp_call_arg_element_635, tmp_call_arg_element_636 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6702;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_213 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_213 == NULL ))
    {
        tmp_called_213 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_213 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6704;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_637 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_638 = const_str_plain_generic;
    tmp_call_arg_element_639 = const_tuple_str_plain_argmin_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 6716;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_213, tmp_call_arg_element_637, tmp_call_arg_element_638, tmp_call_arg_element_639 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6716;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_214 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_214 == NULL ))
    {
        tmp_called_214 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_214 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6718;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_640 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_641 = const_str_plain_generic;
    tmp_call_arg_element_642 = const_tuple_6a9ff2a03de7ca52b650f925d8386e8d_tuple;
    frame_module->f_lineno = 6730;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_214, tmp_call_arg_element_640, tmp_call_arg_element_641, tmp_call_arg_element_642 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6730;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_215 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_215 == NULL ))
    {
        tmp_called_215 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_215 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6732;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_643 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_644 = const_str_plain_generic;
    tmp_call_arg_element_645 = const_tuple_str_plain_astype_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 6744;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_215, tmp_call_arg_element_643, tmp_call_arg_element_644, tmp_call_arg_element_645 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6744;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_216 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_216 == NULL ))
    {
        tmp_called_216 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_216 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6746;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_646 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_647 = const_str_plain_generic;
    tmp_call_arg_element_648 = const_tuple_b7045e4aec5c67e8a052a2f9c4cedb09_tuple;
    frame_module->f_lineno = 6758;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_216, tmp_call_arg_element_646, tmp_call_arg_element_647, tmp_call_arg_element_648 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6758;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_217 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_217 == NULL ))
    {
        tmp_called_217 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_217 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6760;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_649 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_650 = const_str_plain_generic;
    tmp_call_arg_element_651 = const_tuple_str_plain_choose_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 6772;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_217, tmp_call_arg_element_649, tmp_call_arg_element_650, tmp_call_arg_element_651 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6772;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_218 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_218 == NULL ))
    {
        tmp_called_218 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_218 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6774;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_652 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_653 = const_str_plain_generic;
    tmp_call_arg_element_654 = const_tuple_str_plain_clip_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 6786;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_218, tmp_call_arg_element_652, tmp_call_arg_element_653, tmp_call_arg_element_654 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6786;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_219 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_219 == NULL ))
    {
        tmp_called_219 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_219 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6788;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_655 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_656 = const_str_plain_generic;
    tmp_call_arg_element_657 = const_tuple_dc6a73b1d46856324d0f02e54a8468eb_tuple;
    frame_module->f_lineno = 6800;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_219, tmp_call_arg_element_655, tmp_call_arg_element_656, tmp_call_arg_element_657 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6800;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_220 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_220 == NULL ))
    {
        tmp_called_220 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_220 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6802;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_658 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_659 = const_str_plain_generic;
    tmp_call_arg_element_660 = const_tuple_399d1fb053cdcdb6c7673b9e798b07bd_tuple;
    frame_module->f_lineno = 6814;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_220, tmp_call_arg_element_658, tmp_call_arg_element_659, tmp_call_arg_element_660 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6814;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_221 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_221 == NULL ))
    {
        tmp_called_221 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_221 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6816;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_661 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_662 = const_str_plain_generic;
    tmp_call_arg_element_663 = const_tuple_str_plain_copy_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 6828;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_221, tmp_call_arg_element_661, tmp_call_arg_element_662, tmp_call_arg_element_663 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6828;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_222 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_222 == NULL ))
    {
        tmp_called_222 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_222 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6830;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_664 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_665 = const_str_plain_generic;
    tmp_call_arg_element_666 = const_tuple_ce3a9e15732e7544a8395af2565f59f2_tuple;
    frame_module->f_lineno = 6842;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_222, tmp_call_arg_element_664, tmp_call_arg_element_665, tmp_call_arg_element_666 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6842;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_223 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_223 == NULL ))
    {
        tmp_called_223 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_223 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6844;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_667 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_668 = const_str_plain_generic;
    tmp_call_arg_element_669 = const_tuple_str_plain_cumsum_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 6856;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_223, tmp_call_arg_element_667, tmp_call_arg_element_668, tmp_call_arg_element_669 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6856;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_224 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_224 == NULL ))
    {
        tmp_called_224 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_224 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6858;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_670 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_671 = const_str_plain_generic;
    tmp_call_arg_element_672 = const_tuple_59b84ea352c370c791c9fdc96f24f9dd_tuple;
    frame_module->f_lineno = 6870;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_224, tmp_call_arg_element_670, tmp_call_arg_element_671, tmp_call_arg_element_672 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6870;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_225 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_225 == NULL ))
    {
        tmp_called_225 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_225 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6872;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_673 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_674 = const_str_plain_generic;
    tmp_call_arg_element_675 = const_tuple_str_plain_dump_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 6884;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_225, tmp_call_arg_element_673, tmp_call_arg_element_674, tmp_call_arg_element_675 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6884;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_226 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_226 == NULL ))
    {
        tmp_called_226 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_226 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6886;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_676 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_677 = const_str_plain_generic;
    tmp_call_arg_element_678 = const_tuple_str_plain_dumps_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 6898;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_226, tmp_call_arg_element_676, tmp_call_arg_element_677, tmp_call_arg_element_678 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6898;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_227 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_227 == NULL ))
    {
        tmp_called_227 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_227 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6900;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_679 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_680 = const_str_plain_generic;
    tmp_call_arg_element_681 = const_tuple_str_plain_fill_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 6912;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_227, tmp_call_arg_element_679, tmp_call_arg_element_680, tmp_call_arg_element_681 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6912;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_228 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_228 == NULL ))
    {
        tmp_called_228 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_228 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6914;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_682 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_683 = const_str_plain_generic;
    tmp_call_arg_element_684 = const_tuple_f5e8791ab77b8d5ce316f9c3b2838f29_tuple;
    frame_module->f_lineno = 6926;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_228, tmp_call_arg_element_682, tmp_call_arg_element_683, tmp_call_arg_element_684 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6926;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_229 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_229 == NULL ))
    {
        tmp_called_229 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_229 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6928;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_685 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_686 = const_str_plain_generic;
    tmp_call_arg_element_687 = const_tuple_1eaf514d614ec32acf40a0074e4b756f_tuple;
    frame_module->f_lineno = 6940;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_229, tmp_call_arg_element_685, tmp_call_arg_element_686, tmp_call_arg_element_687 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6940;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_230 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_230 == NULL ))
    {
        tmp_called_230 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_230 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6942;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_688 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_689 = const_str_plain_generic;
    tmp_call_arg_element_690 = const_tuple_str_plain_item_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 6954;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_230, tmp_call_arg_element_688, tmp_call_arg_element_689, tmp_call_arg_element_690 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6954;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_231 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_231 == NULL ))
    {
        tmp_called_231 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_231 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6956;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_691 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_692 = const_str_plain_generic;
    tmp_call_arg_element_693 = const_tuple_9a39a2a6363d0291f4af67d3c1fdc6fc_tuple;
    frame_module->f_lineno = 6968;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_231, tmp_call_arg_element_691, tmp_call_arg_element_692, tmp_call_arg_element_693 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6968;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_232 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_232 == NULL ))
    {
        tmp_called_232 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_232 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6970;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_694 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_695 = const_str_plain_generic;
    tmp_call_arg_element_696 = const_tuple_str_plain_max_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 6982;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_232, tmp_call_arg_element_694, tmp_call_arg_element_695, tmp_call_arg_element_696 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6982;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_233 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_233 == NULL ))
    {
        tmp_called_233 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_233 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6984;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_697 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_698 = const_str_plain_generic;
    tmp_call_arg_element_699 = const_tuple_str_plain_mean_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 6996;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_233, tmp_call_arg_element_697, tmp_call_arg_element_698, tmp_call_arg_element_699 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 6996;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_234 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_234 == NULL ))
    {
        tmp_called_234 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_234 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 6998;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_700 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_701 = const_str_plain_generic;
    tmp_call_arg_element_702 = const_tuple_str_plain_min_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7010;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_234, tmp_call_arg_element_700, tmp_call_arg_element_701, tmp_call_arg_element_702 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7010;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_235 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_235 == NULL ))
    {
        tmp_called_235 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_235 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7012;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_703 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_704 = const_str_plain_generic;
    tmp_call_arg_element_705 = const_tuple_eb81220d52bec09451c05b382c860c9d_tuple;
    frame_module->f_lineno = 7043;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_235, tmp_call_arg_element_703, tmp_call_arg_element_704, tmp_call_arg_element_705 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7043;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_236 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_236 == NULL ))
    {
        tmp_called_236 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_236 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7045;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_706 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_707 = const_str_plain_generic;
    tmp_call_arg_element_708 = const_tuple_3dd619ec6f7ff3a4a6721a36c2165dbc_tuple;
    frame_module->f_lineno = 7057;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_236, tmp_call_arg_element_706, tmp_call_arg_element_707, tmp_call_arg_element_708 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7057;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_237 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_237 == NULL ))
    {
        tmp_called_237 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_237 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7059;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_709 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_710 = const_str_plain_generic;
    tmp_call_arg_element_711 = const_tuple_str_plain_prod_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7071;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_237, tmp_call_arg_element_709, tmp_call_arg_element_710, tmp_call_arg_element_711 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7071;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_238 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_238 == NULL ))
    {
        tmp_called_238 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_238 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7073;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_712 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_713 = const_str_plain_generic;
    tmp_call_arg_element_714 = const_tuple_str_plain_ptp_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7085;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_238, tmp_call_arg_element_712, tmp_call_arg_element_713, tmp_call_arg_element_714 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7085;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_239 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_239 == NULL ))
    {
        tmp_called_239 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_239 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7087;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_715 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_716 = const_str_plain_generic;
    tmp_call_arg_element_717 = const_tuple_str_plain_put_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7099;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_239, tmp_call_arg_element_715, tmp_call_arg_element_716, tmp_call_arg_element_717 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7099;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_240 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_240 == NULL ))
    {
        tmp_called_240 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_240 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7101;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_718 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_719 = const_str_plain_generic;
    tmp_call_arg_element_720 = const_tuple_str_plain_ravel_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7113;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_240, tmp_call_arg_element_718, tmp_call_arg_element_719, tmp_call_arg_element_720 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7113;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_241 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_241 == NULL ))
    {
        tmp_called_241 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_241 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7115;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_721 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_722 = const_str_plain_generic;
    tmp_call_arg_element_723 = const_tuple_str_plain_repeat_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7127;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_241, tmp_call_arg_element_721, tmp_call_arg_element_722, tmp_call_arg_element_723 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7127;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_242 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_242 == NULL ))
    {
        tmp_called_242 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_242 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7129;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_724 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_725 = const_str_plain_generic;
    tmp_call_arg_element_726 = const_tuple_ed25212450d06d88b5e6e7526a8b7e9a_tuple;
    frame_module->f_lineno = 7141;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_242, tmp_call_arg_element_724, tmp_call_arg_element_725, tmp_call_arg_element_726 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7141;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_243 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_243 == NULL ))
    {
        tmp_called_243 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_243 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7143;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_727 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_728 = const_str_plain_generic;
    tmp_call_arg_element_729 = const_tuple_str_plain_resize_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7155;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_243, tmp_call_arg_element_727, tmp_call_arg_element_728, tmp_call_arg_element_729 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7155;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_244 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_244 == NULL ))
    {
        tmp_called_244 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_244 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7157;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_730 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_731 = const_str_plain_generic;
    tmp_call_arg_element_732 = const_tuple_str_plain_round_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7169;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_244, tmp_call_arg_element_730, tmp_call_arg_element_731, tmp_call_arg_element_732 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7169;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_245 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_245 == NULL ))
    {
        tmp_called_245 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_245 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7171;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_733 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_734 = const_str_plain_generic;
    tmp_call_arg_element_735 = const_tuple_e8ecfa309dc563fce9833cd9862268c6_tuple;
    frame_module->f_lineno = 7183;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_245, tmp_call_arg_element_733, tmp_call_arg_element_734, tmp_call_arg_element_735 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7183;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_246 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_246 == NULL ))
    {
        tmp_called_246 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_246 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7185;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_736 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_737 = const_str_plain_generic;
    tmp_call_arg_element_738 = const_tuple_b05a2c219d36f39d06266fc0a67f7f7c_tuple;
    frame_module->f_lineno = 7197;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_246, tmp_call_arg_element_736, tmp_call_arg_element_737, tmp_call_arg_element_738 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7197;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_247 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_247 == NULL ))
    {
        tmp_called_247 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_247 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7199;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_739 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_740 = const_str_plain_generic;
    tmp_call_arg_element_741 = const_tuple_a8b484a63220f1a7781724126178ca4b_tuple;
    frame_module->f_lineno = 7211;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_247, tmp_call_arg_element_739, tmp_call_arg_element_740, tmp_call_arg_element_741 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7211;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_248 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_248 == NULL ))
    {
        tmp_called_248 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_248 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7213;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_742 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_743 = const_str_plain_generic;
    tmp_call_arg_element_744 = const_tuple_str_plain_sort_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7225;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_248, tmp_call_arg_element_742, tmp_call_arg_element_743, tmp_call_arg_element_744 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7225;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_249 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_249 == NULL ))
    {
        tmp_called_249 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_249 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7227;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_745 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_746 = const_str_plain_generic;
    tmp_call_arg_element_747 = const_tuple_724ca32bde9d1d6e878e1ef179ab2103_tuple;
    frame_module->f_lineno = 7239;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_249, tmp_call_arg_element_745, tmp_call_arg_element_746, tmp_call_arg_element_747 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7239;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_250 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_250 == NULL ))
    {
        tmp_called_250 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_250 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7241;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_748 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_749 = const_str_plain_generic;
    tmp_call_arg_element_750 = const_tuple_str_plain_std_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7253;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_250, tmp_call_arg_element_748, tmp_call_arg_element_749, tmp_call_arg_element_750 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7253;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_251 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_251 == NULL ))
    {
        tmp_called_251 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_251 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7255;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_751 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_752 = const_str_plain_generic;
    tmp_call_arg_element_753 = const_tuple_str_plain_sum_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7267;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_251, tmp_call_arg_element_751, tmp_call_arg_element_752, tmp_call_arg_element_753 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7267;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_252 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_252 == NULL ))
    {
        tmp_called_252 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_252 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7269;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_754 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_755 = const_str_plain_generic;
    tmp_call_arg_element_756 = const_tuple_13540797fd094a440255b0b6be4d3e38_tuple;
    frame_module->f_lineno = 7281;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_252, tmp_call_arg_element_754, tmp_call_arg_element_755, tmp_call_arg_element_756 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7281;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_253 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_253 == NULL ))
    {
        tmp_called_253 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_253 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7283;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_757 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_758 = const_str_plain_generic;
    tmp_call_arg_element_759 = const_tuple_str_plain_take_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7295;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_253, tmp_call_arg_element_757, tmp_call_arg_element_758, tmp_call_arg_element_759 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7295;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_254 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_254 == NULL ))
    {
        tmp_called_254 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_254 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7297;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_760 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_761 = const_str_plain_generic;
    tmp_call_arg_element_762 = const_tuple_str_plain_tofile_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7309;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_254, tmp_call_arg_element_760, tmp_call_arg_element_761, tmp_call_arg_element_762 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7309;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_255 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_255 == NULL ))
    {
        tmp_called_255 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_255 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7311;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_763 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_764 = const_str_plain_generic;
    tmp_call_arg_element_765 = const_tuple_str_plain_tolist_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7323;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_255, tmp_call_arg_element_763, tmp_call_arg_element_764, tmp_call_arg_element_765 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7323;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_256 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_256 == NULL ))
    {
        tmp_called_256 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_256 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7325;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_766 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_767 = const_str_plain_generic;
    tmp_call_arg_element_768 = const_tuple_c55f69ef3434ad11c1ed52bd5f122d0d_tuple;
    frame_module->f_lineno = 7337;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_256, tmp_call_arg_element_766, tmp_call_arg_element_767, tmp_call_arg_element_768 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7337;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_257 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_257 == NULL ))
    {
        tmp_called_257 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_257 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7339;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_769 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_770 = const_str_plain_generic;
    tmp_call_arg_element_771 = const_tuple_str_plain_trace_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7351;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_257, tmp_call_arg_element_769, tmp_call_arg_element_770, tmp_call_arg_element_771 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7351;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_258 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_258 == NULL ))
    {
        tmp_called_258 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_258 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7353;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_772 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_773 = const_str_plain_generic;
    tmp_call_arg_element_774 = const_tuple_8bedc337ac31ceb0065097ce57e3e191_tuple;
    frame_module->f_lineno = 7365;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_258, tmp_call_arg_element_772, tmp_call_arg_element_773, tmp_call_arg_element_774 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7365;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_259 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_259 == NULL ))
    {
        tmp_called_259 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_259 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7367;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_775 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_776 = const_str_plain_generic;
    tmp_call_arg_element_777 = const_tuple_str_plain_var_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7379;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_259, tmp_call_arg_element_775, tmp_call_arg_element_776, tmp_call_arg_element_777 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7379;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_260 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_260 == NULL ))
    {
        tmp_called_260 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_260 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7381;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_778 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_779 = const_str_plain_generic;
    tmp_call_arg_element_780 = const_tuple_str_plain_view_str_digest_767d5f99968bf1712f4b5a056186620e_tuple;
    frame_module->f_lineno = 7393;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_260, tmp_call_arg_element_778, tmp_call_arg_element_779, tmp_call_arg_element_780 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7393;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_261 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_261 == NULL ))
    {
        tmp_called_261 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_261 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7402;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_781 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_782 = const_str_plain_bool_;
    tmp_call_arg_element_783 = const_str_digest_60b6f39c3d7b9597503a0074af3401de;
    frame_module->f_lineno = 7403;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_261, tmp_call_arg_element_781, tmp_call_arg_element_782, tmp_call_arg_element_783 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7403;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_262 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_262 == NULL ))
    {
        tmp_called_262 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_262 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7405;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_784 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_785 = const_str_plain_complex64;
    tmp_call_arg_element_786 = const_str_digest_a5f0412be9e85347c4bbbb2ba65445ea;
    frame_module->f_lineno = 7409;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_262, tmp_call_arg_element_784, tmp_call_arg_element_785, tmp_call_arg_element_786 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7409;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_263 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_263 == NULL ))
    {
        tmp_called_263 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_263 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7411;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_787 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_788 = const_str_plain_complex128;
    tmp_call_arg_element_789 = const_str_digest_513f350303035935fe372cc4f9a101c4;
    frame_module->f_lineno = 7416;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_263, tmp_call_arg_element_787, tmp_call_arg_element_788, tmp_call_arg_element_789 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7416;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_264 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_264 == NULL ))
    {
        tmp_called_264 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_264 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7418;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_790 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_791 = const_str_plain_complex256;
    tmp_call_arg_element_792 = const_str_digest_3ffe729aca8ed61858103632f03b8327;
    frame_module->f_lineno = 7422;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_264, tmp_call_arg_element_790, tmp_call_arg_element_791, tmp_call_arg_element_792 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7422;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_265 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_265 == NULL ))
    {
        tmp_called_265 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_265 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7424;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_793 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_794 = const_str_plain_float32;
    tmp_call_arg_element_795 = const_str_digest_a1a3b0d920890d9a63c1896731aa1276;
    frame_module->f_lineno = 7428;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_265, tmp_call_arg_element_793, tmp_call_arg_element_794, tmp_call_arg_element_795 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7428;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_266 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_266 == NULL ))
    {
        tmp_called_266 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_266 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7430;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_796 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_797 = const_str_plain_float64;
    tmp_call_arg_element_798 = const_str_digest_4eb77c193dcdc852a7c6893b20a10c22;
    frame_module->f_lineno = 7434;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_266, tmp_call_arg_element_796, tmp_call_arg_element_797, tmp_call_arg_element_798 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7434;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_267 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_267 == NULL ))
    {
        tmp_called_267 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_267 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7436;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_799 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_800 = const_str_plain_float96;
    tmp_call_arg_element_801 = const_str_digest_230a091930a82c5ae47e29610ee98ceb;
    frame_module->f_lineno = 7438;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_267, tmp_call_arg_element_799, tmp_call_arg_element_800, tmp_call_arg_element_801 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7438;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_268 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_268 == NULL ))
    {
        tmp_called_268 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_268 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7440;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_802 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_803 = const_str_plain_float128;
    tmp_call_arg_element_804 = const_str_digest_68f2fc9da58f977496cfbecb3e9a1b63;
    frame_module->f_lineno = 7445;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_268, tmp_call_arg_element_802, tmp_call_arg_element_803, tmp_call_arg_element_804 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7445;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_269 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_269 == NULL ))
    {
        tmp_called_269 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_269 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7447;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_805 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_806 = const_str_plain_int8;
    tmp_call_arg_element_807 = const_str_digest_16013dbb217eddb123665b01ad7a8d79;
    frame_module->f_lineno = 7448;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_269, tmp_call_arg_element_805, tmp_call_arg_element_806, tmp_call_arg_element_807 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7448;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_270 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_270 == NULL ))
    {
        tmp_called_270 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_270 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7450;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_808 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_809 = const_str_plain_int16;
    tmp_call_arg_element_810 = const_str_digest_d4024ad4bf4a50479c365159e2774bf8;
    frame_module->f_lineno = 7451;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_270, tmp_call_arg_element_808, tmp_call_arg_element_809, tmp_call_arg_element_810 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7451;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_271 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_271 == NULL ))
    {
        tmp_called_271 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_271 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7453;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_811 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_812 = const_str_plain_int32;
    tmp_call_arg_element_813 = const_str_digest_a9c888e44ccfc82082f225adb19e3124;
    frame_module->f_lineno = 7454;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_271, tmp_call_arg_element_811, tmp_call_arg_element_812, tmp_call_arg_element_813 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7454;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_272 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_272 == NULL ))
    {
        tmp_called_272 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_272 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7456;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_814 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_815 = const_str_plain_int64;
    tmp_call_arg_element_816 = const_str_digest_af34f96c203a074881f0e974c302bede;
    frame_module->f_lineno = 7457;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_272, tmp_call_arg_element_814, tmp_call_arg_element_815, tmp_call_arg_element_816 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7457;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );
    tmp_called_273 = GET_STRING_DICT_VALUE( moduledict_numpy$add_newdocs, (Nuitka_StringObject *)const_str_plain_add_newdoc );

    if (unlikely( tmp_called_273 == NULL ))
    {
        tmp_called_273 = GET_STRING_DICT_VALUE( dict_builtin, (Nuitka_StringObject *)const_str_plain_add_newdoc );
    }

    if ( tmp_called_273 == NULL )
    {

        exception_type = INCREASE_REFCOUNT( PyExc_NameError );
        exception_value = UNSTREAM_STRING( &constant_bin[ 50635 ], 32, 0 );
        exception_tb = NULL;

        frame_module->f_lineno = 7459;
        goto frame_exception_exit_1;
    }

    tmp_call_arg_element_817 = const_str_digest_8a3551674d9174096d8a003980610b3f;
    tmp_call_arg_element_818 = const_str_plain_object_;
    tmp_call_arg_element_819 = const_str_digest_6aefdbab2e6ba956a6ca3c39fde030aa;
    frame_module->f_lineno = 7460;
    tmp_unused = CALL_FUNCTION_WITH_ARGS3( tmp_called_273, tmp_call_arg_element_817, tmp_call_arg_element_818, tmp_call_arg_element_819 );
    if ( tmp_unused == NULL )
    {
        assert( ERROR_OCCURED() );

        PyErr_Fetch( &exception_type, &exception_value, (PyObject **)&exception_tb );


        frame_module->f_lineno = 7460;
        goto frame_exception_exit_1;
    }
    Py_DECREF( tmp_unused );

    // Restore frame exception if necessary.
#if 0
    RESTORE_FRAME_EXCEPTION( frame_module );
#endif
    popFrameStack();

    assertFrameObject( frame_module );
    Py_DECREF( frame_module );

    goto frame_no_exception_1;
    frame_exception_exit_1:;
#if 0
    RESTORE_FRAME_EXCEPTION( frame_module );
#endif

    if ( exception_tb == NULL )
    {
        exception_tb = MAKE_TRACEBACK( INCREASE_REFCOUNT( frame_module ) );
    }
    else if ( exception_tb->tb_frame != frame_module )
    {
        PyTracebackObject *traceback_new = (PyTracebackObject *)MAKE_TRACEBACK( INCREASE_REFCOUNT( frame_module ) );
        traceback_new->tb_next = exception_tb;
        exception_tb = traceback_new;
    }

    // Put the previous frame back on top.
    popFrameStack();

#if PYTHON_VERSION >= 340
    frame_module->f_executing -= 1;
#endif
    Py_DECREF( frame_module );

    // Return the error.
    goto module_exception_exit;
    frame_no_exception_1:;

    return MOD_RETURN_VALUE( module_numpy$add_newdocs );
module_exception_exit:
    PyErr_Restore( exception_type, exception_value, (PyObject *)exception_tb );
    return MOD_RETURN_VALUE( NULL );
}
